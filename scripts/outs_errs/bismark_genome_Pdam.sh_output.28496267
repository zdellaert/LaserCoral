Path to genome folder specified as: ./
Aligner to be used: >> Bowtie 2 << (default)
Bismark Genome Preparation - Step I: Preparing folders

Created Bisulfite Genome folder /project/pi_hputnam_uri_edu/zdellaert/LaserCoral/references_Pdam/Bisulfite_Genome/
Created Bisulfite Genome folder /project/pi_hputnam_uri_edu/zdellaert/LaserCoral/references_Pdam/Bisulfite_Genome/CT_conversion/
Created Bisulfite Genome folder /project/pi_hputnam_uri_edu/zdellaert/LaserCoral/references_Pdam/Bisulfite_Genome/GA_conversion/
Bismark Genome Preparation - Step II: Bisulfite converting reference genome

conversions performed:
chromosome	C->T	G->A
NW_020843366.1	2595	2588
NW_020843367.1	149184	148219
NW_020843368.1	5183	5184
NW_020843369.1	706	682
NW_020843370.1	385	376
NW_020843371.1	123	122
NW_020843372.1	90	87
NW_020843373.1	258	268
NW_020843374.1	114	115
NW_020843375.1	5132	5153
NW_020843376.1	451	393
NW_020843377.1	573	584
NW_020843378.1	17560	17922
NW_020843379.1	101095	98972
NW_020843380.1	253	327
NW_020843381.1	395	436
NW_020843382.1	55	61
NW_020843383.1	219	224
NW_020843384.1	233	268
NW_020843385.1	217	195
NW_020843386.1	45277	45292
NW_020843387.1	2736	2553
NW_020843388.1	43034	44364
NW_020843389.1	1638	1664
NW_020843390.1	159	103
NW_020843391.1	209	213
NW_020843392.1	28211	28299
NW_020843393.1	141	156
NW_020843394.1	112	96
NW_020843395.1	219	232
NW_020843396.1	82	72
NW_020843397.1	7893	8133
NW_020843398.1	29282	29372
NW_020843399.1	7858	7713
NW_020843400.1	119	93
NW_020843401.1	174	161
NW_020843402.1	224214	227781
NW_020843403.1	2833	2674
NW_020843404.1	164	153
NW_020843405.1	3342	3423
NW_020843406.1	2979	2945
NW_020843407.1	9893	10482
NW_020843408.1	120	135
NW_020843409.1	443	414
NW_020843410.1	64	82
NW_020843411.1	194	229
NW_020843412.1	49	41
NW_020843413.1	280	294
NW_020843414.1	10229	9845
NW_020843415.1	337	299
NW_020843416.1	6184	5840
NW_020843417.1	676	831
NW_020843418.1	5679	6147
NW_020843419.1	16333	16161
NW_020843420.1	57751	58535
NW_020843421.1	304	275
NW_020843422.1	10780	11591
NW_020843423.1	1227	1272
NW_020843424.1	3691	3753
NW_020843425.1	24861	24166
NW_020843426.1	242	233
NW_020843427.1	4937	4967
NW_020843428.1	156	161
NW_020843429.1	13481	13482
NW_020843430.1	60	53
NW_020843431.1	147	121
NW_020843432.1	146	138
NW_020843433.1	71	58
NW_020843434.1	214	227
NW_020843435.1	192	206
NW_020843436.1	146	282
NW_020843437.1	45	47
NW_020843438.1	445	477
NW_020843439.1	106	83
NW_020843440.1	274	292
NW_020843441.1	462	319
NW_020843442.1	78849	79366
NW_020843443.1	168	179
NW_020843444.1	8116	7908
NW_020843445.1	69	66
NW_020843446.1	192	211
NW_020843447.1	98	149
NW_020843448.1	894	895
NW_020843449.1	148	204
NW_020843450.1	727	742
NW_020843451.1	9043	9472
NW_020843452.1	17948	17735
NW_020843453.1	28660	28448
NW_020843454.1	288	228
NW_020843455.1	108	126
NW_020843456.1	481	510
NW_020843457.1	3405	3400
NW_020843458.1	8850	8807
NW_020843459.1	108	81
NW_020843460.1	3258	3194
NW_020843461.1	85	84
NW_020843462.1	750	831
NW_020843463.1	70	123
NW_020843464.1	10434	10320
NW_020843465.1	103	102
NW_020843466.1	3006	2964
NW_020843467.1	93	83
NW_020843468.1	58	100
NW_020843469.1	168	141
NW_020843470.1	35470	35765
NW_020843471.1	94	92
NW_020843472.1	445	395
NW_020843473.1	2956	2939
NW_020843474.1	7845	7400
NW_020843475.1	104	83
NW_020843476.1	164	150
NW_020843477.1	17080	17376
NW_020843478.1	7890	7799
NW_020843479.1	175	166
NW_020843480.1	15561	16108
NW_020843481.1	3512	3841
NW_020843482.1	2706	2627
NW_020843483.1	139	139
NW_020843484.1	241	201
NW_020843485.1	10355	10244
NW_020843486.1	184	239
NW_020843487.1	197	211
NW_020843488.1	337	335
NW_020843489.1	257	291
NW_020843490.1	147	148
NW_020843491.1	71	99
NW_020843492.1	4575	4518
NW_020843493.1	1788	1712
NW_020843494.1	108	82
NW_020843495.1	53077	51936
NW_020843496.1	106	293
NW_020843497.1	614	632
NW_020843498.1	113	159
NW_020843499.1	29722	29007
NW_020843500.1	405	400
NW_020843501.1	423	391
NW_020843502.1	544	504
NW_020843503.1	102730	103213
NW_020843504.1	11055	10656
NW_020843505.1	4529	4220
NW_020843506.1	132	123
NW_020843507.1	165	150
NW_020843508.1	112	92
NW_020843509.1	5250	5091
NW_020843510.1	144	160
NW_020843511.1	32405	32206
NW_020843512.1	12064	12120
NW_020843513.1	97	109
NW_020843514.1	8638	8645
NW_020843515.1	321	304
NW_020843516.1	97	71
NW_020843517.1	265	250
NW_020843518.1	2457	2427
NW_020843519.1	283	265
NW_020843520.1	102929	102573
NW_020843521.1	56	63
NW_020843522.1	266	283
NW_020843523.1	2830	2828
NW_020843524.1	452	388
NW_020843525.1	193	179
NW_020843526.1	16737	17064
NW_020843527.1	239	229
NW_020843528.1	104	86
NW_020843529.1	461	483
NW_020843530.1	44441	42394
NW_020843531.1	104	102
NW_020843532.1	303	292
NW_020843533.1	213	214
NW_020843534.1	227	207
NW_020843535.1	6126	6315
NW_020843536.1	194	188
NW_020843537.1	57719	57504
NW_020843538.1	25496	25862
NW_020843539.1	123	82
NW_020843540.1	247	230
NW_020843541.1	4304	4321
NW_020843542.1	91	116
NW_020843543.1	98	131
NW_020843544.1	496	531
NW_020843545.1	74	115
NW_020843546.1	173	195
NW_020843547.1	161	155
NW_020843548.1	109	92
NW_020843549.1	200	183
NW_020843550.1	104	130
NW_020843551.1	57	65
NW_020843552.1	240	208
NW_020843553.1	83	77
NW_020843554.1	2134	2117
NW_020843555.1	87	83
NW_020843556.1	139	171
NW_020843557.1	49422	48582
NW_020843558.1	236	228
NW_020843559.1	456	465
NW_020843560.1	86	128
NW_020843561.1	9159	8815
NW_020843562.1	1549	1553
NW_020843563.1	211	225
NW_020843564.1	202	183
NW_020843565.1	224	206
NW_020843566.1	290	275
NW_020843567.1	221	228
NW_020843568.1	70641	71664
NW_020843569.1	192	210
NW_020843570.1	255	180
NW_020843571.1	49	39
NW_020843572.1	3203	3196
NW_020843573.1	176	170
NW_020843574.1	12997	12659
NW_020843575.1	278	252
NW_020843576.1	56953	53906
NW_020843577.1	214	162
NW_020843578.1	124	143
NW_020843579.1	834	860
NW_020843580.1	122	128
NW_020843581.1	256	197
NW_020843582.1	30142	30394
NW_020843583.1	454	387
NW_020843584.1	1558	1673
NW_020843585.1	241	222
NW_020843586.1	188	198
NW_020843587.1	280	234
NW_020843588.1	200	199
NW_020843589.1	16614	17675
NW_020843590.1	4053	3997
NW_020843591.1	73	96
NW_020843592.1	92	89
NW_020843593.1	2032	2030
NW_020843594.1	32	48
NW_020843595.1	155	168
NW_020843596.1	21861	21734
NW_020843597.1	124	112
NW_020843598.1	113	138
NW_020843599.1	105	108
NW_020843600.1	5498	5222
NW_020843601.1	55731	54412
NW_020843602.1	131	118
NW_020843603.1	39	41
NW_020843604.1	3111	3270
NW_020843605.1	321	372
NW_020843606.1	69517	70166
NW_020843607.1	59	64
NW_020843608.1	394	358
NW_020843609.1	79	93
NW_020843610.1	4114	4065
NW_020843611.1	3085	2975
NW_020843612.1	110246	109983
NW_020843613.1	357	343
NW_020843614.1	87458	84466
NW_020843615.1	272	277
NW_020843616.1	2127	2061
NW_020843617.1	126	121
NW_020843618.1	197	200
NW_020843619.1	90	112
NW_020843620.1	30791	34296
NW_020843621.1	1662	1840
NW_020843622.1	137	202
NW_020843623.1	273	321
NW_020843624.1	88	101
NW_020843625.1	14179	14981
NW_020843626.1	429	419
NW_020843627.1	192	196
NW_020843628.1	341	275
NW_020843629.1	115	121
NW_020843630.1	244	220
NW_020843631.1	52295	53174
NW_020843632.1	6746	6634
NW_020843633.1	13315	14202
NW_020843634.1	1451	1368
NW_020843635.1	138	110
NW_020843636.1	1197	1112
NW_020843637.1	184	215
NW_020843638.1	242	288
NW_020843639.1	286	280
NW_020843640.1	98	87
NW_020843641.1	177	195
NW_020843642.1	93	75
NW_020843643.1	741	645
NW_020843644.1	136816	132991
NW_020843645.1	51426	52025
NW_020843646.1	24019	24148
NW_020843647.1	5730	5833
NW_020843648.1	190	195
NW_020843649.1	7450	7314
NW_020843650.1	104	108
NW_020843651.1	16509	16055
NW_020843652.1	35	54
NW_020843653.1	113	80
NW_020843654.1	80	130
NW_020843655.1	56408	57138
NW_020843656.1	398	422
NW_020843657.1	266	232
NW_020843658.1	312	328
NW_020843659.1	23505	22096
NW_020843660.1	32142	31945
NW_020843661.1	698	637
NW_020843662.1	129	151
NW_020843663.1	106	114
NW_020843664.1	281	271
NW_020843665.1	12264	12764
NW_020843666.1	91	70
NW_020843667.1	100	98
NW_020843668.1	106	113
NW_020843669.1	1984	2093
NW_020843670.1	54122	55255
NW_020843671.1	278	246
NW_020843672.1	3913	3831
NW_020843673.1	17330	17821
NW_020843674.1	64	89
NW_020843675.1	26616	26628
NW_020843676.1	79	77
NW_020843677.1	111	92
NW_020843678.1	137	177
NW_020843679.1	8386	8401
NW_020843680.1	14192	14318
NW_020843681.1	334	283
NW_020843682.1	47225	47807
NW_020843683.1	108	102
NW_020843684.1	16104	15777
NW_020843685.1	263	230
NW_020843686.1	120	98
NW_020843687.1	108	110
NW_020843688.1	132	67
NW_020843689.1	135	137
NW_020843690.1	65450	65009
NW_020843691.1	92	121
NW_020843692.1	2011	1993
NW_020843693.1	8599	8607
NW_020843694.1	100	85
NW_020843695.1	333	357
NW_020843696.1	111	137
NW_020843697.1	303	240
NW_020843698.1	38399	40317
NW_020843699.1	54	68
NW_020843700.1	35962	35296
NW_020843701.1	332	259
NW_020843702.1	66	60
NW_020843703.1	54531	55140
NW_020843704.1	2152	2102
NW_020843705.1	116	81
NW_020843706.1	225	290
NW_020843707.1	597	617
NW_020843708.1	3032	3129
NW_020843709.1	267	263
NW_020843710.1	128	118
NW_020843711.1	73	80
NW_020843712.1	147	156
NW_020843713.1	788	755
NW_020843714.1	52	35
NW_020843715.1	692	724
NW_020843716.1	65025	65496
NW_020843717.1	37209	36921
NW_020843718.1	282	245
NW_020843719.1	525	445
NW_020843720.1	541	527
NW_020843721.1	88	121
NW_020843722.1	368	293
NW_020843723.1	17210	17940
NW_020843724.1	194	241
NW_020843725.1	3154	3001
NW_020843726.1	101	84
NW_020843727.1	172	137
NW_020843728.1	531	423
NW_020843729.1	124	167
NW_020843730.1	75	66
NW_020843731.1	2627	2729
NW_020843732.1	346	394
NW_020843733.1	175	218
NW_020843734.1	477	363
NW_020843735.1	278	265
NW_020843736.1	53965	50828
NW_020843737.1	109	111
NW_020843738.1	14538	14674
NW_020843739.1	57479	58314
NW_020843740.1	62	71
NW_020843741.1	64	67
NW_020843742.1	182	153
NW_020843743.1	71	74
NW_020843744.1	417	429
NW_020843745.1	97	112
NW_020843746.1	85	101
NW_020843747.1	3103	3256
NW_020843748.1	146	139
NW_020843749.1	72	69
NW_020843750.1	88	74
NW_020843751.1	56404	56145
NW_020843752.1	247	310
NW_020843753.1	225	214
NW_020843754.1	243	244
NW_020843755.1	169	190
NW_020843756.1	128	146
NW_020843757.1	10828	10734
NW_020843758.1	111	129
NW_020843759.1	334	316
NW_020843760.1	51224	50352
NW_020843761.1	19712	19935
NW_020843762.1	282	324
NW_020843763.1	69	53
NW_020843764.1	174	170
NW_020843765.1	372	397
NW_020843766.1	86	92
NW_020843767.1	296	246
NW_020843768.1	553	491
NW_020843769.1	348	335
NW_020843770.1	258	212
NW_020843771.1	71774	71578
NW_020843772.1	219	143
NW_020843773.1	172	180
NW_020843774.1	74	95
NW_020843775.1	123	116
NW_020843776.1	306	249
NW_020843777.1	77	88
NW_020843778.1	5202	5400
NW_020843779.1	4703	4693
NW_020843780.1	434	484
NW_020843781.1	650	677
NW_020843782.1	267	307
NW_020843783.1	7500	7414
NW_020843784.1	297	293
NW_020843785.1	362	348
NW_020843786.1	129	94
NW_020843787.1	88	61
NW_020843788.1	23689	23961
NW_020843789.1	3451	3336
NW_020843790.1	3206	3195
NW_020843791.1	62	90
NW_020843792.1	3442	3525
NW_020843793.1	85	79
NW_020843794.1	10179	9956
NW_020843795.1	127	119
NW_020843796.1	3505	3207
NW_020843797.1	106	173
NW_020843798.1	12246	12098
NW_020843799.1	344	301
NW_020843800.1	320	340
NW_020843801.1	30340	30281
NW_020843802.1	41	61
NW_020843803.1	615	627
NW_020843804.1	730	827
NW_020843805.1	257	231
NW_020843806.1	193	175
NW_020843807.1	311	357
NW_020843808.1	594	640
NW_020843809.1	353	370
NW_020843810.1	305	280
NW_020843811.1	238	249
NW_020843812.1	1005	1027
NW_020843813.1	102	131
NW_020843814.1	99	116
NW_020843815.1	190	227
NW_020843816.1	9885	9813
NW_020843817.1	183	220
NW_020843818.1	109	122
NW_020843819.1	61	74
NW_020843820.1	94	72
NW_020843821.1	140	176
NW_020843822.1	398	413
NW_020843823.1	53624	53878
NW_020843824.1	113	106
NW_020843825.1	67	87
NW_020843826.1	12944	12456
NW_020843827.1	113	113
NW_020843828.1	276	272
NW_020843829.1	396605	395734
NW_020843830.1	52	60
NW_020843831.1	1111	1163
NW_020843832.1	529	486
NW_020843833.1	107	84
NW_020843834.1	236089	235170
NW_020843835.1	97	71
NW_020843836.1	9692	9566
NW_020843837.1	137515	135807
NW_020843838.1	6824	6818
NW_020843839.1	696	704
NW_020843840.1	115	94
NW_020843841.1	200	191
NW_020843842.1	37328	37330
NW_020843843.1	452	350
NW_020843844.1	126	114
NW_020843845.1	175	186
NW_020843846.1	39853	39528
NW_020843847.1	84	67
NW_020843848.1	57545	58545
NW_020843849.1	145	131
NW_020843850.1	352	355
NW_020843851.1	85	101
NW_020843852.1	934	897
NW_020843853.1	276	271
NW_020843854.1	268	339
NW_020843855.1	245	239
NW_020843856.1	96	102
NW_020843857.1	95	151
NW_020843858.1	210	265
NW_020843859.1	256	241
NW_020843860.1	14248	15144
NW_020843861.1	71	66
NW_020843862.1	38710	40253
NW_020843863.1	637	749
NW_020843864.1	92	90
NW_020843865.1	207	259
NW_020843866.1	205	252
NW_020843867.1	224	237
NW_020843868.1	527	562
NW_020843869.1	186	178
NW_020843870.1	174	146
NW_020843871.1	80	95
NW_020843872.1	224	180
NW_020843873.1	267	261
NW_020843874.1	186	246
NW_020843875.1	210	239
NW_020843876.1	527	509
NW_020843877.1	577	529
NW_020843878.1	24444	24027
NW_020843879.1	171	198
NW_020843880.1	277	267
NW_020843881.1	374	437
NW_020843882.1	53931	53342
NW_020843883.1	4643	4274
NW_020843884.1	64	63
NW_020843885.1	242	209
NW_020843886.1	30683	31119
NW_020843887.1	187	208
NW_020843888.1	10054	9918
NW_020843889.1	3721	3717
NW_020843890.1	100	118
NW_020843891.1	2470	2590
NW_020843892.1	828	827
NW_020843893.1	12095	12291
NW_020843894.1	80	80
NW_020843895.1	101	102
NW_020843896.1	116	90
NW_020843897.1	12674	13172
NW_020843898.1	3892	3826
NW_020843899.1	10146	10234
NW_020843900.1	16542	17174
NW_020843901.1	287	276
NW_020843902.1	110	126
NW_020843903.1	47521	48464
NW_020843904.1	233	225
NW_020843905.1	76	114
NW_020843906.1	25365	25578
NW_020843907.1	10821	11082
NW_020843908.1	20395	20480
NW_020843909.1	4856	4800
NW_020843910.1	6619	6330
NW_020843911.1	23335	23936
NW_020843912.1	171	163
NW_020843913.1	40849	40637
NW_020843914.1	3763	3778
NW_020843915.1	20398	19215
NW_020843916.1	337	315
NW_020843917.1	263	314
NW_020843918.1	307	265
NW_020843919.1	134	175
NW_020843920.1	3462	3694
NW_020843921.1	359	436
NW_020843922.1	382	322
NW_020843923.1	123	127
NW_020843924.1	55	51
NW_020843925.1	1207	1009
NW_020843926.1	7428	7538
NW_020843927.1	114	125
NW_020843928.1	113	143
NW_020843929.1	114	88
NW_020843930.1	14197	13787
NW_020843931.1	1003	922
NW_020843932.1	426	449
NW_020843933.1	243	238
NW_020843934.1	36390	36836
NW_020843935.1	44730	44383
NW_020843936.1	14326	14343
NW_020843937.1	15740	15972
NW_020843938.1	9384	9365
NW_020843939.1	47438	47681
NW_020843940.1	271	292
NW_020843941.1	28592	28553
NW_020843942.1	240	243
NW_020843943.1	1720	1604
NW_020843944.1	1337	1385
NW_020843945.1	39274	38911
NW_020843946.1	155	162
NW_020843947.1	350	405
NW_020843948.1	628	632
NW_020843949.1	184	181
NW_020843950.1	169	186
NW_020843951.1	89	92
NW_020843952.1	314	280
NW_020843953.1	5529	6198
NW_020843954.1	2831	2655
NW_020843955.1	50707	51643
NW_020843956.1	373	382
NW_020843957.1	21648	22407
NW_020843958.1	33124	32869
NW_020843959.1	128	160
NW_020843960.1	1857	1921
NW_020843961.1	74	75
NW_020843962.1	86	103
NW_020843963.1	120	118
NW_020843964.1	5340	5466
NW_020843965.1	167	138
NW_020843966.1	19938	20293
NW_020843967.1	2244	2116
NW_020843968.1	128	125
NW_020843969.1	79	57
NW_020843970.1	95	98
NW_020843971.1	3012	2785
NW_020843972.1	78	120
NW_020843973.1	97	167
NW_020843974.1	308	316
NW_020843975.1	392	360
NW_020843976.1	1019	1049
NW_020843977.1	10823	11348
NW_020843978.1	1818	2195
NW_020843979.1	65	60
NW_020843980.1	379	319
NW_020843981.1	150	142
NW_020843982.1	6345	6102
NW_020843983.1	368	350
NW_020843984.1	111	118
NW_020843985.1	23671	23127
NW_020843986.1	10270	10770
NW_020843987.1	70073	69615
NW_020843988.1	15207	15218
NW_020843989.1	411	333
NW_020843990.1	43075	42870
NW_020843991.1	1413	1247
NW_020843992.1	216	213
NW_020843993.1	248	269
NW_020843994.1	69358	69656
NW_020843995.1	330	316
NW_020843996.1	155	190
NW_020843997.1	540	511
NW_020843998.1	148	158
NW_020843999.1	252	236
NW_020844000.1	16864	16746
NW_020844001.1	236	261
NW_020844002.1	63373	63989
NW_020844003.1	17970	17264
NW_020844004.1	4569	4523
NW_020844005.1	139	115
NW_020844006.1	190	194
NW_020844007.1	431	369
NW_020844008.1	168	172
NW_020844009.1	94	76
NW_020844010.1	157	130
NW_020844011.1	283	253
NW_020844012.1	8032	7770
NW_020844013.1	584	582
NW_020844014.1	53529	52298
NW_020844015.1	307	298
NW_020844016.1	177	176
NW_020844017.1	26807	27029
NW_020844018.1	12592	12183
NW_020844019.1	5073	4629
NW_020844020.1	54	65
NW_020844021.1	260	253
NW_020844022.1	72	66
NW_020844023.1	186	173
NW_020844024.1	82	82
NW_020844025.1	218	222
NW_020844026.1	172	153
NW_020844027.1	88	95
NW_020844028.1	694	694
NW_020844029.1	122	137
NW_020844030.1	201	219
NW_020844031.1	139375	140496
NW_020844032.1	10541	10369
NW_020844033.1	100	111
NW_020844034.1	3873	4032
NW_020844035.1	39414	40607
NW_020844036.1	15719	15724
NW_020844037.1	98	110
NW_020844038.1	172	171
NW_020844039.1	88	97
NW_020844040.1	3262	3360
NW_020844041.1	26407	26469
NW_020844042.1	158	160
NW_020844043.1	133	126
NW_020844044.1	315	283
NW_020844045.1	72	61
NW_020844046.1	811	813
NW_020844047.1	3848	3996
NW_020844048.1	228	190
NW_020844049.1	55	51
NW_020844050.1	24497	24587
NW_020844051.1	164	165
NW_020844052.1	19824	20929
NW_020844053.1	205	236
NW_020844054.1	3426	3401
NW_020844055.1	1265	1222
NW_020844056.1	105	116
NW_020844057.1	399	325
NW_020844058.1	1568	1544
NW_020844059.1	46951	47169
NW_020844060.1	16022	16496
NW_020844061.1	12037	11846
NW_020844062.1	557	519
NW_020844063.1	56049	55752
NW_020844064.1	81	81
NW_020844065.1	2471	2606
NW_020844066.1	234	221
NW_020844067.1	194	189
NW_020844068.1	83	67
NW_020844069.1	903	907
NW_020844070.1	178	165
NW_020844071.1	2408	2544
NW_020844072.1	210	158
NW_020844073.1	21988	21984
NW_020844074.1	526	568
NW_020844075.1	2944	3369
NW_020844076.1	218	212
NW_020844077.1	140	129
NW_020844078.1	17609	17548
NW_020844079.1	315	262
NW_020844080.1	23342	23207
NW_020844081.1	323	305
NW_020844082.1	43	49
NW_020844083.1	188	183
NW_020844084.1	273	376
NW_020844085.1	3609	3321
NW_020844086.1	124	140
NW_020844087.1	4974	4931
NW_020844088.1	402	314
NW_020844089.1	260	238
NW_020844090.1	204	210
NW_020844091.1	159	169
NW_020844092.1	26287	25387
NW_020844093.1	145	151
NW_020844094.1	16571	16212
NW_020844095.1	52718	51504
NW_020844096.1	123	121
NW_020844097.1	21168	21388
NW_020844098.1	1176	1114
NW_020844099.1	1923	1968
NW_020844100.1	5564	5703
NW_020844101.1	156	160
NW_020844102.1	10479	10254
NW_020844103.1	76209	77685
NW_020844104.1	216	231
NW_020844105.1	74	62
NW_020844106.1	3576	3462
NW_020844107.1	103	100
NW_020844108.1	31	63
NW_020844109.1	99	101
NW_020844110.1	623	536
NW_020844111.1	62	115
NW_020844112.1	305	332
NW_020844113.1	137	148
NW_020844114.1	165	132
NW_020844115.1	96169	97980
NW_020844116.1	101	90
NW_020844117.1	298	287
NW_020844118.1	27783	26714
NW_020844119.1	582	903
NW_020844120.1	336	260
NW_020844121.1	465	401
NW_020844122.1	233	203
NW_020844123.1	6038	6176
NW_020844124.1	4788	4758
NW_020844125.1	232	207
NW_020844126.1	357	334
NW_020844127.1	4692	4229
NW_020844128.1	56	57
NW_020844129.1	90	103
NW_020844130.1	440	456
NW_020844131.1	89	71
NW_020844132.1	126	137
NW_020844133.1	10056	10491
NW_020844134.1	384	399
NW_020844135.1	24053	24108
NW_020844136.1	116	79
NW_020844137.1	201	194
NW_020844138.1	85	83
NW_020844139.1	370	363
NW_020844140.1	3276	3328
NW_020844141.1	173	193
NW_020844142.1	14222	13557
NW_020844143.1	233	192
NW_020844144.1	4186	4273
NW_020844145.1	86	100
NW_020844146.1	47580	47925
NW_020844147.1	6017	5649
NW_020844148.1	71	80
NW_020844149.1	466	519
NW_020844150.1	28082	28390
NW_020844151.1	71	88
NW_020844152.1	140580	140747
NW_020844153.1	133348	132396
NW_020844154.1	297	277
NW_020844155.1	64619	64163
NW_020844156.1	135	128
NW_020844157.1	338	392
NW_020844158.1	28830	29634
NW_020844159.1	382	373
NW_020844160.1	2389	2656
NW_020844161.1	31680	31704
NW_020844162.1	2957	2912
NW_020844163.1	290	508
NW_020844164.1	24047	23163
NW_020844165.1	14037	15215
NW_020844166.1	288	261
NW_020844167.1	97	82
NW_020844168.1	27773	26442
NW_020844169.1	68664	66090
NW_020844170.1	102	82
NW_020844171.1	3288	3330
NW_020844172.1	5505	5138
NW_020844173.1	68105	66740
NW_020844174.1	97939	96718
NW_020844175.1	195	159
NW_020844176.1	3564	3480
NW_020844177.1	20554	20835
NW_020844178.1	125	135
NW_020844179.1	16912	16701
NW_020844180.1	38	44
NW_020844181.1	2154	2120
NW_020844182.1	255	276
NW_020844183.1	2073	1945
NW_020844184.1	16647	16780
NW_020844185.1	1716	1840
NW_020844186.1	126	111
NW_020844187.1	1668	1832
NW_020844188.1	360	407
NW_020844189.1	17223	17007
NW_020844190.1	115	114
NW_020844191.1	81	52
NW_020844192.1	199	213
NW_020844193.1	208	197
NW_020844194.1	1444	1440
NW_020844195.1	3846	3820
NW_020844196.1	452	469
NW_020844197.1	8724	9065
NW_020844198.1	29571	32119
NW_020844199.1	105	146
NW_020844200.1	103	107
NW_020844201.1	35847	35606
NW_020844202.1	69	61
NW_020844203.1	12671	12323
NW_020844204.1	167	156
NW_020844205.1	189	131
NW_020844206.1	85	93
NW_020844207.1	1822	1574
NW_020844208.1	77	90
NW_020844209.1	4676	4860
NW_020844210.1	2454	2392
NW_020844211.1	5647	5435
NW_020844212.1	75493	76044
NW_020844213.1	234	218
NW_020844214.1	61	69
NW_020844215.1	121	118
NW_020844216.1	297	285
NW_020844217.1	503	493
NW_020844218.1	51735	50153
NW_020844219.1	271	343
NW_020844220.1	128	139
NW_020844221.1	144	126
NW_020844222.1	144	154
NW_020844223.1	71	71
NW_020844224.1	157	201
NW_020844225.1	125	126
NW_020844226.1	181	217
NW_020844227.1	116	126
NW_020844228.1	109	110
NW_020844229.1	181	111
NW_020844230.1	1601	1663
NW_020844231.1	209	254
NW_020844232.1	233	239
NW_020844233.1	160	182
NW_020844234.1	158	214
NW_020844235.1	27935	27903
NW_020844236.1	7576	7430
NW_020844237.1	467	498
NW_020844238.1	102	108
NW_020844239.1	1615	1757
NW_020844240.1	1199	1112
NW_020844241.1	75	71
NW_020844242.1	1797	1743
NW_020844243.1	95	63
NW_020844244.1	57	61
NW_020844245.1	458	450
NW_020844246.1	21366	22195
NW_020844247.1	7954	7861
NW_020844248.1	61154	60809
NW_020844249.1	201	258
NW_020844250.1	270	245
NW_020844251.1	475	470
NW_020844252.1	142	117
NW_020844253.1	392	405
NW_020844254.1	38	44
NW_020844255.1	257	191
NW_020844256.1	79	85
NW_020844257.1	18492	19145
NW_020844258.1	4557	4750
NW_020844259.1	258	215
NW_020844260.1	107	94
NW_020844261.1	314	195
NW_020844262.1	69887	68656
NW_020844263.1	1431	1424
NW_020844264.1	23218	24295
NW_020844265.1	14917	15033
NW_020844266.1	134826	136196
NW_020844267.1	708	755
NW_020844268.1	12017	12448
NW_020844269.1	295	259
NW_020844270.1	140633	139518
NW_020844271.1	46983	45518
NW_020844272.1	82	63
NW_020844273.1	6203	6006
NW_020844274.1	80	64
NW_020844275.1	189	173
NW_020844276.1	183	160
NW_020844277.1	51	65
NW_020844278.1	47	50
NW_020844279.1	292	345
NW_020844280.1	21444	19924
NW_020844281.1	78	86
NW_020844282.1	93	81
NW_020844283.1	34833	34177
NW_020844284.1	90	94
NW_020844285.1	78	102
NW_020844286.1	3787	4006
NW_020844287.1	23890	23770
NW_020844288.1	356	359
NW_020844289.1	132	154
NW_020844290.1	14119	14425
NW_020844291.1	2310	2220
NW_020844292.1	1243	1430
NW_020844293.1	239	167
NW_020844294.1	68	72
NW_020844295.1	246	226
NW_020844296.1	167	173
NW_020844297.1	5094	5109
NW_020844298.1	62	66
NW_020844299.1	3757	3955
NW_020844300.1	312	315
NW_020844301.1	72	73
NW_020844302.1	342	339
NW_020844303.1	155	127
NW_020844304.1	168	160
NW_020844305.1	30394	28803
NW_020844306.1	340	398
NW_020844307.1	352	335
NW_020844308.1	313	256
NW_020844309.1	86	84
NW_020844310.1	326	288
NW_020844311.1	105	81
NW_020844312.1	173	190
NW_020844313.1	1700	1578
NW_020844314.1	295	327
NW_020844315.1	4902	5115
NW_020844316.1	93	108
NW_020844317.1	106	119
NW_020844318.1	263	283
NW_020844319.1	116	118
NW_020844320.1	100	95
NW_020844321.1	810	940
NW_020844322.1	240	272
NW_020844323.1	200	210
NW_020844324.1	3638	3721
NW_020844325.1	228	211
NW_020844326.1	749	805
NW_020844327.1	31592	31594
NW_020844328.1	612	566
NW_020844329.1	724	740
NW_020844330.1	127	128
NW_020844331.1	93	93
NW_020844332.1	56216	55023
NW_020844333.1	402	351
NW_020844334.1	59	84
NW_020844335.1	3949	3861
NW_020844336.1	67	74
NW_020844337.1	45	36
NW_020844338.1	10668	10664
NW_020844339.1	85	105
NW_020844340.1	2936	2913
NW_020844341.1	8973	8982
NW_020844342.1	911	945
NW_020844343.1	46802	46677
NW_020844344.1	290	288
NW_020844345.1	88	99
NW_020844346.1	175	133
NW_020844347.1	675	704
NW_020844348.1	36775	36458
NW_020844349.1	17366	17775
NW_020844350.1	40858	41850
NW_020844351.1	85	72
NW_020844352.1	114	124
NW_020844353.1	8160	8184
NW_020844354.1	1412	1437
NW_020844355.1	4590	4321
NW_020844356.1	1012	980
NW_020844357.1	35857	36142
NW_020844358.1	590	608
NW_020844359.1	493	521
NW_020844360.1	639	623
NW_020844361.1	616	612
NW_020844362.1	103	114
NW_020844363.1	157939	159788
NW_020844364.1	75	69
NW_020844365.1	2138	2129
NW_020844366.1	281	280
NW_020844367.1	989	984
NW_020844368.1	362	386
NW_020844369.1	33763	34908
NW_020844370.1	4809	4997
NW_020844371.1	123	131
NW_020844372.1	33588	33203
NW_020844373.1	2750	3120
NW_020844374.1	2757	2763
NW_020844375.1	5823	5699
NW_020844376.1	306	264
NW_020844377.1	320	312
NW_020844378.1	6097	6075
NW_020844379.1	56736	56879
NW_020844380.1	4728	4763
NW_020844381.1	72	71
NW_020844382.1	81	76
NW_020844383.1	285	235
NW_020844384.1	318	357
NW_020844385.1	159	114
NW_020844386.1	1144	1177
NW_020844387.1	60	50
NW_020844388.1	95	110
NW_020844389.1	2927	2809
NW_020844390.1	72	83
NW_020844391.1	158	179
NW_020844392.1	119	158
NW_020844393.1	133	101
NW_020844394.1	6139	6289
NW_020844395.1	100	112
NW_020844396.1	137	154
NW_020844397.1	15945	15619
NW_020844398.1	89	98
NW_020844399.1	288	269
NW_020844400.1	28205	27745
NW_020844401.1	35852	34528
NW_020844402.1	394	481
NW_020844403.1	84151	83792
NW_020844404.1	278	324
NW_020844405.1	95	41
NW_020844406.1	234	235
NW_020844407.1	147	154
NW_020844408.1	3647	4143
NW_020844409.1	103	105
NW_020844410.1	90067	89748
NW_020844411.1	213	146
NW_020844412.1	12649	13547
NW_020844413.1	262	259
NW_020844414.1	5217	5446
NW_020844415.1	92	104
NW_020844416.1	5482	5264
NW_020844417.1	237	212
NW_020844418.1	87881	88796
NW_020844419.1	397	476
NW_020844420.1	230	246
NW_020844421.1	31470	33101
NW_020844422.1	289	359
NW_020844423.1	154	147
NW_020844424.1	254	280
NW_020844425.1	124	789
NW_020844426.1	6388	6089
NW_020844427.1	213	158
NW_020844428.1	179	174
NW_020844429.1	94	61
NW_020844430.1	67	119
NW_020844431.1	647	612
NW_020844432.1	3517	3577
NW_020844433.1	6848	7308
NW_020844434.1	229	197
NW_020844435.1	6139	6277
NW_020844436.1	100	84
NW_020844437.1	2219	2109
NW_020844438.1	492	450
NW_020844439.1	6168	6202
NW_020844440.1	441	368
NW_020844441.1	86	85
NW_020844442.1	239	230
NW_020844443.1	205	258
NW_020844444.1	193	180
NW_020844445.1	148	136
NW_020844446.1	427	406
NW_020844447.1	72951	72589
NW_020844448.1	555	524
NW_020844449.1	91	91
NW_020844450.1	5119	5250
NW_020844451.1	113	103
NW_020844452.1	525	489
NW_020844453.1	9195	9812
NW_020844454.1	15227	15592
NW_020844455.1	84	74
NW_020844456.1	4584	4346
NW_020844457.1	67	50
NW_020844458.1	2165	2330
NW_020844459.1	73	100
NW_020844460.1	76	72
NW_020844461.1	456	491
NW_020844462.1	264	270
NW_020844463.1	108914	105783
NW_020844464.1	2177	2164
NW_020844465.1	11308	11399
NW_020844466.1	127	129
NW_020844467.1	16220	17528
NW_020844468.1	33258	34196
NW_020844469.1	336	312
NW_020844470.1	279	254
NW_020844471.1	224	231
NW_020844472.1	252	269
NW_020844473.1	5286	5521
NW_020844474.1	616	533
NW_020844475.1	37496	36889
NW_020844476.1	688	674
NW_020844477.1	93	88
NW_020844478.1	84	102
NW_020844479.1	35236	34853
NW_020844480.1	90	76
NW_020844481.1	56	45
NW_020844482.1	249	279
NW_020844483.1	239	228
NW_020844484.1	656	716
NW_020844485.1	241	280
NW_020844486.1	4095	4138
NW_020844487.1	132832	131842
NW_020844488.1	688	738
NW_020844489.1	121	121
NW_020844490.1	181	160
NW_020844491.1	76	82
NW_020844492.1	356	332
NW_020844493.1	2494	2515
NW_020844494.1	182341	181494
NW_020844495.1	40599	39556
NW_020844496.1	5356	5303
NW_020844497.1	35	53
NW_020844498.1	341	334
NW_020844499.1	2232	2236
NW_020844500.1	54921	55443
NW_020844501.1	167	150
NW_020844502.1	70	97
NW_020844503.1	1931	1909
NW_020844504.1	72	90
NW_020844505.1	181	180
NW_020844506.1	171	207
NW_020844507.1	71	73
NW_020844508.1	89	70
NW_020844509.1	9390	9452
NW_020844510.1	32060	31612
NW_020844511.1	415	465
NW_020844512.1	15541	15913
NW_020844513.1	443	449
NW_020844514.1	96	68
NW_020844515.1	36906	37171
NW_020844516.1	121	117
NW_020844517.1	1914	1894
NW_020844518.1	53786	51947
NW_020844519.1	33393	32283
NW_020844520.1	78	104
NW_020844521.1	4554	4495
NW_020844522.1	89	108
NW_020844523.1	197	159
NW_020844524.1	114	104
NW_020844525.1	114	102
NW_020844526.1	61	68
NW_020844527.1	105	129
NW_020844528.1	254	266
NW_020844529.1	136	97
NW_020844530.1	12524	12216
NW_020844531.1	894	1056
NW_020844532.1	66	78
NW_020844533.1	2810	2618
NW_020844534.1	88440	87849
NW_020844535.1	8556	7439
NW_020844536.1	106	71
NW_020844537.1	174	160
NW_020844538.1	89439	90183
NW_020844539.1	193	210
NW_020844540.1	89	83
NW_020844541.1	118	113
NW_020844542.1	480	476
NW_020844543.1	1064	1189
NW_020844544.1	416	506
NW_020844545.1	314	301
NW_020844546.1	24860	25116
NW_020844547.1	128	127
NW_020844548.1	262	311
NW_020844549.1	171	156
NW_020844550.1	6560	6502
NW_020844551.1	4446	4367
NW_020844552.1	91696	90889
NW_020844553.1	388	286
NW_020844554.1	176	222
NW_020844555.1	436	235
NW_020844556.1	3065	3117
NW_020844557.1	5766	5571
NW_020844558.1	178	195
NW_020844559.1	320	322
NW_020844560.1	88	105
NW_020844561.1	4376	4707
NW_020844562.1	94	113
NW_020844563.1	296	334
NW_020844564.1	6208	6320
NW_020844565.1	178	177
NW_020844566.1	4389	4079
NW_020844567.1	312	291
NW_020844568.1	3435	3445
NW_020844569.1	116	103
NW_020844570.1	218	232
NW_020844571.1	87	92
NW_020844572.1	195	146
NW_020844573.1	167776	166618
NW_020844574.1	1472	1492
NW_020844575.1	270	335
NW_020844576.1	37499	36411
NW_020844577.1	1624	1821
NW_020844578.1	204	243
NW_020844579.1	7864	7644
NW_020844580.1	69	61
NW_020844581.1	3488	3874
NW_020844582.1	410	357
NW_020844583.1	808	897
NW_020844584.1	46	61
NW_020844585.1	179	183
NW_020844586.1	765	805
NW_020844587.1	2605	2579
NW_020844588.1	548	747
NW_020844589.1	33578	31692
NW_020844590.1	168	204
NW_020844591.1	288	250
NW_020844592.1	168	233
NW_020844593.1	252	222
NW_020844594.1	274	341
NW_020844595.1	4179	3916
NW_020844596.1	75	65
NW_020844597.1	38157	36927
NW_020844598.1	97	95
NW_020844599.1	15686	15734
NW_020844600.1	599	646
NW_020844601.1	170	160
NW_020844602.1	808	799
NW_020844603.1	288	236
NW_020844604.1	155	122
NW_020844605.1	828	1041
NW_020844606.1	273	266
NW_020844607.1	1046	1156
NW_020844608.1	380	300
NW_020844609.1	3680	3401
NW_020844610.1	26706	25750
NW_020844611.1	207	197
NW_020844612.1	65	60
NW_020844613.1	158	176
NW_020844614.1	180	152
NW_020844615.1	186	173
NW_020844616.1	74	63
NW_020844617.1	227	246
NW_020844618.1	603	614
NW_020844619.1	81	90
NW_020844620.1	286	234
NW_020844621.1	81	106
NW_020844622.1	224	235
NW_020844623.1	103	101
NW_020844624.1	895	918
NW_020844625.1	84	92
NW_020844626.1	212	231
NW_020844627.1	240	238
NW_020844628.1	4233	3928
NW_020844629.1	1032	1125
NW_020844630.1	6920	7024
NW_020844631.1	230	243
NW_020844632.1	7728	7174
NW_020844633.1	45	46
NW_020844634.1	25658	25687
NW_020844635.1	36256	36730
NW_020844636.1	6008	6272
NW_020844637.1	62	59
NW_020844638.1	54723	55495
NW_020844639.1	47608	47579
NW_020844640.1	900	856
NW_020844641.1	11955	11601
NW_020844642.1	3128	3073
NW_020844643.1	34484	32937
NW_020844644.1	86	82
NW_020844645.1	52042	52258
NW_020844646.1	76	56
NW_020844647.1	54240	52811
NW_020844648.1	95	80
NW_020844649.1	70132	69170
NW_020844650.1	55166	56696
NW_020844651.1	226	231
NW_020844652.1	220	301
NW_020844653.1	734	621
NW_020844654.1	306	340
NW_020844655.1	187	202
NW_020844656.1	110882	111066
NW_020844657.1	203	194
NW_020844658.1	195	242
NW_020844659.1	128	83
NW_020844660.1	111	105
NW_020844661.1	10926	10551
NW_020844662.1	354	353
NW_020844663.1	3360	3671
NW_020844664.1	11206	10853
NW_020844665.1	15502	15299
NW_020844666.1	5288	5354
NW_020844667.1	417	433
NW_020844668.1	92	106
NW_020844669.1	4604	4598
NW_020844670.1	362	318
NW_020844671.1	254	302
NW_020844672.1	140545	138572
NW_020844673.1	102	122
NW_020844674.1	308	295
NW_020844675.1	173	171
NW_020844676.1	60	64
NW_020844677.1	168	188
NW_020844678.1	85	87
NW_020844679.1	96	149
NW_020844680.1	259	228
NW_020844681.1	245	260
NW_020844682.1	4972	4841
NW_020844683.1	25336	24890
NW_020844684.1	5767	5548
NW_020844685.1	141	154
NW_020844686.1	5818	6314
NW_020844687.1	81	100
NW_020844688.1	252	248
NW_020844689.1	197	196
NW_020844690.1	85	70
NW_020844691.1	34805	35311
NW_020844692.1	590	666
NW_020844693.1	382	369
NW_020844694.1	493	502
NW_020844695.1	175	169
NW_020844696.1	141	188
NW_020844697.1	149	124
NW_020844698.1	1772	1601
NW_020844699.1	654	736
NW_020844700.1	165	154
NW_020844701.1	62	98
NW_020844702.1	344	323
NW_020844703.1	59	68
NW_020844704.1	4035	3932
NW_020844705.1	314	191
NW_020844706.1	130	118
NW_020844707.1	100	104
NW_020844708.1	832	712
NW_020844709.1	464	411
NW_020844710.1	1142	949
NW_020844711.1	329	390
NW_020844712.1	406	466
NW_020844713.1	104	91
NW_020844714.1	77	95
NW_020844715.1	236	247
NW_020844716.1	55	53
NW_020844717.1	131	140
NW_020844718.1	15254	15212
NW_020844719.1	8150	8215
NW_020844720.1	110	97
NW_020844721.1	5077	5182
NW_020844722.1	1003	874
NW_020844723.1	16039	16522
NW_020844724.1	77	78
NW_020844725.1	46	65
NW_020844726.1	85	73
NW_020844727.1	95583	96806
NW_020844728.1	94456	96412
NW_020844729.1	241	283
NW_020844730.1	58902	58933
NW_020844731.1	284	280
NW_020844732.1	304	292
NW_020844733.1	102	112
NW_020844734.1	6350	6099
NW_020844735.1	1395	1338
NW_020844736.1	3263	3238
NW_020844737.1	222	220
NW_020844738.1	3969	3886
NW_020844739.1	259	270
NW_020844740.1	118	82
NW_020844741.1	139	168
NW_020844742.1	136	169
NW_020844743.1	359	358
NW_020844744.1	7237	7701
NW_020844745.1	137	161
NW_020844746.1	252	276
NW_020844747.1	227207	229851
NW_020844748.1	54488	52964
NW_020844749.1	290	320
NW_020844750.1	183	320
NW_020844751.1	356	306
NW_020844752.1	31689	30539
NW_020844753.1	89	105
NW_020844754.1	5829	5838
NW_020844755.1	98901	100994
NW_020844756.1	35664	36372
NW_020844757.1	25557	24983
NW_020844758.1	3958	3689
NW_020844759.1	93	73
NW_020844760.1	26596	26082
NW_020844761.1	4434	4511
NW_020844762.1	56	75
NW_020844763.1	112	90
NW_020844764.1	99	109
NW_020844765.1	39043	40816
NW_020844766.1	151	246
NW_020844767.1	90	82
NW_020844768.1	437	406
NW_020844769.1	283	278
NW_020844770.1	354	411
NW_020844771.1	104	106
NW_020844772.1	15760	15283
NW_020844773.1	285	152
NW_020844774.1	99	65
NW_020844775.1	48	63
NW_020844776.1	396	415
NW_020844777.1	728	679
NW_020844778.1	103	100
NW_020844779.1	100	108
NW_020844780.1	265	207
NW_020844781.1	76	105
NW_020844782.1	90677	90983
NW_020844783.1	279	280
NW_020844784.1	420	428
NW_020844785.1	48570	48179
NW_020844786.1	83	85
NW_020844787.1	84	125
NW_020844788.1	19697	20245
NW_020844789.1	185	171
NW_020844790.1	72019	71669
NW_020844791.1	3536	3858
NW_020844792.1	64	60
NW_020844793.1	328	306
NW_020844794.1	475	516
NW_020844795.1	412	428
NW_020844796.1	3737	3721
NW_020844797.1	215	207
NW_020844798.1	79591	80179
NW_020844799.1	3430	3497
NW_020844800.1	162	100
NW_020844801.1	43363	43044
NW_020844802.1	1914	1970
NW_020844803.1	191	182
NW_020844804.1	168	136
NW_020844805.1	160	167
NW_020844806.1	71749	72899
NW_020844807.1	118	143
NW_020844808.1	510	486
NW_020844809.1	6945	7243
NW_020844810.1	635	589
NW_020844811.1	142	112
NW_020844812.1	80	72
NW_020844813.1	310	329
NW_020844814.1	86	106
NW_020844815.1	51999	52277
NW_020844816.1	218	189
NW_020844817.1	462	460
NW_020844818.1	124110	124093
NW_020844819.1	170	125
NW_020844820.1	590	585
NW_020844821.1	104	131
NW_020844822.1	48347	48684
NW_020844823.1	119	93
NW_020844824.1	303	308
NW_020844825.1	51000	52132
NW_020844826.1	204	267
NW_020844827.1	185392	186220
NW_020844828.1	311	262
NW_020844829.1	6304	6249
NW_020844830.1	232	191
NW_020844831.1	845	780
NW_020844832.1	1379	1308
NW_020844833.1	490	470
NW_020844834.1	139	174
NW_020844835.1	313	308
NW_020844836.1	87	87
NW_020844837.1	127283	124202
NW_020844838.1	183	125
NW_020844839.1	66	92
NW_020844840.1	401	426
NW_020844841.1	992	1123
NW_020844842.1	3639	3818
NW_020844843.1	1437	1484
NW_020844844.1	87	85
NW_020844845.1	99	97
NW_020844846.1	2532	2726
NW_020844847.1	382	343
NW_020844848.1	1875	1891
NW_020844849.1	117	115
NW_020844850.1	973	1106
NW_020844851.1	238	233
NW_020844852.1	48	65
NW_020844853.1	274	295
NW_020844854.1	324	271
NW_020844855.1	283	308
NW_020844856.1	64	85
NW_020844857.1	250	216
NW_020844858.1	247	213
NW_020844859.1	1632	1685
NW_020844860.1	81	88
NW_020844861.1	716	702
NW_020844862.1	255	226
NW_020844863.1	396	377
NW_020844864.1	1353	1424
NW_020844865.1	26098	25299
NW_020844866.1	168	168
NW_020844867.1	75078	73319
NW_020844868.1	3953	3760
NW_020844869.1	73	68
NW_020844870.1	146	155
NW_020844871.1	18267	18381
NW_020844872.1	5281	5447
NW_020844873.1	237	180
NW_020844874.1	107	86
NW_020844875.1	47	42
NW_020844876.1	920	1031
NW_020844877.1	297	306
NW_020844878.1	112	108
NW_020844879.1	95	77
NW_020844880.1	284	271
NW_020844881.1	190	244
NW_020844882.1	229	242
NW_020844883.1	162	82
NW_020844884.1	627	618
NW_020844885.1	218	161
NW_020844886.1	6570	6423
NW_020844887.1	64	95
NW_020844888.1	133	140
NW_020844889.1	273	384
NW_020844890.1	290	338
NW_020844891.1	191	194
NW_020844892.1	92156	92304
NW_020844893.1	5266	5227
NW_020844894.1	4580	4740
NW_020844895.1	68148	68418
NW_020844896.1	237	229
NW_020844897.1	548	568
NW_020844898.1	561	498
NW_020844899.1	98	107
NW_020844900.1	59627	59328
NW_020844901.1	4783	4903
NW_020844902.1	116	120
NW_020844903.1	148	166
NW_020844904.1	7388	7489
NW_020844905.1	3792	3732
NW_020844906.1	1000	977
NW_020844907.1	161	204
NW_020844908.1	4328	4279
NW_020844909.1	122	102
NW_020844910.1	181	214
NW_020844911.1	55855	56232
NW_020844912.1	149	266
NW_020844913.1	27594	27510
NW_020844914.1	1981	2054
NW_020844915.1	149	159
NW_020844916.1	45	51
NW_020844917.1	1153	1270
NW_020844918.1	355	335
NW_020844919.1	23210	23314
NW_020844920.1	467	580
NW_020844921.1	722	773
NW_020844922.1	152	154
NW_020844923.1	385	329
NW_020844924.1	134	181
NW_020844925.1	52	88
NW_020844926.1	206	224
NW_020844927.1	17671	18011
NW_020844928.1	123	120
NW_020844929.1	47233	47441
NW_020844930.1	101	94
NW_020844931.1	174	184
NW_020844932.1	5388	5313
NW_020844933.1	183	182
NW_020844934.1	7530	7653
NW_020844935.1	421	372
NW_020844936.1	196	190
NW_020844937.1	28790	28667
NW_020844938.1	539	528
NW_020844939.1	28612	28467
NW_020844940.1	27016	27889
NW_020844941.1	140	129
NW_020844942.1	182	198
NW_020844943.1	354	303
NW_020844944.1	201130	199403
NW_020844945.1	862	774
NW_020844946.1	290	281
NW_020844947.1	94	79
NW_020844948.1	24644	25525
NW_020844949.1	101	103
NW_020844950.1	8133	8230
NW_020844951.1	28171	27784
NW_020844952.1	81	80
NW_020844953.1	342	332
NW_020844954.1	127	136
NW_020844955.1	282	261
NW_020844956.1	2224	1882
NW_020844957.1	227	259
NW_020844958.1	96	120
NW_020844959.1	91	89
NW_020844960.1	7023	7426
NW_020844961.1	171	160
NW_020844962.1	310	295
NW_020844963.1	131	144
NW_020844964.1	241	268
NW_020844965.1	149	186
NW_020844966.1	381	448
NW_020844967.1	60905	61748
NW_020844968.1	15389	15606
NW_020844969.1	119	125
NW_020844970.1	88	90
NW_020844971.1	3913	3882
NW_020844972.1	591	672
NW_020844973.1	100	78
NW_020844974.1	213	186
NW_020844975.1	158	122
NW_020844976.1	60479	60558
NW_020844977.1	131	119
NW_020844978.1	2295	2523
NW_020844979.1	162	158
NW_020844980.1	157	149
NW_020844981.1	37769	36790
NW_020844982.1	3402	3416
NW_020844983.1	58464	60131
NW_020844984.1	138394	136937
NW_020844985.1	90	93
NW_020844986.1	229	254
NW_020844987.1	576	504
NW_020844988.1	60	80
NW_020844989.1	243	260
NW_020844990.1	842	787
NW_020844991.1	57	59
NW_020844992.1	116	70
NW_020844993.1	15361	15271
NW_020844994.1	393	442
NW_020844995.1	21416	20971
NW_020844996.1	2189	1972
NW_020844997.1	1828	1812
NW_020844998.1	7576	7580
NW_020844999.1	480	399
NW_020845000.1	108	100
NW_020845001.1	342	425
NW_020845002.1	227	246
NW_020845003.1	48	48
NW_020845004.1	31166	30698
NW_020845005.1	9908	10052
NW_020845006.1	245	229
NW_020845007.1	119	84
NW_020845008.1	431	431
NW_020845009.1	109	117
NW_020845010.1	3914	3862
NW_020845011.1	81	59
NW_020845012.1	12102	11976
NW_020845013.1	61	60
NW_020845014.1	10015	10246
NW_020845015.1	235	185
NW_020845016.1	42459	42410
NW_020845017.1	110	74
NW_020845018.1	29768	28867
NW_020845019.1	95	92
NW_020845020.1	314	362
NW_020845021.1	5322	5187
NW_020845022.1	16118	16352
NW_020845023.1	265	216
NW_020845024.1	254	197
NW_020845025.1	77	81
NW_020845026.1	19690	18203
NW_020845027.1	7130	7236
NW_020845028.1	134	167
NW_020845029.1	23449	24293
NW_020845030.1	94	77
NW_020845031.1	2743	3176
NW_020845032.1	460	483
NW_020845033.1	551	602
NW_020845034.1	89	107
NW_020845035.1	396	409
NW_020845036.1	95	89
NW_020845037.1	122	161
NW_020845038.1	40351	39128
NW_020845039.1	2131	2160
NW_020845040.1	977	1001
NW_020845041.1	207	227
NW_020845042.1	84	116
NW_020845043.1	77	116
NW_020845044.1	1884	2108
NW_020845045.1	162	214
NW_020845046.1	1300	1344
NW_020845047.1	407	422
NW_020845048.1	500	530
NW_020845049.1	82878	84160
NW_020845050.1	11142	10908
NW_020845051.1	275	198
NW_020845052.1	2941	2794
NW_020845053.1	5155	5432
NW_020845054.1	64970	66514
NW_020845055.1	4096	3995
NW_020845056.1	63	69
NW_020845057.1	275	246
NW_020845058.1	236	281
NW_020845059.1	80	76
NW_020845060.1	507	486
NW_020845061.1	95	123
NW_020845062.1	115	73
NW_020845063.1	13984	14494
NW_020845064.1	392	313
NW_020845065.1	52586	52456
NW_020845066.1	391	328
NW_020845067.1	20077	18779
NW_020845068.1	230	261
NW_020845069.1	61	81
NW_020845070.1	219	214
NW_020845071.1	286	310
NW_020845072.1	158	207
NW_020845073.1	254426	254894
NW_020845074.1	210	266
NW_020845075.1	1367	1201
NW_020845076.1	77	95
NW_020845077.1	81	85
NW_020845078.1	120	140
NW_020845079.1	229	201
NW_020845080.1	167	131
NW_020845081.1	197	213
NW_020845082.1	75	80
NW_020845083.1	240	288
NW_020845084.1	3220	3407
NW_020845085.1	291	285
NW_020845086.1	2137	2253
NW_020845087.1	104	78
NW_020845088.1	390	438
NW_020845089.1	555	552
NW_020845090.1	14003	13457
NW_020845091.1	146	175
NW_020845092.1	153	176
NW_020845093.1	879	771
NW_020845094.1	76	74
NW_020845095.1	12117	11306
NW_020845096.1	101	113
NW_020845097.1	97072	98138
NW_020845098.1	157	169
NW_020845099.1	3870	3775
NW_020845100.1	6056	6563
NW_020845101.1	407	553
NW_020845102.1	168	180
NW_020845103.1	1602	1817
NW_020845104.1	2063	2205
NW_020845105.1	524	507
NW_020845106.1	90	93
NW_020845107.1	88	99
NW_020845108.1	2874	3017
NW_020845109.1	61	59
NW_020845110.1	111	126
NW_020845111.1	73	87
NW_020845112.1	189	202
NW_020845113.1	217	257
NW_020845114.1	276	319
NW_020845115.1	53	33
NW_020845116.1	26049	25706
NW_020845117.1	322	182
NW_020845118.1	82	42
NW_020845119.1	219	240
NW_020845120.1	110	100
NW_020845121.1	160	151
NW_020845122.1	2396	2433
NW_020845123.1	74	97
NW_020845124.1	17660	18567
NW_020845125.1	313	352
NW_020845126.1	55	96
NW_020845127.1	16595	16421
NW_020845128.1	8033	8083
NW_020845129.1	1568	1564
NW_020845130.1	73	71
NW_020845131.1	99243	102126
NW_020845132.1	1164	1212
NW_020845133.1	130	116
NW_020845134.1	94	126
NW_020845135.1	164	182
NW_020845136.1	234	330
NW_020845137.1	59	44
NW_020845138.1	258	332
NW_020845139.1	709	710
NW_020845140.1	2161	2375
NW_020845141.1	45580	44251
NW_020845142.1	4863	4827
NW_020845143.1	3706	3674
NW_020845144.1	937	995
NW_020845145.1	125	110
NW_020845146.1	5447	5696
NW_020845147.1	3239	3309
NW_020845148.1	74	79
NW_020845149.1	1023	1090
NW_020845150.1	3932	3919
NW_020845151.1	302	315
NW_020845152.1	206	199
NW_020845153.1	2945	2831
NW_020845154.1	4659	4482
NW_020845155.1	68	90
NW_020845156.1	64	87
NW_020845157.1	158	233
NW_020845158.1	99	93
NW_020845159.1	119	101
NW_020845160.1	3319	3344
NW_020845161.1	216	206
NW_020845162.1	999	1120
NW_020845163.1	3225	3189
NW_020845164.1	84	91
NW_020845165.1	28378	29856
NW_020845166.1	62685	62379
NW_020845167.1	155	170
NW_020845168.1	301	276
NW_020845169.1	18425	19485
NW_020845170.1	1391	1509
NW_020845171.1	166	138
NW_020845172.1	2260	2449
NW_020845173.1	2078	2043
NW_020845174.1	371	404
NW_020845175.1	149	140
NW_020845176.1	157	170
NW_020845177.1	296	218
NW_020845178.1	59	51
NW_020845179.1	93	102
NW_020845180.1	529	478
NW_020845181.1	91	103
NW_020845182.1	2485	2638
NW_020845183.1	330	284
NW_020845184.1	232	224
NW_020845185.1	140	138
NW_020845186.1	2440	2647
NW_020845187.1	192	194
NW_020845188.1	49	65
NW_020845189.1	506	454
NW_020845190.1	162	207
NW_020845191.1	247	259
NW_020845192.1	164	166
NW_020845193.1	74	90
NW_020845194.1	126	90
NW_020845195.1	9111	9237
NW_020845196.1	5898	5879
NW_020845197.1	391	404
NW_020845198.1	229	245
NW_020845199.1	92	80
NW_020845200.1	103	113
NW_020845201.1	154	153
NW_020845202.1	1718	1885
NW_020845203.1	1094	1184
NW_020845204.1	290	306
NW_020845205.1	1133	1226
NW_020845206.1	94	86
NW_020845207.1	659	651
NW_020845208.1	25271	25054
NW_020845209.1	157	138
NW_020845210.1	122	165
NW_020845211.1	149	106
NW_020845212.1	89	88
NW_020845213.1	220	201
NW_020845214.1	209	228
NW_020845215.1	862	783
NW_020845216.1	108	94
NW_020845217.1	16603	17359
NW_020845218.1	133	137
NW_020845219.1	698	693
NW_020845220.1	296	294
NW_020845221.1	138	107
NW_020845222.1	543	507
NW_020845223.1	64	90
NW_020845224.1	353	358
NW_020845225.1	89	102
NW_020845226.1	100	96
NW_020845227.1	125	129
NW_020845228.1	12724	12650
NW_020845229.1	267	334
NW_020845230.1	1198	1139
NW_020845231.1	154	151
NW_020845232.1	371	404
NW_020845233.1	93	107
NW_020845234.1	18844	19820
NW_020845235.1	15793	15988
NW_020845236.1	151	195
NW_020845237.1	1114	1152
NW_020845238.1	21066	21231
NW_020845239.1	2509	2548
NW_020845240.1	130	141
NW_020845241.1	149	119
NW_020845242.1	87	130
NW_020845243.1	30923	29622
NW_020845244.1	208	202
NW_020845245.1	72	76
NW_020845246.1	9154	9263
NW_020845247.1	592	559
NW_020845248.1	17985	18240
NW_020845249.1	524	455
NW_020845250.1	499	303
NW_020845251.1	273	304
NW_020845252.1	259	278
NW_020845253.1	224	257
NW_020845254.1	3176	3230
NW_020845255.1	9073	9077
NW_020845256.1	121	152
NW_020845257.1	318	300
NW_020845258.1	4204	3885
NW_020845259.1	318	348
NW_020845260.1	36254	35343
NW_020845261.1	819	878
NW_020845262.1	950	980
NW_020845263.1	94	78
NW_020845264.1	353102	355500
NW_020845265.1	213	241
NW_020845266.1	35106	33972
NW_020845267.1	6833	6752
NW_020845268.1	97	118
NW_020845269.1	9933	10341
NW_020845270.1	191	160
NW_020845271.1	11535	10551
NW_020845272.1	77	81
NW_020845273.1	105	150
NW_020845274.1	76	77
NW_020845275.1	561	718
NW_020845276.1	79	74
NW_020845277.1	110	107
NW_020845278.1	257	216
NW_020845279.1	3003	2884
NW_020845280.1	99352	102283
NW_020845281.1	86	75
NW_020845282.1	36245	35681
NW_020845283.1	102	104
NW_020845284.1	173	166
NW_020845285.1	63	76
NW_020845286.1	19044	20002
NW_020845287.1	943	870
NW_020845288.1	176	169
NW_020845289.1	175	216
NW_020845290.1	128	155
NW_020845291.1	367	278
NW_020845292.1	4716	4983
NW_020845293.1	105	95
NW_020845294.1	137	123
NW_020845295.1	84023	84845
NW_020845296.1	103	127
NW_020845297.1	329	245
NW_020845298.1	82	83
NW_020845299.1	222	202
NW_020845300.1	209163	209630
NW_020845301.1	22718	23051
NW_020845302.1	6602	6513
NW_020845303.1	18795	18574
NW_020845304.1	71109	69054
NW_020845305.1	67	80
NW_020845306.1	85	57
NW_020845307.1	168	191
NW_020845308.1	50	55
NW_020845309.1	79	85
NW_020845310.1	135	163
NW_020845311.1	83	72
NW_020845312.1	58	78
NW_020845313.1	179	156
NW_020845314.1	159	154
NW_020845315.1	270	270
NW_020845316.1	103781	104594
NW_020845317.1	47597	47552
NW_020845318.1	310	295
NW_020845319.1	5958	6505
NW_020845320.1	1891	1910
NW_020845321.1	196	201
NW_020845322.1	77	99
NW_020845323.1	7566	7492
NW_020845324.1	4645	4583
NW_020845325.1	5250	5115
NW_020845326.1	385	360
NW_020845327.1	44334	44508
NW_020845328.1	311	44
NW_020845329.1	3407	3166
NW_020845330.1	222	236
NW_020845331.1	112	84
NW_020845332.1	70	73
NW_020845333.1	656	677
NW_020845334.1	80	74
NW_020845335.1	10590	11614
NW_020845336.1	547	547
NW_020845337.1	289	299
NW_020845338.1	250	189
NW_020845339.1	80	74
NW_020845340.1	46520	45288
NW_020845341.1	8815	9216
NW_020845342.1	78	93
NW_020845343.1	8110	8318
NW_020845344.1	5055	4829
NW_020845345.1	1013	834
NW_020845346.1	143	133
NW_020845347.1	164	164
NW_020845348.1	82	119
NW_020845349.1	537	551
NW_020845350.1	6604	6346
NW_020845351.1	141692	140213
NW_020845352.1	6402	5977
NW_020845353.1	159	149
NW_020845354.1	4682	4317
NW_020845355.1	15232	15225
NW_020845356.1	4254	4367
NW_020845357.1	160	183
NW_020845358.1	61	96
NW_020845359.1	24608	24592
NW_020845360.1	446	456
NW_020845361.1	2788	2572
NW_020845362.1	523	564
NW_020845363.1	2551	1514
NW_020845364.1	2499	2524
NW_020845365.1	111	101
NW_020845366.1	299	269
NW_020845367.1	2898	2612
NW_020845368.1	390	474
NW_020845369.1	89	106
NW_020845370.1	158	158
NW_020845371.1	7233	7233
NW_020845372.1	196	241
NW_020845373.1	236	198
NW_020845374.1	106	81
NW_020845375.1	4381	4530
NW_020845376.1	245	244
NW_020845377.1	19670	19641
NW_020845378.1	8158	7840
NW_020845379.1	144	155
NW_020845380.1	3366	3342
NW_020845381.1	1703	1618
NW_020845382.1	414	415
NW_020845383.1	133	112
NW_020845384.1	75342	74493
NW_020845385.1	64	59
NW_020845386.1	119	163
NW_020845387.1	58603	57493
NW_020845388.1	57717	57359
NW_020845389.1	94309	91829
NW_020845390.1	4078	4183
NW_020845391.1	139	135
NW_020845392.1	401	370
NW_020845393.1	266	318
NW_020845394.1	18807	19164
NW_020845395.1	24640	25223
NW_020845396.1	123	142
NW_020845397.1	228	207
NW_020845398.1	175	207
NW_020845399.1	9155	9317
NW_020845400.1	499	463
NW_020845401.1	42362	43069
NW_020845402.1	27667	27132
NW_020845403.1	46762	44857
NW_020845404.1	220	231
NW_020845405.1	147	121
NW_020845406.1	796	807
NW_020845407.1	89	98
NW_020845408.1	100	134
NW_020845409.1	150	151
NW_020845410.1	279287	281745
NW_020845411.1	180	151
NW_020845412.1	130	137
NW_020845413.1	437	402
NW_020845414.1	193	262
NW_020845415.1	105	101
NW_020845416.1	127	144
NW_020845417.1	78	101
NW_020845418.1	451	463
NW_020845419.1	10647	10679
NW_020845420.1	2124	2101
NW_020845421.1	68	88
NW_020845422.1	19592	19406
NW_020845423.1	191	188
NW_020845424.1	3480	3376
NW_020845425.1	18690	19248
NW_020845426.1	537	573
NW_020845427.1	559	478
NW_020845428.1	723	654
NW_020845429.1	213	225
NW_020845430.1	354	372
NW_020845431.1	287	284
NW_020845432.1	3352	3276
NW_020845433.1	130	130
NW_020845434.1	52	64
NW_020845435.1	540	510
NW_020845436.1	431	421
NW_020845437.1	125	203
NW_020845438.1	28809	28709
NW_020845439.1	80	61
NW_020845440.1	11250	11328
NW_020845441.1	34718	33903
NW_020845442.1	269	212
NW_020845443.1	4017	3880
NW_020845444.1	322	303
NW_020845445.1	3671	3697
NW_020845446.1	205	243
NW_020845447.1	657	568
NW_020845448.1	9628	10518
NW_020845449.1	89	103
NW_020845450.1	154	195
NW_020845451.1	214	195
NW_020845452.1	274	274
NW_020845453.1	4978	5442
NW_020845454.1	112	108
NW_020845455.1	99	73
NW_020845456.1	140	93
NW_020845457.1	42036	41800
NW_020845458.1	2350	2228
NW_020845459.1	229	288
NW_020845460.1	76	151
NW_020845461.1	397	278
NW_020845462.1	104	70
NW_020845463.1	141	162
NW_020845464.1	52848	52881
NW_020845465.1	2307	2282
NW_020845466.1	71	71
NW_020845467.1	70	47
NW_020845468.1	357	295
NW_020845469.1	2908	2857
NW_020845470.1	571	615
NW_020845471.1	503	522
NW_020845472.1	2178	2111
NW_020845473.1	249	278
NW_020845474.1	59	61
NW_020845475.1	7413	7497
NW_020845476.1	199	255
NW_020845477.1	204	162
NW_020845478.1	76	8
NW_020845479.1	1047	918
NW_020845480.1	111	100
NW_020845481.1	289	251
NW_020845482.1	97	84
NW_020845483.1	164	144
NW_020845484.1	6675	6340
NW_020845485.1	124	106
NW_020845486.1	210	186
NW_020845487.1	72084	71289
NW_020845488.1	188	226
NW_020845489.1	683	721
NW_020845490.1	232	204
NW_020845491.1	166	226
NW_020845492.1	72	62
NW_020845493.1	3924	3946
NW_020845494.1	232	213
NW_020845495.1	435	427
NW_020845496.1	12447	12149
NW_020845497.1	107	91
NW_020845498.1	428	413
NW_020845499.1	16491	17462
NW_020845500.1	13269	12545
NW_020845501.1	37562	39075
NW_020845502.1	33999	33508
NW_020845503.1	283	242
NW_020845504.1	39279	39004
NW_020845505.1	62862	63268
NW_020845506.1	382	433
NW_020845507.1	122	155
NW_020845508.1	333	343
NW_020845509.1	220	233
NW_020845510.1	125	172
NW_020845511.1	19780	20027
NW_020845512.1	51	58
NW_020845513.1	310	281
NW_020845514.1	127	163
NW_020845515.1	62097	61880
NW_020845516.1	93	86
NW_020845517.1	1609	1665
NW_020845518.1	21620	21095
NW_020845519.1	192	175
NW_020845520.1	21201	23136
NW_020845521.1	140	157
NW_020845522.1	568	503
NW_020845523.1	115	141
NW_020845524.1	1331	1353
NW_020845525.1	395	508
NW_020845526.1	325	306
NW_020845527.1	131	133
NW_020845528.1	1214	1179
NW_020845529.1	324	248
NW_020845530.1	1507	1276
NW_020845531.1	79	64
NW_020845532.1	301	336
NW_020845533.1	89529	89178
NW_020845534.1	250	238
NW_020845535.1	70	67
NW_020845536.1	744	734
NW_020845537.1	148	129
NW_020845538.1	53	33
NW_020845539.1	503	484
NW_020845540.1	10041	11406
NW_020845541.1	42503	42498
NW_020845542.1	4310	4252
NW_020845543.1	89513	87252
NW_020845544.1	298	255
NW_020845545.1	132	206
NW_020845546.1	25899	26815
NW_020845547.1	59668	60621
NW_020845548.1	143	189
NW_020845549.1	85	91
NW_020845550.1	66	95
NW_020845551.1	99	96
NW_020845552.1	8435	8289
NW_020845553.1	241	235
NW_020845554.1	89	82
NW_020845555.1	999	1044
NW_020845556.1	397	346
NW_020845557.1	226	231
NW_020845558.1	183887	185056
NW_020845559.1	309	298
NW_020845560.1	17473	17635
NW_020845561.1	1054	1148
NW_020845562.1	2250	2063
NW_020845563.1	65	84
NW_020845564.1	76	67
NW_020845565.1	33516	33317
NW_020845566.1	215	257
NW_020845567.1	110609	111025
NW_020845568.1	188	220
NW_020845569.1	270	285
NW_020845570.1	48	31
NW_020845571.1	350	256
NW_020845572.1	169	147
NW_020845573.1	182	191
NW_020845574.1	126	96
NW_020845575.1	75926	78742
NW_020845576.1	75	116
NW_020845577.1	295	295
NW_020845578.1	69345	70126
NW_020845579.1	324	300
NW_020845580.1	1232	1234
NW_020845581.1	218	219
NW_020845582.1	543	388
NW_020845583.1	72490	71509
NW_020845584.1	205	229
NW_020845585.1	44992	43665
NW_020845586.1	58	53
NW_020845587.1	191	177
NW_020845588.1	4718	4526
NW_020845589.1	117	124
NW_020845590.1	212	213
NW_020845591.1	292	287
NW_020845592.1	117	133
NW_020845593.1	135	103
NW_020845594.1	308	177
NW_020845595.1	129	85
NW_020845596.1	2270	2254
NW_020845597.1	10535	10494
NW_020845598.1	277	274
NW_020845599.1	454	446
NW_020845600.1	90	64
NW_020845601.1	159	161
NW_020845602.1	1168	1104
NW_020845603.1	29170	29035
NW_020845604.1	127	125
NW_020845605.1	3134	3346
NW_020845606.1	119	97
NW_020845607.1	88	77
NW_020845608.1	92	99
NW_020845609.1	157	157
NW_020845610.1	577	598
NW_020845611.1	125	102
NW_020845612.1	100	117
NW_020845613.1	109	120
NW_020845614.1	85	79
NW_020845615.1	142	141
NW_020845616.1	172	208
NW_020845617.1	118	111
NW_020845618.1	94	93
NW_020845619.1	213	259
NW_020845620.1	16370	16087
NW_020845621.1	81	141
NW_020845622.1	50	43
NW_020845623.1	4317	4475
NW_020845624.1	51	72
NW_020845625.1	73	68
NW_020845626.1	1038	965
NW_020845627.1	55	67
NW_020845628.1	22704	19279
NW_020845629.1	280	251
NW_020845630.1	1414	1456
NW_020845631.1	27886	27459
NW_020845632.1	115	129
NW_020845633.1	457	437
NW_020845634.1	93	72
NW_020845635.1	1495	1558
NW_020845636.1	217	258
NW_020845637.1	222	241
NW_020845638.1	76	106
NW_020845639.1	25619	26137
NW_020845640.1	307	282
NW_020845641.1	105	98
NW_020845642.1	296	356
NW_020845643.1	125260	126043
NW_020845644.1	258	184
NW_020845645.1	352	374
NW_020845646.1	6900	6800
NW_020845647.1	188984	189979
NW_020845648.1	145	86
NW_020845649.1	21236	21478
NW_020845650.1	113	93
NW_020845651.1	198	205
NW_020845652.1	49837	50223
NW_020845653.1	2838	2891
NW_020845654.1	216	185
NW_020845655.1	219	307
NW_020845656.1	126	149
NW_020845657.1	691	668
NW_020845658.1	380	340
NW_020845659.1	3903	3803
NW_020845660.1	131	102
NW_020845661.1	110	133
NW_020845662.1	76	70
NW_020845663.1	109	102
NW_020845664.1	176	197
NW_020845665.1	709	792
NW_020845666.1	186	184
NW_020845667.1	294	199
NW_020845668.1	120	133
NW_020845669.1	25224	24417
NW_020845670.1	2332	2407
NW_020845671.1	263	270
NW_020845672.1	10051	10229
NW_020845673.1	59147	61041
NW_020845674.1	1157	1183
NW_020845675.1	185	202
NW_020845676.1	7305	7163
NW_020845677.1	165	163
NW_020845678.1	97	84
NW_020845679.1	172	198
NW_020845680.1	228	233
NW_020845681.1	90	90
NW_020845682.1	312	327
NW_020845683.1	7115	7054
NW_020845684.1	1481	1493
NW_020845685.1	32704	32441
NW_020845686.1	4354	4275
NW_020845687.1	54	37
NW_020845688.1	6220	6146
NW_020845689.1	136	110
NW_020845690.1	24851	24250
NW_020845691.1	296	341
NW_020845692.1	104	111
NW_020845693.1	69	111
NW_020845694.1	147316	146545
NW_020845695.1	68	87
NW_020845696.1	88	66
NW_020845697.1	12439	12977
NW_020845698.1	116	103
NW_020845699.1	348	311
NW_020845700.1	368	313
NW_020845701.1	71500	71457
NW_020845702.1	307	356
NW_020845703.1	716	567
NW_020845704.1	177	251
NW_020845705.1	192	244
NW_020845706.1	97	103
NW_020845707.1	236	246
NW_020845708.1	18053	18331
NW_020845709.1	10897	10752
NW_020845710.1	832	825
NW_020845711.1	201	215
NW_020845712.1	488	503
NW_020845713.1	70	63
NW_020845714.1	147	184
NW_020845715.1	179	172
NW_020845716.1	161	172
NW_020845717.1	97	84
NW_020845718.1	96	77
NW_020845719.1	593	519
NW_020845720.1	245	233
NW_020845721.1	2124	2145
NW_020845722.1	85	69
NW_020845723.1	403	424
NW_020845724.1	272	245
NW_020845725.1	3680	3915
NW_020845726.1	156	158
NW_020845727.1	404	363
NW_020845728.1	209	183
NW_020845729.1	58	62
NW_020845730.1	34528	34576
NW_020845731.1	8067	7829
NW_020845732.1	5884	5999
NW_020845733.1	143	133
NW_020845734.1	177	179
NW_020845735.1	5822	5429
NW_020845736.1	9771	9876
NW_020845737.1	90	100
NW_020845738.1	9043	9784
NW_020845739.1	38533	38848
NW_020845740.1	92	128
NW_020845741.1	830	864
NW_020845742.1	24260	23647
NW_020845743.1	11405	11271
NW_020845744.1	242	259
NW_020845745.1	26726	26358
NW_020845746.1	37875	37642
NW_020845747.1	243	261
NW_020845748.1	3113	3038
NW_020845749.1	74	75
NW_020845750.1	7920	7534
NW_020845751.1	261	374
NW_020845752.1	90	94
NW_020845753.1	306	327
NW_020845754.1	331	326
NW_020845755.1	108704	110229
NW_020845756.1	217	197
NW_020845757.1	148	199
NW_020845758.1	252	280
NW_020845759.1	264	265
NW_020845760.1	66	56
NW_020845761.1	241	256
NW_020845762.1	87	81
NW_020845763.1	277	317
NW_020845764.1	38280	39086
NW_020845765.1	93	89
NW_020845766.1	205	147
NW_020845767.1	8372	8557
NW_020845768.1	3053	2973
NW_020845769.1	101	112
NW_020845770.1	82	96
NW_020845771.1	250	160
NW_020845772.1	168	183
NW_020845773.1	76	68
NW_020845774.1	199	258
NW_020845775.1	86	99
NW_020845776.1	142	138
NW_020845777.1	1197	1320
NW_020845778.1	155	153
NW_020845779.1	4563	4621
NW_020845780.1	3279	3030
NW_020845781.1	6711	6221
NW_020845782.1	9659	9837
NW_020845783.1	17755	17914
NW_020845784.1	254	174
NW_020845785.1	83	111
NW_020845786.1	443	453
NW_020845787.1	417	422
NW_020845788.1	41	39
NW_020845789.1	72	74
NW_020845790.1	20544	21190
NW_020845791.1	209	226
NW_020845792.1	230	219
NW_020845793.1	114	139
NW_020845794.1	8689	8112
NW_020845795.1	107	131
NW_020845796.1	72801	72963
NW_020845797.1	93	78
NW_020845798.1	88	107
NW_020845799.1	164	170
NW_020845800.1	131	144
NW_020845801.1	68	96
NW_020845802.1	69	72
NW_020845803.1	422	474
NW_020845804.1	2307	2236
NW_020845805.1	98	99
NW_020845806.1	884	800
NW_020845807.1	326	348
NW_020845808.1	791	776
NW_020845809.1	78	73
NW_020845810.1	76	71
NW_020845811.1	424	442
NW_020845812.1	210928	212341
NW_020845813.1	17632	17933
NW_020845814.1	8035	7231
NW_020845815.1	1584	1315
NW_020845816.1	207	175
NW_020845817.1	164	136
NW_020845818.1	117	117
NW_020845819.1	10519	10502
NW_020845820.1	234	222
NW_020845821.1	247	248
NW_020845822.1	213	250
NW_020845823.1	3379	3299
NW_020845824.1	267	252
NW_020845825.1	216	228
NW_020845826.1	221	231
NW_020845827.1	112	119
NW_020845828.1	5275	5651
NW_020845829.1	181	200
NW_020845830.1	93	92
NW_020845831.1	43050	43406
NW_020845832.1	134	192
NW_020845833.1	608	752
NW_020845834.1	21920	21456
NW_020845835.1	106	102
NW_020845836.1	303	319
NW_020845837.1	1108	1046
NW_020845838.1	138	128
NW_020845839.1	4866	4756
NW_020845840.1	188	207
NW_020845841.1	14316	14197
NW_020845842.1	279	240
NW_020845843.1	51082	49770
NW_020845844.1	79	95
NW_020845845.1	1879	1851
NW_020845846.1	22756	23904
NW_020845847.1	95	137
NW_020845848.1	68	62
NW_020845849.1	80	77
NW_020845850.1	8835	8261
NW_020845851.1	99	111
NW_020845852.1	29856	31646
NW_020845853.1	68	71
NW_020845854.1	52367	53507
NW_020845855.1	126	120
NW_020845856.1	85	67
NW_020845857.1	4156	4110
NW_020845858.1	3181	3024
NW_020845859.1	21611	20579
NW_020845860.1	372	365
NW_020845861.1	81916	83023
NW_020845862.1	6224	6381
NW_020845863.1	107433	107659
NW_020845864.1	6657	6813
NW_020845865.1	47613	48254
NW_020845866.1	394	287
NW_020845867.1	218655	223557
NW_020845868.1	751	741
NW_020845869.1	6213	6342
NW_020845870.1	109	150
NW_020845871.1	39	34
NW_020845872.1	19821	19928
NW_020845873.1	174	184
NW_020845874.1	129736	132262
NW_020845875.1	776	815
NW_020845876.1	286	280
NW_020845877.1	86	82
NW_020845878.1	680	647
NW_020845879.1	11808	11491
NW_020845880.1	84	99
NW_020845881.1	4048	3769
NW_020845882.1	86	103
NW_020845883.1	122	114
NW_020845884.1	160	135
NW_020845885.1	391	369
NW_020845886.1	482	423
NW_020845887.1	15581	15591
NW_020845888.1	190	165
NW_020845889.1	206	222
NW_020845890.1	101	105
NW_020845891.1	107	100
NW_020845892.1	125	93
NW_020845893.1	97	102
NW_020845894.1	1883	1861
NW_020845895.1	215	152
NW_020845896.1	6487	6567
NW_020845897.1	342	285
NW_020845898.1	364	280
NW_020845899.1	73	87
NW_020845900.1	244	239
NW_020845901.1	2787	2887
NW_020845902.1	515	443
NW_020845903.1	509	513
NW_020845904.1	44	59
NW_020845905.1	223	225
NW_020845906.1	15243	15428
NW_020845907.1	199	196
NW_020845908.1	275	355
NW_020845909.1	151	162
NW_020845910.1	297	393
NW_020845911.1	157	125
NW_020845912.1	115	104
NW_020845913.1	272	225
NW_020845914.1	167	150
NW_020845915.1	72	57
NW_020845916.1	290	188
NW_020845917.1	197	214
NW_020845918.1	38	49
NW_020845919.1	68	69
NW_020845920.1	63	66
NW_020845921.1	9672	9530
NW_020845922.1	152	120
NW_020845923.1	53680	53353
NW_020845924.1	100	105
NW_020845925.1	387	372
NW_020845926.1	137	127
NW_020845927.1	503	516
NW_020845928.1	28937	29237
NW_020845929.1	4335	4249
NW_020845930.1	568	613
NW_020845931.1	372	296
NW_020845932.1	16639	17226
NW_020845933.1	282	254
NW_020845934.1	61	54
NW_020845935.1	77	93
NW_020845936.1	151	130
NW_020845937.1	813	694
NW_020845938.1	841	805
NW_020845939.1	765	771
NW_020845940.1	70	28
NW_020845941.1	67179	67124
NW_020845942.1	80	76
NW_020845943.1	109	97
NW_020845944.1	216	158
NW_020845945.1	118	109
NW_020845946.1	1707	1761
NW_020845947.1	71	84
NW_020845948.1	24556	24015
NW_020845949.1	355	411
NW_020845950.1	116	74
NW_020845951.1	1881	1952
NW_020845952.1	74	80
NW_020845953.1	656	564
NW_020845954.1	504	688
NW_020845955.1	78553	74525
NW_020845956.1	2284	2220
NW_020845957.1	164	162
NW_020845958.1	3720	3716
NW_020845959.1	167	166
NW_020845960.1	452	473
NW_020845961.1	53761	54641
NW_020845962.1	39587	39694
NW_020845963.1	66	65
NW_020845964.1	255	241
NW_020845965.1	208	58
NW_020845966.1	1656	1909
NW_020845967.1	1034	1034
NW_020845968.1	164	175
NW_020845969.1	40024	40760
NW_020845970.1	160	144
NW_020845971.1	375	397
NW_020845972.1	2998	2819
NW_020845973.1	165	140
NW_020845974.1	246	269
NW_020845975.1	435	375
NW_020845976.1	4740	4663
NW_020845977.1	52	51
NW_020845978.1	13994	13513
NW_020845979.1	118	105
NW_020845980.1	258	225
NW_020845981.1	256	238
NW_020845982.1	2619	2586
NW_020845983.1	639	660
NW_020845984.1	347	354
NW_020845985.1	112	79
NW_020845986.1	144	111
NW_020845987.1	367	370
NW_020845988.1	21326	22425
NW_020845989.1	283	265
NW_020845990.1	386	407
NW_020845991.1	224	212
NW_020845992.1	293	296
NW_020845993.1	3509	3176
NW_020845994.1	962	965
NW_020845995.1	153	174
NW_020845996.1	194	192
NW_020845997.1	3540	3374
NW_020845998.1	72490	72476
NW_020845999.1	165	220
NW_020846000.1	142	154
NW_020846001.1	96	116
NW_020846002.1	15776	16712
NW_020846003.1	52	67
NW_020846004.1	218	187
NW_020846005.1	131817	132450
NW_020846006.1	51357	50850
NW_020846007.1	783	767
NW_020846008.1	714	634
NW_020846009.1	3813	3877
NW_020846010.1	61	54
NW_020846011.1	81	72
NW_020846012.1	235	285
NW_020846013.1	82035	82776
NW_020846014.1	529	519
NW_020846015.1	97	74
NW_020846016.1	86	58
NW_020846017.1	76	74
NW_020846018.1	222	271
NW_020846019.1	8867	8949
NW_020846020.1	92	86
NW_020846021.1	370	336
NW_020846022.1	83	84
NW_020846023.1	421	443
NW_020846024.1	12520	11612
NW_020846025.1	4319	4346
NW_020846026.1	31282	30851
NW_020846027.1	390	417
NW_020846028.1	202	214
NW_020846029.1	148	157
NW_020846030.1	6745	6394
NW_020846031.1	338	370
NW_020846032.1	325	447
NW_020846033.1	288	338
NW_020846034.1	252	195
NW_020846035.1	172	154
NW_020846036.1	69138	69306
NW_020846037.1	453	420
NW_020846038.1	271	283
NW_020846039.1	100	82
NW_020846040.1	795	742
NW_020846041.1	93	108
NW_020846042.1	146	199
NW_020846043.1	85	105
NW_020846044.1	132	141
NW_020846045.1	112	105
NW_020846046.1	737	590
NW_020846047.1	214	273
NW_020846048.1	262	269
NW_020846049.1	100	83
NW_020846050.1	69	78
NW_020846051.1	8142	7993
NW_020846052.1	252	251
NW_020846053.1	38133	37847
NW_020846054.1	7756	7667
NW_020846055.1	149	156
NW_020846056.1	180	178
NW_020846057.1	337	282
NW_020846058.1	237	228
NW_020846059.1	8244	5099
NW_020846060.1	3828	3898
NW_020846061.1	262	273
NW_020846062.1	88302	82985
NW_020846063.1	254379	250728
NW_020846064.1	2240	2227
NW_020846065.1	317	328
NW_020846066.1	78	81
NW_020846067.1	92	123
NW_020846068.1	50	66
NW_020846069.1	447	438
NW_020846070.1	356	351
NW_020846071.1	20356	19332
NW_020846072.1	107702	109665
NW_020846073.1	27246	27834
NW_020846074.1	62	91
NW_020846075.1	728	739
NW_020846076.1	7647	7628
NW_020846077.1	156	154
NW_020846078.1	60518	60617
NW_020846079.1	1168	1020
NW_020846080.1	313	347
NW_020846081.1	123	143
NW_020846082.1	61	57
NW_020846083.1	4993	4858
NW_020846084.1	1070	1078
NW_020846085.1	162	118
NW_020846086.1	119809	122583
NW_020846087.1	336	320
NW_020846088.1	353	375
NW_020846089.1	159	151
NW_020846090.1	114	113
NW_020846091.1	78	98
NW_020846092.1	45383	45502
NW_020846093.1	269	271
NW_020846094.1	23087	22538
NW_020846095.1	130	133
NW_020846096.1	385	372
NW_020846097.1	93	93
NW_020846098.1	2416	2274
NW_020846099.1	107	87
NW_020846100.1	13135	13659
NW_020846101.1	25375	23848
NW_020846102.1	114	89
NW_020846103.1	3557	3588
NW_020846104.1	504	517
NW_020846105.1	44039	44486
NW_020846106.1	5208	5055
NW_020846107.1	198	198
NW_020846108.1	207	239
NW_020846109.1	91849	93139
NW_020846110.1	979	992
NW_020846111.1	1280	1418
NW_020846112.1	109	97
NW_020846113.1	64	75
NW_020846114.1	149	147
NW_020846115.1	3442	3110
NW_020846116.1	234	216
NW_020846117.1	11752	11392
NW_020846118.1	213	223
NW_020846119.1	204	250
NW_020846120.1	502	544
NW_020846121.1	290	262
NW_020846122.1	91759	91877
NW_020846123.1	218	167
NW_020846124.1	123	121
NW_020846125.1	68	70
NW_020846126.1	58941	59113
NW_020846127.1	63270	63679
NW_020846128.1	15590	15692
NW_020846129.1	194	210
NW_020846130.1	376	375
NW_020846131.1	212	183
NW_020846132.1	78	63
NW_020846133.1	82	85
NW_020846134.1	8800	8767
NW_020846135.1	291	296
NW_020846136.1	81	77
NW_020846137.1	1652	1607
NW_020846138.1	3829	3823
NW_020846139.1	93	116
NW_020846140.1	248	277
NW_020846141.1	576	662
NW_020846142.1	56405	55738
NW_020846143.1	215	183
NW_020846144.1	114	154
NW_020846145.1	144	150
NW_020846146.1	123	136
NW_020846147.1	1469	1483
NW_020846148.1	59	61
NW_020846149.1	39986	40045
NW_020846150.1	58261	59325
NW_020846151.1	84	105
NW_020846152.1	90	125
NW_020846153.1	14947	14976
NW_020846154.1	10762	10390
NW_020846155.1	2283	2185
NW_020846156.1	32177	32011
NW_020846157.1	33777	33165
NW_020846158.1	120	83
NW_020846159.1	125	110
NW_020846160.1	127	124
NW_020846161.1	160	165
NW_020846162.1	231	214
NW_020846163.1	7665	7776
NW_020846164.1	68	64
NW_020846165.1	351	375
NW_020846166.1	60958	61522
NW_020846167.1	316	280
NW_020846168.1	86	101
NW_020846169.1	57943	54941
NW_020846170.1	6131	6837
NW_020846171.1	12436	12250
NW_020846172.1	27492	26969
NW_020846173.1	77	80
NW_020846174.1	91	92
NW_020846175.1	215	185
NW_020846176.1	54059	54698
NW_020846177.1	9343	9572
NW_020846178.1	156382	159001
NW_020846179.1	57605	57808
NW_020846180.1	146	117
NW_020846181.1	67	81
NW_020846182.1	59	65
NW_020846183.1	42	57
NW_020846184.1	67	70
NW_020846185.1	106	101
NW_020846186.1	225	244
NW_020846187.1	6897	7355
NW_020846188.1	868	750
NW_020846189.1	66638	67481
NW_020846190.1	908	900
NW_020846191.1	489	490
NW_020846192.1	49022	49973
NW_020846193.1	302	312
NW_020846194.1	3124	3161
NW_020846195.1	63	62
NW_020846196.1	4360	4549
NW_020846197.1	443	396
NW_020846198.1	446	597
NW_020846199.1	187	149
NW_020846200.1	985	922
NW_020846201.1	9665	9817
NW_020846202.1	132	159
NW_020846203.1	215	199
NW_020846204.1	78	96
NW_020846205.1	2866	2942
NW_020846206.1	6165	6052
NW_020846207.1	133	157
NW_020846208.1	259	265
NW_020846209.1	181	148
NW_020846210.1	259	318
NW_020846211.1	3829	3897
NW_020846212.1	588	555
NW_020846213.1	1439	1488
NW_020846214.1	32829	32832
NW_020846215.1	292	295
NW_020846216.1	65020	65344
NW_020846217.1	54	62
NW_020846218.1	95	78
NW_020846219.1	738	723
NW_020846220.1	707	759
NW_020846221.1	117	115
NW_020846222.1	869	871
NW_020846223.1	90	86
NW_020846224.1	612	622
NW_020846225.1	126	129
NW_020846226.1	238	215
NW_020846227.1	106353	106933
NW_020846228.1	328	286
NW_020846229.1	37383	35985
NW_020846230.1	6396	6947
NW_020846231.1	15014	15942
NW_020846232.1	20154	20669
NW_020846233.1	27721	26401
NW_020846234.1	118	125
NW_020846235.1	204	239
NW_020846236.1	5042	5071
NW_020846237.1	744	690
NW_020846238.1	45582	44780
NW_020846239.1	362	375
NW_020846240.1	4651	4522
NW_020846241.1	79	84
NW_020846242.1	191	209
NW_020846243.1	99	126
NW_020846244.1	4410	4142
NW_020846245.1	182	210
NW_020846246.1	897	984
NW_020846247.1	114	121
NW_020846248.1	16603	17433
NW_020846249.1	19956	19710
NW_020846250.1	159	147
NW_020846251.1	215	211
NW_020846252.1	2251	2194
NW_020846253.1	14354	14900
NW_020846254.1	128	151
NW_020846255.1	383	425
NW_020846256.1	41377	40890
NW_020846257.1	272	240
NW_020846258.1	6974	7149
NW_020846259.1	221	206
NW_020846260.1	82929	85693
NW_020846261.1	8501	8476
NW_020846262.1	251	276
NW_020846263.1	6475	6628
NW_020846264.1	52	54
NW_020846265.1	2762	2834
NW_020846266.1	1531	1567
NW_020846267.1	435	431
NW_020846268.1	140	154
NW_020846269.1	304	355
NW_020846270.1	66	49
NW_020846271.1	266	282
NW_020846272.1	203	221
NW_020846273.1	10950	11349
NW_020846274.1	497	508
NW_020846275.1	24676	24487
NW_020846276.1	40444	41205
NW_020846277.1	10540	11336
NW_020846278.1	163	172
NW_020846279.1	96	106
NW_020846280.1	102265	105599
NW_020846281.1	57	59
NW_020846282.1	1091	1131
NW_020846283.1	183	193
NW_020846284.1	74	102
NW_020846285.1	181	211
NW_020846286.1	324	310
NW_020846287.1	28361	29719
NW_020846288.1	124	106
NW_020846289.1	434	388
NW_020846290.1	239	199
NW_020846291.1	273	290
NW_020846292.1	448	501
NW_020846293.1	12542	12194
NW_020846294.1	84014	83709
NW_020846295.1	66	49
NW_020846296.1	101	105
NW_020846297.1	79	65
NW_020846298.1	14614	14685
NW_020846299.1	2019	2063
NW_020846300.1	706	705
NW_020846301.1	183	230
NW_020846302.1	75	63
NW_020846303.1	83	107
NW_020846304.1	133	166
NW_020846305.1	70	81
NW_020846306.1	212	224
NW_020846307.1	145	132
NW_020846308.1	358	407
NW_020846309.1	607	460
NW_020846310.1	291	256
NW_020846311.1	4619	4813
NW_020846312.1	81	74
NW_020846313.1	64	77
NW_020846314.1	110	141
NW_020846315.1	2576	2417
NW_020846316.1	5738	5865
NW_020846317.1	72	84
NW_020846318.1	6159	6052
NW_020846319.1	2808	2751
NW_020846320.1	36742	36618
NW_020846321.1	1851	1847
NW_020846322.1	11127	11109
NW_020846323.1	114	101
NW_020846324.1	311	331
NW_020846325.1	87	81
NW_020846326.1	325	308
NW_020846327.1	798	759
NW_020846328.1	1039	968
NW_020846329.1	932	903
NW_020846330.1	473	490
NW_020846331.1	48	52
NW_020846332.1	541	481
NW_020846333.1	24466	25486
NW_020846334.1	94541	92899
NW_020846335.1	199	227
NW_020846336.1	27637	27266
NW_020846337.1	75	73
NW_020846338.1	207	176
NW_020846339.1	53072	52251
NW_020846340.1	184	137
NW_020846341.1	63	69
NW_020846342.1	195	197
NW_020846343.1	116	146
NW_020846344.1	359	365
NW_020846345.1	116	115
NW_020846346.1	40179	41344
NW_020846347.1	7097	7461
NW_020846348.1	38443	38943
NW_020846349.1	212	253
NW_020846350.1	230	317
NW_020846351.1	485	530
NW_020846352.1	131	129
NW_020846353.1	6373	6176
NW_020846354.1	102	83
NW_020846355.1	224	199
NW_020846356.1	131	162
NW_020846357.1	196306	195250
NW_020846358.1	96	98
NW_020846359.1	408	426
NW_020846360.1	34737	33358
NW_020846361.1	5625	5896
NW_020846362.1	38040	36889
NW_020846363.1	459	465
NW_020846364.1	126	144
NW_020846365.1	81	92
NW_020846366.1	2050	2035
NW_020846367.1	75	108
NW_020846368.1	257	250
NW_020846369.1	9584	10516
NW_020846370.1	7895	7947
NW_020846371.1	103	61
NW_020846372.1	414	421
NW_020846373.1	1032	1074
NW_020846374.1	514	613
NW_020846375.1	611	700
NW_020846376.1	397	405
NW_020846377.1	107	141
NW_020846378.1	288	269
NW_020846379.1	400	391
NW_020846380.1	86	110
NW_020846381.1	1720	1637
NW_020846382.1	190	225
NW_020846383.1	5979	5841
NW_020846384.1	516	558
NW_020846385.1	1215	1377
NW_020846386.1	329	276
NW_020846387.1	45	72
NW_020846388.1	299	304
NW_020846389.1	141	143
NW_020846390.1	2361	2674
NW_020846391.1	85	83
NW_020846392.1	109	89
NW_020846393.1	50	89
NW_020846394.1	149	188
NW_020846395.1	461	450
NW_020846396.1	207	239
NW_020846397.1	373	376
NW_020846398.1	238	249
NW_020846399.1	173	156
NW_020846400.1	244	209
NW_020846401.1	243	207
NW_020846402.1	80	92
NW_020846403.1	318	342
NW_020846404.1	376	350
NW_020846405.1	217	185
NW_020846406.1	1458	1456
NW_020846407.1	95	116
NW_020846408.1	1060	1092
NW_020846409.1	65	62
NW_020846410.1	222	214
NW_020846411.1	16820	17561
NW_020846412.1	2728	2792
NW_020846413.1	74	80
NW_020846414.1	351	283
NW_020846415.1	14905	14556
NW_020846416.1	472	499
NW_020846417.1	88	69
NW_020846418.1	155	85
NW_020846419.1	143	127
NW_020846420.1	78	84
NW_020846421.1	54139	53705
NW_020846422.1	277	265
NW_020846423.1	116	141
NW_020846424.1	5619	5592
NW_020846425.1	192	176
NW_020846426.1	117	136
NW_020846427.1	13685	14148
NW_020846428.1	65	69
NW_020846429.1	233	246
NW_020846430.1	409	475
NW_020846431.1	374	355
NW_020846432.1	415	437
NW_020846433.1	3921	4004
NW_020846434.1	67	83
NW_020846435.1	64	57
NW_020846436.1	3714	3426
NW_020846437.1	4872	4928
NW_020846438.1	157	151
NW_020846439.1	112	131
NW_020846440.1	12288	12138
NW_020846441.1	3401	3256
NW_020846442.1	274	239
NW_020846443.1	990	1070
NW_020846444.1	174	170
NW_020846445.1	30956	31940
NW_020846446.1	161	191
NW_020846447.1	56011	57785
NW_020846448.1	7155	7264
NW_020846449.1	397	468
NW_020846450.1	8086	8126
NW_020846451.1	129	114
NW_020846452.1	329	369
NW_020846453.1	70	52
NW_020846454.1	119	103
NW_020846455.1	223	232
NW_020846456.1	112	80
NW_020846457.1	37	32
NW_020846458.1	214	261
NW_020846459.1	207	165
NW_020846460.1	40429	41463
NW_020846461.1	103346	101546
NW_020846462.1	97	107
NW_020846463.1	932	952
NW_020846464.1	109	123
NW_020846465.1	607	615
NW_020846466.1	65277	66721
NW_020846467.1	205	194
NW_020846468.1	13923	12737
NW_020846469.1	13236	13319
NW_020846470.1	97750	98106
NW_020846471.1	211	194
NW_020846472.1	7377	7058
NW_020846473.1	1103	1162
NW_020846474.1	3012	2934
NW_020846475.1	144257	141477
NW_020846476.1	154	142
NW_020846477.1	348	384
NW_020846478.1	67	93
NW_020846479.1	51	35
NW_020846480.1	89	64
NW_020846481.1	58	50
NW_020846482.1	174	196
NW_020846483.1	149	175
NW_020846484.1	9279	9523
NW_020846485.1	524	398
NW_020846486.1	79	82
NW_020846487.1	19472	19792
NW_020846488.1	12959	12451
NW_020846489.1	421	360
NW_020846490.1	191	172
NW_020846491.1	424	389
NW_020846492.1	108696	109342
NW_020846493.1	125	146
NW_020846494.1	46182	46392
NW_020846495.1	45564	45730
NW_020846496.1	202	231
NW_020846497.1	1348	1311
NW_020846498.1	472	444
NW_020846499.1	101	107
NW_020846500.1	95822	98660
NW_020846501.1	112767	113424
NW_020846502.1	2906	2657
NW_020846503.1	310	297
NW_020846504.1	106	96
NW_020846505.1	4780	5179
NW_020846506.1	78	100
NW_020846507.1	103	77
NW_020846508.1	35655	35592
NW_020846509.1	600	637
NW_020846510.1	65	55
NW_020846511.1	389	400
NW_020846512.1	825	878
NW_020846513.1	113	85
NW_020846514.1	1613	1479
NW_020846515.1	484	410
NW_020846516.1	115	109
NW_020846517.1	242	194
NW_020846518.1	242	223
NW_020846519.1	60	81
NW_020846520.1	225	267
NW_020846521.1	831	909
NW_020846522.1	34922	35347
NW_020846523.1	50	52
NW_020846524.1	15838	16442
NW_020846525.1	92	107
NW_020846526.1	40802	41544
NW_020846527.1	85	111
NW_020846528.1	136	123
NW_020846529.1	29091	29062
NW_020846530.1	275	259
NW_020846531.1	9459	9916
NW_020846532.1	120085	119316
NW_020846533.1	42721	43483
NW_020846534.1	470	465
NW_020846535.1	6360	6088
NW_020846536.1	252	232
NW_020846537.1	56215	56685
NW_020846538.1	202	208
NW_020846539.1	362	396
NW_020846540.1	60	58
NW_020846541.1	8723	9309
NW_020846542.1	3345	3633
NW_020846543.1	279	319
NW_020846544.1	17623	17187
NW_020846545.1	9877	10190
NW_020846546.1	346	325
NW_020846547.1	193	174
NW_020846548.1	98	98
NW_020846549.1	89	91
NW_020846550.1	123	119
NW_020846551.1	66	75
NW_020846552.1	2746	2767
NW_020846553.1	100765	100695
NW_020846554.1	21059	21930
NW_020846555.1	210	196
NW_020846556.1	1235	1203
NW_020846557.1	4534	4758
NW_020846558.1	8105	8136
NW_020846559.1	205	217
NW_020846560.1	250	190
NW_020846561.1	5179	5159
NW_020846562.1	360	330
NW_020846563.1	25034	25070
NW_020846564.1	132	149
NW_020846565.1	116	71
NW_020846566.1	73	113
NW_020846567.1	84	106
NW_020846568.1	36307	36103
NW_020846569.1	11578	12393
NW_020846570.1	554	567
NW_020846571.1	47	38
NW_020846572.1	3658	3676
NW_020846573.1	145	144
NW_020846574.1	53	41
NW_020846575.1	849	755
NW_020846576.1	36303	36254
NW_020846577.1	118	107
NW_020846578.1	129	126
NW_020846579.1	346	342
NW_020846580.1	15453	15233
NW_020846581.1	15637	16140
NW_020846582.1	84	82
NW_020846583.1	212	226
NW_020846584.1	293	293
NW_020846585.1	188	257
NW_020846586.1	352	432
NW_020846587.1	122	127
NW_020846588.1	113	101
NW_020846589.1	155	113
NW_020846590.1	130	132
NW_020846591.1	4972	5042
NW_020846592.1	2687	2620
NW_020846593.1	26062	26415
NW_020846594.1	262	329
NW_020846595.1	96199	96755
NW_020846596.1	172	184
NW_020846597.1	217	235
NW_020846598.1	73	76
NW_020846599.1	333	382
NW_020846600.1	115	103
NW_020846601.1	503	501
NW_020846602.1	1561	1588
NW_020846603.1	11543	11637
NW_020846604.1	363	329
NW_020846605.1	42704	42804
NW_020846606.1	6532	6366
NW_020846607.1	3074	3217
NW_020846608.1	98	68
NW_020846609.1	29317	30694
NW_020846610.1	1555	1524
NW_020846611.1	194	211
NW_020846612.1	269	321
NW_020846613.1	3343	3474
NW_020846614.1	2549	2586
NW_020846615.1	3145	3194
NW_020846616.1	132	111
NW_020846617.1	107	85
NW_020846618.1	215	268
NW_020846619.1	938	1018
NW_020846620.1	59	67
NW_020846621.1	133	147
NW_020846622.1	171	153
NW_020846623.1	4851	4896
NW_020846624.1	1102	1142
NW_020846625.1	4188	4208
NW_020846626.1	81	60
NW_020846627.1	34368	34679
NW_020846628.1	188	164
NW_020846629.1	10122	9582
NW_020846630.1	263	224
NW_020846631.1	3151	3266
NW_020846632.1	9278	9205
NW_020846633.1	40	42
NW_020846634.1	202	211
NW_020846635.1	54097	54653
NW_020846636.1	410	443
NW_020846637.1	40657	40090
NW_020846638.1	188	193
NW_020846639.1	34740	35257
NW_020846640.1	4307	4372
NW_020846641.1	184	184
NW_020846642.1	1272	1312
NW_020846643.1	328	304
NW_020846644.1	14782	14532
NW_020846645.1	239	266
NW_020846646.1	4960	4822
NW_020846647.1	4272	4239
NW_020846648.1	31687	31295
NW_020846649.1	62000	61837
NW_020846650.1	192	267
NW_020846651.1	132	129
NW_020846652.1	5470	5832
NW_020846653.1	4831	4576
NW_020846654.1	3653	3445
NW_020846655.1	114127	113402
NW_020846656.1	315	315
NW_020846657.1	2090	1927
NW_020846658.1	4271	4339
NW_020846659.1	81	92
NW_020846660.1	122	118
NW_020846661.1	3512	3400
NW_020846662.1	124	108
NW_020846663.1	85	63
NW_020846664.1	124	121
NW_020846665.1	83	73
NW_020846666.1	124	96
NW_020846667.1	179	187
NW_020846668.1	91	118
NW_020846669.1	61	61
NW_020846670.1	247	189
NW_020846671.1	3654	3820
NW_020846672.1	77	109
NW_020846673.1	1185	1415
NW_020846674.1	5487	5437
NW_020846675.1	534	499
NW_020846676.1	706	848
NW_020846677.1	661	697
NW_020846678.1	97300	99708
NW_020846679.1	7268	7015
NW_020846680.1	174	174
NW_020846681.1	391	418
NW_020846682.1	172	195
NW_020846683.1	1436	1498
NW_020846684.1	255	246
NW_020846685.1	839	806
NW_020846686.1	81598	82061
NW_020846687.1	196	196
NW_020846688.1	168	147
NW_020846689.1	206	200
NW_020846690.1	140	143
NW_020846691.1	1142	1086
NW_020846692.1	239	304
NW_020846693.1	75843	76766
NW_020846694.1	298	167
NW_020846695.1	65	65
NW_020846696.1	83	62
NW_020846697.1	80992	81559
NW_020846698.1	3778	3370
NW_020846699.1	19402	19790
NW_020846700.1	48044	48401
NW_020846701.1	38109	37603
NW_020846702.1	170	166
NW_020846703.1	858	778
NW_020846704.1	1236	1383
NW_020846705.1	675	696
NW_020846706.1	42265	42121
NW_020846707.1	71	75
NW_020846708.1	9189	9036
NW_020846709.1	354	360
NW_020846710.1	240	234
NW_020846711.1	113	84
NW_020846712.1	87	100
NW_020846713.1	100	59
NW_020846714.1	96	99
NW_020846715.1	148	131
NW_020846716.1	482	482
NW_020846717.1	101	81
NW_020846718.1	234	203
NW_020846719.1	14583	14907
NW_020846720.1	185	199
NW_020846721.1	279	328
NW_020846722.1	3278	3317
NW_020846723.1	66908	66748
NW_020846724.1	256	267
NW_020846725.1	161	177
NW_020846726.1	128	171
NW_020846727.1	119580	122260
NW_020846728.1	8322	8564
NW_020846729.1	164	160
NW_020846730.1	482	557
NW_020846731.1	3438	3578
NW_020846732.1	201	261
NW_020846733.1	393	418
NW_020846734.1	7293	6813
NW_020846735.1	163	155
NW_020846736.1	257	296
NW_020846737.1	72523	76456
NW_020846738.1	4573	4947
NW_020846739.1	250	239
NW_020846740.1	10780	10351
NW_020846741.1	83	54
NW_020846742.1	345	321
NW_020846743.1	108	107
NW_020846744.1	261	219
NW_020846745.1	357	595
NW_020846746.1	1639	1729
NW_020846747.1	157979	155408
NW_020846748.1	823	990
NW_020846749.1	9347	8927
NW_020846750.1	103	89
NW_020846751.1	7599	8659
NW_020846752.1	1632	1654
NW_020846753.1	52444	51518
NW_020846754.1	91	84
NW_020846755.1	1019	954
NW_020846756.1	10294	10886
NW_020846757.1	222	158
NW_020846758.1	466	459
NW_020846759.1	2060	2185
NW_020846760.1	1040	1342
NW_020846761.1	156600	155432
NW_020846762.1	59	71
NW_020846763.1	4659	4712
NW_020846764.1	3862	4031
NW_020846765.1	429	462
NW_020846766.1	23851	23260
NW_020846767.1	118	158
NW_020846768.1	97	92
NW_020846769.1	147	175
NW_020846770.1	60402	61552
NW_020846771.1	157	168
NW_020846772.1	222	231
NW_020846773.1	3010	2788
NW_020846774.1	90	106
NW_020846775.1	88587	89090
NW_020846776.1	12829	12469
NW_020846777.1	10400	10333
NW_020846778.1	5411	6478
NW_020846779.1	103937	106251
NW_020846780.1	66	60
NW_020846781.1	9321	9178
NW_020846782.1	235	250
NW_020846783.1	4938	5136
NW_020846784.1	22831	23629
NW_020846785.1	32670	33631
NW_020846786.1	247	356
NW_020846787.1	3851	3893
NW_020846788.1	305	255
NW_020846789.1	96	240
NW_020846790.1	233	234
NW_020846791.1	4695	4859
NW_020846792.1	184	168
NW_020846793.1	391	550
NW_020846794.1	336	383
NW_020846795.1	1537	1611
NW_020846796.1	108	90
NW_020846797.1	15243	15809
NW_020846798.1	154	163
NW_020846799.1	221	189
NW_020846800.1	10151	9995
NW_020846801.1	111340	111850
NW_020846802.1	1240	1149
NW_020846803.1	10311	9720
NW_020846804.1	139618	139696
NW_020846805.1	5997	5832
NW_020846806.1	102	110
NW_020846807.1	2465	2561
NW_020846808.1	8693	8264
NW_020846809.1	46	36
NW_020846810.1	99196	100395
NW_020846811.1	38	66
NW_020846812.1	41098	41065
NW_020846813.1	6085	5943
NW_020846814.1	4737	5034
NW_020846815.1	21027	20842
NW_020846816.1	21059	20853
NW_020846817.1	129	119
NW_020846818.1	98	74
NW_020846819.1	14707	14498
NW_020846820.1	56	62
NW_020846821.1	189	178
NW_020846822.1	4851	4728
NW_020846823.1	340	327
NW_020846824.1	59107	60638
NW_020846825.1	77	65
NW_020846826.1	5436	5767
NW_020846827.1	138	118
NW_020846828.1	8331	8382
NW_020846829.1	2164	2209
NW_020846830.1	69	74
NW_020846831.1	207	251
NW_020846832.1	561	503
NW_020846833.1	5996	5820
NW_020846834.1	69067	68775
NW_020846835.1	645	671
NW_020846836.1	300	268
NW_020846837.1	68	77
NW_020846838.1	66	51
NW_020846839.1	252	268
NW_020846840.1	39	48
NW_020846841.1	392	398
NW_020846842.1	226	220
NW_020846843.1	1323	1121
NW_020846844.1	135	170
NW_020846845.1	1147	1219
NW_020846846.1	277	288
NW_020846847.1	152	175
NW_020846848.1	666	680
NW_020846849.1	199	203
NW_020846850.1	8822	8859
NW_020846851.1	261	156
NW_020846852.1	257	293
NW_020846853.1	96	105
NW_020846854.1	945	981
NW_020846855.1	220	196
NW_020846856.1	158	126
NW_020846857.1	201	207
NW_020846858.1	81	99
NW_020846859.1	116	95
NW_020846860.1	403	445
NW_020846861.1	13726	13574
NW_020846862.1	128	130
NW_020846863.1	12073	11942
NW_020846864.1	111	117
NW_020846865.1	880	817
NW_020846866.1	53233	54951
NW_020846867.1	85	88
NW_020846868.1	94	104
NW_020846869.1	258	179
NW_020846870.1	21956	22483
NW_020846871.1	87	95
NW_020846872.1	6528	6353
NW_020846873.1	52698	51565
NW_020846874.1	3065	3155
NW_020846875.1	48190	46133
NW_020846876.1	89705	91565
NW_020846877.1	11328	11853
NW_020846878.1	275	241
NW_020846879.1	217	160
NW_020846880.1	2641	2723
NW_020846881.1	186	156
NW_020846882.1	71	112
NW_020846883.1	8305	7935
NW_020846884.1	561	533
NW_020846885.1	221	192
NW_020846886.1	124	145
NW_020846887.1	275	275
NW_020846888.1	9484	9968
NW_020846889.1	6313	6157
NW_020846890.1	1188	1062
NW_020846891.1	78	54
NW_020846892.1	70	93
NW_020846893.1	5342	4684
NW_020846894.1	318	359
NW_020846895.1	336	352
NW_020846896.1	989	961
NW_020846897.1	1806	1985
NW_020846898.1	101	101
NW_020846899.1	3074	2931
NW_020846900.1	167	161
NW_020846901.1	70078	71071
NW_020846902.1	520	460
NW_020846903.1	71	75
NW_020846904.1	29566	28454
NW_020846905.1	4930	5032
NW_020846906.1	78	71
NW_020846907.1	9433	9698
NW_020846908.1	72317	72947
NW_020846909.1	67	73
NW_020846910.1	7838	7150
NW_020846911.1	8768	8740
NW_020846912.1	119	158
NW_020846913.1	8143	8067
NW_020846914.1	46419	45109
NW_020846915.1	77	91
NW_020846916.1	10444	10079
NW_020846917.1	40467	41054
NW_020846918.1	254	329
NW_020846919.1	110	153
NW_020846920.1	24018	23832
NW_020846921.1	263	355
NW_020846922.1	4985	4989
NW_020846923.1	855	721
NW_020846924.1	42439	40968
NW_020846925.1	132	110
NW_020846926.1	241	228
NW_020846927.1	202	188
NW_020846928.1	13730	14014
NW_020846929.1	29814	29225
NW_020846930.1	216	277
NW_020846931.1	3853	3966
NW_020846932.1	821	773
NW_020846933.1	278	281
NW_020846934.1	149	163
NW_020846935.1	1674	1653
NW_020846936.1	256	275
NW_020846937.1	168	208
NW_020846938.1	112	110
NW_020846939.1	758	767
NW_020846940.1	159	171
NW_020846941.1	131543	131408
NW_020846942.1	268525	269353
NW_020846943.1	132	97
NW_020846944.1	359	407
NW_020846945.1	89394	89742
NW_020846946.1	83	68
NW_020846947.1	335	240
NW_020846948.1	9199	9395
NW_020846949.1	263	335
NW_020846950.1	4418	4517
NW_020846951.1	3009	2962
NW_020846952.1	111	157
NW_020846953.1	116	124
NW_020846954.1	929	1019
NW_020846955.1	75	74
NW_020846956.1	9224	9534
NW_020846957.1	134	90
NW_020846958.1	1139	1390
NW_020846959.1	109	127
NW_020846960.1	620	599
NW_020846961.1	203	165
NW_020846962.1	40909	41424
NW_020846963.1	646	639
NW_020846964.1	21908	23124
NW_020846965.1	399	337
NW_020846966.1	299	263
NW_020846967.1	162	165
NW_020846968.1	207	147
NW_020846969.1	105	152
NW_020846970.1	160	160
NW_020846971.1	164	190
NW_020846972.1	124	123
NW_020846973.1	86	94
NW_020846974.1	105	106
NW_020846975.1	1509	1719
NW_020846976.1	144	136
NW_020846977.1	119	125
NW_020846978.1	4424	4955
NW_020846979.1	173	145
NW_020846980.1	123	111
NW_020846981.1	268	234
NW_020846982.1	235	142
NW_020846983.1	89	88
NW_020846984.1	13179	13280
NW_020846985.1	627	634
NW_020846986.1	261	262
NW_020846987.1	44462	46157
NW_020846988.1	119	131
NW_020846989.1	668	702
NW_020846990.1	96	98
NW_020846991.1	752	795
NW_020846992.1	60	57
NW_020846993.1	212	305
NW_020846994.1	374	360
NW_020846995.1	609	594
NW_020846996.1	7015	6952
NW_020846997.1	24429	25836
NW_020846998.1	4787	4702
NW_020846999.1	115	125
NW_020847000.1	2950	2429
NW_020847001.1	7241	7937
NW_020847002.1	50992	51515
NW_020847003.1	121	108
NW_020847004.1	217	236
NW_020847005.1	85	79
NW_020847006.1	380	333
NW_020847007.1	138	141
NW_020847008.1	139	151
NW_020847009.1	107	99
NW_020847010.1	298	341
NW_020847011.1	92	99
NW_020847012.1	134	146
NW_020847013.1	117	129
NW_020847014.1	259	249
NW_020847015.1	139	117
NW_020847016.1	62	61
NW_020847017.1	211	210
NW_020847018.1	287	308
NW_020847019.1	248	217
NW_020847020.1	78	89
NW_020847021.1	79	51
NW_020847022.1	11204	11242
NW_020847023.1	101	108
NW_020847024.1	502	433
NW_020847025.1	1851	1969
NW_020847026.1	30595	30922
NW_020847027.1	37087	37589
NW_020847028.1	6918	7148
NW_020847029.1	586	648
NW_020847030.1	219	190
NW_020847031.1	135	101
NW_020847032.1	650	458
NW_020847033.1	147	207
NW_020847034.1	27142	27071
NW_020847035.1	162	148
NW_020847036.1	215	214
NW_020847037.1	64	86
NW_020847038.1	185	209
NW_020847039.1	60	74
NW_020847040.1	26903	26360
NW_020847041.1	177	220
NW_020847042.1	176	127
NW_020847043.1	91	105
NW_020847044.1	98	149
NW_020847045.1	414	401
NW_020847046.1	244	193
NW_020847047.1	9825	10099
NW_020847048.1	1790	1733
NW_020847049.1	14293	14322
NW_020847050.1	13705	13646
NW_020847051.1	277	307
NW_020847052.1	387	357
NW_020847053.1	301	286
NW_020847054.1	88	86
NW_020847055.1	98	86
NW_020847056.1	104	91
NW_020847057.1	91	103
NW_020847058.1	194	194
NW_020847059.1	1213	1260
NW_020847060.1	232	230
NW_020847061.1	206	217
NW_020847062.1	155	170
NW_020847063.1	81318	82255
NW_020847064.1	8508	8975
NW_020847065.1	414	667
NW_020847066.1	75	53
NW_020847067.1	71	63
NW_020847068.1	5389	5192
NW_020847069.1	75	70
NW_020847070.1	160	183
NW_020847071.1	564	520
NW_020847072.1	7547	7616
NW_020847073.1	310	289
NW_020847074.1	99	95
NW_020847075.1	400	313
NW_020847076.1	328	370
NW_020847077.1	78	99
NW_020847078.1	16192	15936
NW_020847079.1	129490	128857
NW_020847080.1	160	185
NW_020847081.1	438	440
NW_020847082.1	16208	16396
NW_020847083.1	693	699
NW_020847084.1	2021	1939
NW_020847085.1	122	119
NW_020847086.1	319	328
NW_020847087.1	156	149
NW_020847088.1	376	412
NW_020847089.1	88	86
NW_020847090.1	763	672
NW_020847091.1	302	353
NW_020847092.1	78	73
NW_020847093.1	309	308
NW_020847094.1	12933	13127
NW_020847095.1	1123	1115
NW_020847096.1	6328	5804
NW_020847097.1	8385	8524
NW_020847098.1	817	822
NW_020847099.1	108	74
NW_020847100.1	143805	142443
NW_020847101.1	386	398
NW_020847102.1	89	85
NW_020847103.1	101	88
NW_020847104.1	5248	5045
NW_020847105.1	159	171
NW_020847106.1	167	136
NW_020847107.1	101	111
NW_020847108.1	79	89
NW_020847109.1	12101	12902
NW_020847110.1	25301	24187
NW_020847111.1	98	114
NW_020847112.1	381	342
NW_020847113.1	467	614
NW_020847114.1	460	416
NW_020847115.1	189	213
NW_020847116.1	192	179
NW_020847117.1	228	273
NW_020847118.1	154	109
NW_020847119.1	10187	10737
NW_020847120.1	515	577
NW_020847121.1	845	950
NW_020847122.1	195	207
NW_020847123.1	78819	77619
NW_020847124.1	282	300
NW_020847125.1	721	703
NW_020847126.1	12034	11238
NW_020847127.1	420	447
NW_020847128.1	52031	53668
NW_020847129.1	814	769
NW_020847130.1	16163	16547
NW_020847131.1	530	575
NW_020847132.1	447	433
NW_020847133.1	171	182
NW_020847134.1	438	415
NW_020847135.1	1186	1113
NW_020847136.1	350	409
NW_020847137.1	43	62
NW_020847138.1	332	366
NW_020847139.1	73	66
NW_020847140.1	206	228
NW_020847141.1	294	298
NW_020847142.1	133	113
NW_020847143.1	14672	15119
NW_020847144.1	216	208
NW_020847145.1	164	186
NW_020847146.1	110	100
NW_020847147.1	348	310
NW_020847148.1	58	73
NW_020847149.1	59695	60544
NW_020847150.1	46	50
NW_020847151.1	16209	15609
NW_020847152.1	5101	5249
NW_020847153.1	5774	5604
NW_020847154.1	283	237
NW_020847155.1	79	71
NW_020847156.1	202	188
NW_020847157.1	161	162
NW_020847158.1	82	96
NW_020847159.1	70660	72019
NW_020847160.1	148	140
NW_020847161.1	132	136
NW_020847162.1	237	216
NW_020847163.1	768	842
NW_020847164.1	85844	85976
NW_020847165.1	158	181
NW_020847166.1	3340	3210
NW_020847167.1	160	135
NW_020847168.1	87	122
NW_020847169.1	70	96
NW_020847170.1	231	219
NW_020847171.1	94	77
NW_020847172.1	4472	4279
NW_020847173.1	132	107
NW_020847174.1	138	212
NW_020847175.1	23680	24105
NW_020847176.1	7670	7977
NW_020847177.1	78	72
NW_020847178.1	16119	16024
NW_020847179.1	34034	33098
NW_020847180.1	113	114
NW_020847181.1	341	409
NW_020847182.1	76	100
NW_020847183.1	242	211
NW_020847184.1	114	100
NW_020847185.1	129	156
NW_020847186.1	745	792
NW_020847187.1	111687	108912
NW_020847188.1	2631	2509
NW_020847189.1	64	65
NW_020847190.1	155	177
NW_020847191.1	170	180
NW_020847192.1	21779	21722
NW_020847193.1	154	200
NW_020847194.1	7011	7121
NW_020847195.1	9533	9568
NW_020847196.1	2789	2844
NW_020847197.1	7736	7695
NW_020847198.1	6570	6112
NW_020847199.1	8104	8241
NW_020847200.1	532	498
NW_020847201.1	86	82
NW_020847202.1	166	169
NW_020847203.1	68	119
NW_020847204.1	11163	10329
NW_020847205.1	18742	19012
NW_020847206.1	33936	33466
NW_020847207.1	161	126
NW_020847208.1	75162	75719
NW_020847209.1	873	908
NW_020847210.1	68	64
NW_020847211.1	140	143
NW_020847212.1	181	149
NW_020847213.1	13615	13680
NW_020847214.1	377	317
NW_020847215.1	126	123
NW_020847216.1	175	194
NW_020847217.1	306	329
NW_020847218.1	59	61
NW_020847219.1	173	155
NW_020847220.1	19958	20662
NW_020847221.1	7361	7482
NW_020847222.1	14584	13981
NW_020847223.1	9678	9367
NW_020847224.1	293	297
NW_020847225.1	24679	25202
NW_020847226.1	67	112
NW_020847227.1	7017	6724
NW_020847228.1	799	920
NW_020847229.1	413	422
NW_020847230.1	3717	3698
NW_020847231.1	232	227
NW_020847232.1	2336	2300
NW_020847233.1	110	113
NW_020847234.1	77	94
NW_020847235.1	309	338
NW_020847236.1	20693	20498
NW_020847237.1	17995	16952
NW_020847238.1	3957	4109
NW_020847239.1	115	154
NW_020847240.1	64	78
NW_020847241.1	537	421
NW_020847242.1	62493	62799
NW_020847243.1	746	709
NW_020847244.1	141	168
NW_020847245.1	96	153
NW_020847246.1	3728	3945
NW_020847247.1	166	198
NW_020847248.1	402826	402202
NW_020847249.1	62	65
NW_020847250.1	7711	7721
NW_020847251.1	2132	2106
NW_020847252.1	304	264
NW_020847253.1	98	102
NW_020847254.1	472	389
NW_020847255.1	414	465
NW_020847256.1	69	77
NW_020847257.1	153	143
NW_020847258.1	53735	54186
NW_020847259.1	126	137
NW_020847260.1	56160	55963
NW_020847261.1	106	101
NW_020847262.1	759	766
NW_020847263.1	4959	5126
NW_020847264.1	21968	23462
NW_020847265.1	602	552
NW_020847266.1	214	260
NW_020847267.1	37720	36748
NW_020847268.1	519	481
NW_020847269.1	882	1233
NW_020847270.1	45359	44640
NW_020847271.1	7788	7973
NW_020847272.1	401	407
NW_020847273.1	3290	3252
NW_020847274.1	41	43
NW_020847275.1	23288	23199
NW_020847276.1	120	125
NW_020847277.1	14461	14649
NW_020847278.1	361	376
NW_020847279.1	97	80
NW_020847280.1	99	102
NW_020847281.1	644	687
NW_020847282.1	448	493
NW_020847283.1	123	124
NW_020847284.1	97	87
NW_020847285.1	5158	5242
NW_020847286.1	14870	15249
NW_020847287.1	106	93
NW_020847288.1	108637	108268
NW_020847289.1	300	354
NW_020847290.1	232	215
NW_020847291.1	56	77
NW_020847292.1	2293	2214
NW_020847293.1	9013	9065
NW_020847294.1	16070	16048
NW_020847295.1	985	1085
NW_020847296.1	10666	10137
NW_020847297.1	436	413
NW_020847298.1	3302	3280
NW_020847299.1	45	80
NW_020847300.1	1706	1559
NW_020847301.1	12720	12782
NW_020847302.1	210	179
NW_020847303.1	7086	6882
NW_020847304.1	254	255
NW_020847305.1	2782	2703
NW_020847306.1	9385	9608
NW_020847307.1	103	69
NW_020847308.1	153	154
NW_020847309.1	214	238
NW_020847310.1	257	224
NW_020847311.1	10325	10142
NW_020847312.1	320	366
NW_020847313.1	171	173
NW_020847314.1	188	200
NW_020847315.1	396	326
NW_020847316.1	1101	1101
NW_020847317.1	112	120
NW_020847318.1	84	95
NW_020847319.1	219	225
NW_020847320.1	106	117
NW_020847321.1	30080	31573
NW_020847322.1	264	312
NW_020847323.1	10929	10850
NW_020847324.1	79	65
NW_020847325.1	126	136
NW_020847326.1	19792	20744
NW_020847327.1	94	96
NW_020847328.1	494	447
NW_020847329.1	298	371
NW_020847330.1	235	180
NW_020847331.1	106903	107678
NW_020847332.1	3497	3366
NW_020847333.1	260	245
NW_020847334.1	236	187
NW_020847335.1	150	201
NW_020847336.1	8046	7613
NW_020847337.1	23464	23508
NW_020847338.1	546	607
NW_020847339.1	7688	7637
NW_020847340.1	68	79
NW_020847341.1	313	291
NW_020847342.1	106	103
NW_020847343.1	139	147
NW_020847344.1	128078	127687
NW_020847345.1	214	169
NW_020847346.1	129	139
NW_020847347.1	45632	45724
NW_020847348.1	343	258
NW_020847349.1	45158	46082
NW_020847350.1	375	353
NW_020847351.1	4305	4042
NW_020847352.1	594	737
NW_020847353.1	462	350
NW_020847354.1	2674	2968
NW_020847355.1	13757	13870
NW_020847356.1	101	130
NW_020847357.1	279	283
NW_020847358.1	2733	2724
NW_020847359.1	7653	7810
NW_020847360.1	5424	5472
NW_020847361.1	14922	14549
NW_020847362.1	122	115
NW_020847363.1	116	117
NW_020847364.1	153	124
NW_020847365.1	389	428
NW_020847366.1	125	146
NW_020847367.1	341	342
NW_020847368.1	9061	9450
NW_020847369.1	118642	118631
NW_020847370.1	500	505
NW_020847371.1	297	416
NW_020847372.1	105837	102769
NW_020847373.1	234	276
NW_020847374.1	18499	18284
NW_020847375.1	163	118
NW_020847376.1	19715	20467
NW_020847377.1	1862	1970
NW_020847378.1	106354	104925
NW_020847379.1	656	623
NW_020847380.1	70	62
NW_020847381.1	329	279
NW_020847382.1	7752	8130
NW_020847383.1	476	508
NW_020847384.1	44092	45465
NW_020847385.1	321	275
NW_020847386.1	159	138
NW_020847387.1	116	100
NW_020847388.1	115	129
NW_020847389.1	3225	3422
NW_020847390.1	14546	14613
NW_020847391.1	5538	5525
NW_020847392.1	192	199
NW_020847393.1	57	76
NW_020847394.1	6908	6971
NW_020847395.1	501	576
NW_020847396.1	136	120
NW_020847397.1	3307	3166
NW_020847398.1	118	138
NW_020847399.1	593	591
NW_020847400.1	840	814
NW_020847401.1	73	90
NW_020847402.1	7949	7806
NW_020847403.1	101	100
NW_020847404.1	296	259
NW_020847405.1	442	455
NW_020847406.1	143	141
NW_020847407.1	16577	16416
NW_020847408.1	20420	20062
NW_020847409.1	728	727
NW_020847410.1	60589	61269
NW_020847411.1	7160	6855
NW_020847412.1	645	751
NW_020847413.1	711	725
NW_020847414.1	231	252
NW_020847415.1	78	67
NW_020847416.1	102	104
NW_020847417.1	74409	72877
NW_020847418.1	118	86
NW_020847419.1	74	98
NW_020847420.1	8173	8131
NW_020847421.1	157	176
NW_020847422.1	148	154
NW_020847423.1	170	207
NW_020847424.1	224	199
NW_020847425.1	5444	5364
NW_020847426.1	48	58
NW_020847427.1	95	113
NW_020847428.1	85	83
NW_020847429.1	1141	941
NW_020847430.1	1491	1361
NW_020847431.1	72	83
NW_020847432.1	212	205
NW_020847433.1	163	134
NW_020847434.1	9779	10363
NW_020847435.1	894	881
NW_020847436.1	6136	6113
NW_020847437.1	5303	5182
NW_020847438.1	652	668
NW_020847439.1	418	437
NW_020847440.1	219	218
NW_020847441.1	33012	32622
NW_020847442.1	105	123
NW_020847443.1	110	131
NW_020847444.1	1175	1508
NW_020847445.1	1252	1350
NW_020847446.1	405	404
NW_020847447.1	516	456
NW_020847448.1	427	541
NW_020847449.1	75	55
NW_020847450.1	82	44
NW_020847451.1	4731	4601
NW_020847452.1	3830	3973
NW_020847453.1	1448	1367
NW_020847454.1	11007	11084
NW_020847455.1	254	134
NW_020847456.1	84	83
NW_020847457.1	11204	10989
NW_020847458.1	2589	2704
NW_020847459.1	107	110
NW_020847460.1	764	845
NW_020847461.1	3903	4112
NW_020847462.1	1673	1867
NW_020847463.1	121	137
NW_020847464.1	7033	7253
NW_020847465.1	323	349
NW_020847466.1	3527	3374
NW_020847467.1	79	91
NW_020847468.1	51	45
NW_020847469.1	470	508
NW_020847470.1	850	955
NW_020847471.1	9348	9718
NW_020847472.1	121315	121424
NW_020847473.1	2057	2215
NW_020847474.1	413	424
NW_020847475.1	222	187
NW_020847476.1	78	69
NW_020847477.1	112	99
NW_020847478.1	97851	98404
NW_020847479.1	761	687
NW_020847480.1	104	90
NW_020847481.1	258	252
NW_020847482.1	269	225
NW_020847483.1	119	142
NW_020847484.1	110486	109302
NW_020847485.1	267	276
NW_020847486.1	62	80
NW_020847487.1	470	517
NW_020847488.1	80	89
NW_020847489.1	1170	1190
NW_020847490.1	43469	43315
NW_020847491.1	127	172
NW_020847492.1	1138	1247
NW_020847493.1	66	65
NW_020847494.1	40377	39727
NW_020847495.1	39293	37482
NW_020847496.1	65	70
NW_020847497.1	4582	4900
NW_020847498.1	64	54
NW_020847499.1	69714	72284
NW_020847500.1	373	332
NW_020847501.1	15430	14980
NW_020847502.1	5850	5818
NW_020847503.1	88	97
NW_020847504.1	1401	1329
NW_020847505.1	423	421
NW_020847506.1	14677	14924
NW_020847507.1	275	329
NW_020847508.1	211	208
NW_020847509.1	189	160
NW_020847510.1	1440	1352
NW_020847511.1	392	258
NW_020847512.1	1219	1281
NW_020847513.1	64	78
NW_020847514.1	3006	2865
NW_020847515.1	146	142
NW_020847516.1	73741	73986
NW_020847517.1	10129	10589
NW_020847518.1	196	207
NW_020847519.1	116	121
NW_020847520.1	96	95
NW_020847521.1	49	84
NW_020847522.1	2503	2429
NW_020847523.1	43	62
NW_020847524.1	190	271
NW_020847525.1	8557	8664
NW_020847526.1	113111	111101
NW_020847527.1	868	892
NW_020847528.1	172	177
NW_020847529.1	130	151
NW_020847530.1	551	517
NW_020847531.1	112	111
NW_020847532.1	1307	1323
NW_020847533.1	80184	82382
NW_020847534.1	151	154
NW_020847535.1	135	137
NW_020847536.1	35011	33979
NW_020847537.1	291	290
NW_020847538.1	95	79
NW_020847539.1	3562	3834
NW_020847540.1	237	273
NW_020847541.1	211	266
NW_020847542.1	13886	13200
NW_020847543.1	2152	2032
NW_020847544.1	17492	17211
NW_020847545.1	18035	18857
NW_020847546.1	926	928
NW_020847547.1	327	308
NW_020847548.1	404	398
NW_020847549.1	19504	20138
NW_020847550.1	127	133
NW_020847551.1	223	204
NW_020847552.1	7573	7676
NW_020847553.1	377	405
NW_020847554.1	169	179
NW_020847555.1	7050	7222
NW_020847556.1	311	342
NW_020847557.1	2846	2604
NW_020847558.1	181	140
NW_020847559.1	76	74
NW_020847560.1	518	504
NW_020847561.1	9328	8761
NW_020847562.1	134	162
NW_020847563.1	44408	46323
NW_020847564.1	206	212
NW_020847565.1	4475	4617
NW_020847566.1	832	898
NW_020847567.1	201	187
NW_020847568.1	1030	980
NW_020847569.1	195356	195843
NW_020847570.1	433	403
NW_020847571.1	112	117
NW_020847572.1	104922	103473
NW_020847573.1	18281	17771
NW_020847574.1	107	93
NW_020847575.1	121	129
NW_020847576.1	4276	4344
NW_020847577.1	225	162
NW_020847578.1	257	219
NW_020847579.1	233	229
NW_020847580.1	101	119
NW_020847581.1	158	127
NW_020847582.1	65	56
NW_020847583.1	9621	9727
NW_020847584.1	50330	50536
NW_020847585.1	84	93
NW_020847586.1	89449	89010
NW_020847587.1	1121	1030
NW_020847588.1	326	340
NW_020847589.1	174	158
NW_020847590.1	2612	2482
NW_020847591.1	66	73
NW_020847592.1	9601	9504
NW_020847593.1	105106	104216
NW_020847594.1	176	211
NW_020847595.1	170	138
NW_020847596.1	311	339
NW_020847597.1	2130	2080
NW_020847598.1	403	491
NW_020847599.1	591	545
NW_020847600.1	182	185
NW_020847601.1	647	689
NW_020847602.1	121	131
NW_020847603.1	114	111
NW_020847604.1	52921	51112
NW_020847605.1	350	411
NW_020847606.1	65	77
NW_020847607.1	140414	138953
NW_020847608.1	110	106
NW_020847609.1	7020	7608
NW_020847610.1	107	110
NW_020847611.1	819	810
NW_020847612.1	388	401
NW_020847613.1	80	75
NW_020847614.1	27195	27715
NW_020847615.1	92	103
NW_020847616.1	4510	4217
NW_020847617.1	486	515
NW_020847618.1	15478	15302
NW_020847619.1	334	261
NW_020847620.1	67415	67195
NW_020847621.1	1562	1721
NW_020847622.1	137	119
NW_020847623.1	546	565
NW_020847624.1	5560	5706
NW_020847625.1	68	44
NW_020847626.1	296	261
NW_020847627.1	69840	69569
NW_020847628.1	138	147
NW_020847629.1	33101	33623
NW_020847630.1	1090	1022
NW_020847631.1	141	149
NW_020847632.1	461	449
NW_020847633.1	62	68
NW_020847634.1	86	83
NW_020847635.1	97	153
NW_020847636.1	538	539
NW_020847637.1	196	213
NW_020847638.1	43650	45854
NW_020847639.1	348	305
NW_020847640.1	63	55
NW_020847641.1	1143	1118
NW_020847642.1	96	125
NW_020847643.1	13332	13274
NW_020847644.1	338	404
NW_020847645.1	5895	5593
NW_020847646.1	1487	1406
NW_020847647.1	12227	11393
NW_020847648.1	55135	55129
NW_020847649.1	6203	6470
NW_020847650.1	264	227
NW_020847651.1	247	329
NW_020847652.1	484	512
NW_020847653.1	78	110
NW_020847654.1	66211	64820
NW_020847655.1	89	67
NW_020847656.1	88	82
NW_020847657.1	296	266
NW_020847658.1	15713	15685
NW_020847659.1	79	69
NW_020847660.1	64	71
NW_020847661.1	398	431
NW_020847662.1	99	104
NW_020847663.1	5412	5474
NW_020847664.1	90	85
NW_020847665.1	562	554
NW_020847666.1	23385	23282
NW_020847667.1	88	85
NW_020847668.1	417	419
NW_020847669.1	349	253
NW_020847670.1	319	287
NW_020847671.1	6733	6823
NW_020847672.1	107	127
NW_020847673.1	218	230
NW_020847674.1	90	71
NW_020847675.1	434	455
NW_020847676.1	146	183
NW_020847677.1	115	148
NW_020847678.1	318	261
NW_020847679.1	95	129
NW_020847680.1	312	342
NW_020847681.1	75241	75364
NW_020847682.1	37269	36627
NW_020847683.1	100	121
NW_020847684.1	217	224
NW_020847685.1	275	370
NW_020847686.1	161	9
NW_020847687.1	21407	22756
NW_020847688.1	109	94
NW_020847689.1	5217	5410
NW_020847690.1	127	122
NW_020847691.1	79	61
NW_020847692.1	21620	21262
NW_020847693.1	1017	965
NW_020847694.1	648	680
NW_020847695.1	306	306
NW_020847696.1	221	215
NW_020847697.1	126	89
NW_020847698.1	75	69
NW_020847699.1	252	267
NW_020847700.1	37008	36129
NW_020847701.1	68	48
NW_020847702.1	218	203
NW_020847703.1	77	79
NW_020847704.1	242	243
NW_020847705.1	88	92
NW_020847706.1	87	67
NW_020847707.1	74	87
NW_020847708.1	3669	3523
NW_020847709.1	117	97
NW_020847710.1	24313	23759
NW_020847711.1	127	86
NW_020847712.1	41399	40698
NW_020847713.1	9537	9170
NW_020847714.1	184	218
NW_020847715.1	66	85
NW_020847716.1	79	81
NW_020847717.1	109	117
NW_020847718.1	14877	15069
NW_020847719.1	100	103
NW_020847720.1	6374	6635
NW_020847721.1	13880	14106
NW_020847722.1	176	203
NW_020847723.1	3744	3624
NW_020847724.1	1954	2024
NW_020847725.1	199	155
NW_020847726.1	171	141
NW_020847727.1	234	252
NW_020847728.1	4111	4119
NW_020847729.1	155	139
NW_020847730.1	368	252
NW_020847731.1	66	61
NW_020847732.1	64	61
NW_020847733.1	2260	2549
NW_020847734.1	371	307
NW_020847735.1	181	208
NW_020847736.1	18501	18587
NW_020847737.1	78	81
NW_020847738.1	476	527
NW_020847739.1	116	119
NW_020847740.1	44935	44632
NW_020847741.1	260	291
NW_020847742.1	217	212
NW_020847743.1	293	306
NW_020847744.1	304	291
NW_020847745.1	137	131
NW_020847746.1	77	67
NW_020847747.1	157454	154727
NW_020847748.1	109	111
NW_020847749.1	133	124
NW_020847750.1	110627	108685
NW_020847751.1	114	140
NW_020847752.1	414	381
NW_020847753.1	128	159
NW_020847754.1	5449	4915
NW_020847755.1	1246	1245
NW_020847756.1	8470	8304
NW_020847757.1	84452	84092
NC_009797.1	1957	3290

Total number of conversions performed:
C->T:	42675482
G->A:	42701900
Please be aware that this process can - depending on genome size - take several hours!

Parent process: Starting to index C->T converted genome with the following command:

bowtie2-build  -f genome_mfa.CT_conversion.fa BS_CT --threads 10

Settings:
  Output files: "BS_CT.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 40
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  genome_mfa.CT_conversion.fa
Reading reference sizes
Child process: Starting to index G->A converted genome with the following command:

bowtie2-build  -f genome_mfa.GA_conversion.fa BS_GA --threads 10

Settings:
  Output files: "BS_GA.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 40
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  genome_mfa.GA_conversion.fa
Reading reference sizes
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time reading reference sizes: 00:00:02
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 5643602
Using parameters --bmax 4232702 --dcv 1024
  Doing ahead-of-time memory usage test
  Time to join reference sequences: 00:00:01
bmax according to bmaxDivN setting: 5643602
Using parameters --bmax 4232702 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 4232702 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  Passed!  Constructing with these parameters: --bmax 4232702 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  Ranking v-sort output time: 00:00:02
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 108 sample suffixes
Generating random suffixes
QSorting 108 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 108 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Invoking Larsson-Sadakane on ranks time: 00:00:01
  Sanity-checking and returning
Building samples
Reserving space for 108 sample suffixes
Generating random suffixes
QSorting 108 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 108 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 18, merged 46; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 16, merged 45; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 11, merged 11; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 7, merged 9; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 5, merged 8; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 5, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 4; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 4; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Avg bucket size: 2.97032e+06 (target: 4232701)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 76
  Reserving size (4232702) for bucket 1
Getting block 2 of 76
Getting block 3 of 76
Getting block 4 of 76
Getting block 5 of 76
Getting block 6 of 76
Getting block 7 of 76
Getting block 8 of 76
Getting block 9 of 76
  Reserving size (4232702) for bucket 2
  Calculating Z arrays for bucket 1
  Reserving size (4232702) for bucket 3
  Reserving size (4232702) for bucket 4
  Reserving size (4232702) for bucket 5
  Reserving size (4232702) for bucket 6
  Reserving size (4232702) for bucket 7
  Reserving size (4232702) for bucket 8
  Reserving size (4232702) for bucket 9
  Entering block accumulator loop for bucket 1:
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 5
  Calculating Z arrays for bucket 8
  Calculating Z arrays for bucket 7
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
  Entering block accumulator loop for bucket 8:
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 9:
  bucket 2: 10%
  bucket 1: 10%
  bucket 4: 10%
  bucket 3: 10%
  bucket 7: 10%
  bucket 9: 10%
  bucket 8: 10%
  bucket 5: 10%
  bucket 6: 10%
  bucket 2: 20%
  bucket 1: 20%
  bucket 4: 20%
  bucket 3: 20%
  bucket 7: 20%
  bucket 9: 20%
  bucket 8: 20%
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 3.00992e+06 (target: 4232701)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 75
  Reserving size (4232702) for bucket 1
Getting block 2 of 75
Getting block 3 of 75
Getting block 4 of 75
Getting block 5 of 75
Getting block 6 of 75
Getting block 7 of 75
Getting block 8 of 75
Getting block 9 of 75
  Reserving size (4232702) for bucket 2
  Reserving size (4232702) for bucket 3
  Calculating Z arrays for bucket 1
  Reserving size (4232702) for bucket 4
  Reserving size (4232702) for bucket 5
  Reserving size (4232702) for bucket 6
  Reserving size (4232702) for bucket 7
  Reserving size (4232702) for bucket 8
  Reserving size (4232702) for bucket 9
  Entering block accumulator loop for bucket 1:
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 3:
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
  Calculating Z arrays for bucket 8
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 8:
  Entering block accumulator loop for bucket 9:
  bucket 5: 20%
  bucket 6: 20%
  bucket 2: 30%
  bucket 1: 30%
  bucket 4: 30%
  bucket 3: 30%
  bucket 7: 30%
  bucket 9: 30%
  bucket 8: 30%
  bucket 1: 10%
  bucket 4: 10%
  bucket 2: 10%
  bucket 9: 10%
  bucket 5: 10%
  bucket 5: 30%
  bucket 6: 10%
  bucket 8: 10%
  bucket 3: 10%
  bucket 7: 10%
  bucket 2: 40%
  bucket 6: 30%
  bucket 1: 40%
  bucket 4: 40%
  bucket 3: 40%
  bucket 7: 40%
  bucket 9: 40%
  bucket 1: 20%
  bucket 8: 40%
  bucket 4: 20%
  bucket 2: 50%
  bucket 2: 20%
  bucket 9: 20%
  bucket 5: 20%
  bucket 5: 40%
  bucket 1: 50%
  bucket 8: 20%
  bucket 6: 20%
  bucket 3: 20%
  bucket 7: 20%
  bucket 6: 40%
  bucket 4: 50%
  bucket 3: 50%
  bucket 7: 50%
  bucket 9: 50%
  bucket 1: 30%
  bucket 4: 30%
  bucket 8: 50%
  bucket 2: 60%
  bucket 1: 60%
  bucket 2: 30%
  bucket 9: 30%
  bucket 5: 50%
  bucket 5: 30%
  bucket 4: 60%
  bucket 6: 30%
  bucket 8: 30%
  bucket 3: 30%
  bucket 3: 60%
  bucket 6: 50%
  bucket 7: 60%
  bucket 7: 30%
  bucket 9: 60%
  bucket 2: 70%
  bucket 1: 40%
  bucket 4: 40%
  bucket 8: 60%
  bucket 1: 70%
  bucket 2: 40%
  bucket 9: 40%
  bucket 5: 60%
  bucket 4: 70%
  bucket 5: 40%
  bucket 3: 70%
  bucket 7: 70%
  bucket 2: 80%
  bucket 8: 40%
  bucket 9: 70%
  bucket 6: 40%
  bucket 6: 60%
  bucket 3: 40%
  bucket 1: 50%
  bucket 7: 40%
  bucket 1: 80%
  bucket 4: 50%
  bucket 8: 70%
  bucket 2: 50%
  bucket 9: 50%
  bucket 4: 80%
  bucket 5: 70%
  bucket 3: 80%
  bucket 2: 90%
  bucket 7: 80%
  bucket 5: 50%
  bucket 9: 80%
  bucket 1: 90%
  bucket 1: 60%
  bucket 8: 50%
  bucket 6: 70%
  bucket 4: 60%
  bucket 6: 50%
  bucket 3: 50%
  bucket 8: 80%
  bucket 7: 50%
  bucket 4: 90%
  bucket 9: 60%
  bucket 2: 100%
  Sorting block of length 2965613 for bucket 2
  (Using difference cover)
  bucket 2: 60%
  bucket 3: 90%
  bucket 7: 90%
  bucket 5: 80%
  bucket 9: 90%
  bucket 1: 100%
  Sorting block of length 2991052 for bucket 1
  (Using difference cover)
  bucket 5: 60%
  bucket 1: 70%
  bucket 4: 70%
  bucket 8: 60%
  bucket 6: 80%
  bucket 8: 90%
  bucket 6: 60%
  bucket 3: 60%
  bucket 4: 100%
  Sorting block of length 996621 for bucket 4
  (Using difference cover)
  bucket 7: 60%
  bucket 3: 100%
  Sorting block of length 3640909 for bucket 3
  (Using difference cover)
  bucket 9: 70%
  bucket 2: 70%
  bucket 7: 100%
  Sorting block of length 2115662 for bucket 7
  (Using difference cover)
  bucket 5: 90%
  bucket 9: 100%
  Sorting block of length 1885416 for bucket 9
  (Using difference cover)
  bucket 1: 80%
  bucket 5: 70%
  bucket 4: 80%
  bucket 8: 100%
  Sorting block of length 3934170 for bucket 8
  (Using difference cover)
  bucket 6: 90%
  bucket 8: 70%
  bucket 6: 70%
  bucket 3: 70%
  Sorting block time: 00:00:00
Returning block of 996622 for bucket 4
  bucket 9: 80%
  bucket 7: 70%
Getting block 10 of 76
  Reserving size (4232702) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  bucket 2: 80%
  bucket 1: 90%
  bucket 5: 100%
  Sorting block of length 3501271 for bucket 5
  (Using difference cover)
  bucket 4: 90%
  bucket 5: 80%
  bucket 6: 100%
  Sorting block of length 3989681 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 2965614 for bucket 2
  bucket 8: 80%
  bucket 6: 80%
  bucket 3: 80%
  bucket 9: 90%
  Sorting block time: 00:00:01
Returning block of 2991053 for bucket 1
  bucket 10: 10%
  bucket 2: 90%
  bucket 1: 100%
  Sorting block of length 2039425 for bucket 1
  (Using difference cover)
  bucket 7: 80%
  Sorting block time: 00:00:00
Returning block of 2115663 for bucket 7
Getting block 11 of 76
  Reserving size (4232702) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  bucket 4: 100%
  Sorting block of length 487283 for bucket 4
  (Using difference cover)
Getting block 12 of 76
  Reserving size (4232702) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  Sorting block time: 00:00:00
Returning block of 1885417 for bucket 9
Getting block 13 of 76
  Reserving size (4232702) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  bucket 5: 90%
Getting block 14 of 76
  Reserving size (4232702) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
  bucket 8: 90%
  Sorting block time: 00:00:00
Returning block of 487284 for bucket 4
  bucket 9: 100%
  Sorting block of length 3547222 for bucket 9
  (Using difference cover)
Getting block 10 of 75
  Reserving size (4232702) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  bucket 6: 90%
  bucket 3: 90%
  bucket 2: 100%
  Sorting block of length 3245568 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 3640910 for bucket 3
  bucket 7: 90%
  bucket 5: 100%
  Sorting block of length 4075687 for bucket 5
  (Using difference cover)
Getting block 15 of 76
  Reserving size (4232702) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 8: 100%
  Sorting block of length 2785475 for bucket 8
  (Using difference cover)
  bucket 10: 20%
  bucket 10: 10%
  Sorting block time: 00:00:00
Returning block of 2039426 for bucket 1
  bucket 11: 10%
  bucket 6: 100%
  Sorting block of length 2400077 for bucket 6
  (Using difference cover)
  bucket 3: 100%
  Sorting block of length 3927083 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3934171 for bucket 8
  bucket 7: 100%
  Sorting block of length 3982986 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3501272 for bucket 5
  bucket 13: 10%
Getting block 11 of 75
  Reserving size (4232702) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  bucket 14: 10%
  bucket 10: 20%
Getting block 16 of 76
  Reserving size (4232702) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
Getting block 17 of 76
  Reserving size (4232702) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 12: 10%
  Sorting block time: 00:00:01
Returning block of 3989682 for bucket 6
Getting block 18 of 76
  Reserving size (4232702) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 15: 10%
  bucket 11: 20%
  Sorting block time: 00:00:01
Returning block of 3547223 for bucket 9
  Sorting block time: 00:00:01
Returning block of 3245569 for bucket 2
  bucket 11: 10%
  Sorting block time: 00:00:01
Returning block of 2785476 for bucket 8
  Sorting block time: 00:00:01
Returning block of 2400078 for bucket 6
Getting block 12 of 75
  Reserving size (4232702) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
Getting block 13 of 75
  Reserving size (4232702) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
Getting block 14 of 75
  Reserving size (4232702) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
Getting block 15 of 75
  Reserving size (4232702) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 10: 30%
  bucket 10: 30%
  Sorting block time: 00:00:01
Returning block of 4075688 for bucket 5
  bucket 13: 20%
  bucket 14: 20%
  bucket 11: 30%
  bucket 15: 20%
  bucket 18: 10%
Getting block 16 of 75
  Reserving size (4232702) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  bucket 17: 10%
  Sorting block time: 00:00:00
Returning block of 3927084 for bucket 3
  bucket 16: 10%
  Sorting block time: 00:00:00
Returning block of 3982987 for bucket 7
  bucket 12: 20%
Getting block 17 of 75
  Reserving size (4232702) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 12: 10%
Getting block 18 of 75
  Reserving size (4232702) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 13: 10%
  bucket 14: 10%
  bucket 11: 20%
  bucket 11: 40%
  bucket 15: 30%
  bucket 10: 40%
  bucket 18: 20%
  bucket 15: 10%
  bucket 10: 40%
  bucket 12: 20%
  bucket 13: 20%
  bucket 16: 10%
  bucket 14: 20%
  bucket 13: 30%
  bucket 14: 30%
  bucket 17: 20%
  bucket 11: 50%
  bucket 17: 10%
  bucket 12: 30%
  bucket 16: 20%
  bucket 15: 40%
  bucket 18: 30%
  bucket 18: 10%
  bucket 12: 30%
  bucket 11: 30%
  bucket 13: 30%
  bucket 14: 30%
  bucket 11: 60%
  bucket 10: 50%
  bucket 10: 50%
  bucket 15: 50%
  bucket 15: 20%
  bucket 16: 20%
  bucket 13: 40%
  bucket 14: 40%
  bucket 18: 40%
  bucket 12: 40%
  bucket 17: 30%
  bucket 17: 20%
  bucket 12: 40%
  bucket 13: 40%
  bucket 11: 70%
  bucket 14: 40%
  bucket 16: 30%
  bucket 11: 40%
  bucket 18: 20%
  bucket 15: 60%
  bucket 10: 60%
  bucket 18: 50%
  bucket 12: 50%
  bucket 10: 60%
  bucket 11: 80%
  bucket 13: 50%
  bucket 14: 50%
  bucket 14: 50%
  bucket 13: 50%
  bucket 17: 40%
  bucket 15: 70%
  bucket 16: 30%
  bucket 17: 30%
  bucket 15: 30%
  bucket 12: 60%
  bucket 18: 60%
  bucket 11: 90%
  bucket 12: 50%
  bucket 13: 60%
  bucket 11: 50%
  bucket 16: 40%
  bucket 14: 60%
  bucket 10: 70%
  bucket 18: 30%
  bucket 15: 80%
  bucket 10: 70%
  bucket 12: 70%
  bucket 14: 60%
  bucket 11: 100%
  Sorting block of length 4012848 for bucket 11
  (Using difference cover)
  bucket 18: 70%
  bucket 17: 50%
  bucket 16: 40%
  bucket 13: 60%
  bucket 13: 70%
  bucket 14: 70%
  bucket 17: 40%
  bucket 15: 90%
  bucket 15: 40%
  bucket 12: 60%
  bucket 12: 80%
  bucket 11: 60%
  bucket 10: 80%
  bucket 18: 80%
  bucket 10: 80%
  bucket 16: 50%
  bucket 18: 40%
  bucket 13: 80%
  bucket 14: 80%
  Sorting block time: 00:00:01
Returning block of 4012849 for bucket 11
  bucket 15: 100%
  Sorting block of length 3333399 for bucket 15
  (Using difference cover)
  bucket 14: 70%
Getting block 19 of 76
  Reserving size (4232702) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
  bucket 17: 60%
  bucket 12: 90%
  bucket 16: 50%
  bucket 13: 70%
  bucket 12: 70%
  bucket 18: 90%
  bucket 17: 50%
  bucket 10: 90%
  bucket 16: 60%
  bucket 14: 80%
  bucket 17: 70%
  bucket 19: 10%
  bucket 13: 80%
  bucket 12: 80%
  bucket 13: 90%
  bucket 14: 90%
  bucket 11: 70%
  bucket 18: 100%
  Sorting block of length 4078878 for bucket 18
  (Using difference cover)
  bucket 14: 90%
  bucket 10: 100%
  Sorting block of length 4159952 for bucket 10
  (Using difference cover)
  bucket 10: 90%
  bucket 16: 70%
  bucket 17: 80%
  bucket 15: 50%
  bucket 12: 100%
  Sorting block of length 3565610 for bucket 12
  (Using difference cover)
  bucket 19: 20%
  bucket 13: 90%
  bucket 12: 90%
  bucket 18: 50%
  Sorting block time: 00:00:01
Returning block of 3333400 for bucket 15
  bucket 14: 100%
  Sorting block of length 2867044 for bucket 14
  (Using difference cover)
  bucket 16: 80%
Getting block 20 of 76
  Reserving size (4232702) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  bucket 17: 90%
  bucket 13: 100%
  Sorting block of length 3746110 for bucket 13
  (Using difference cover)
  bucket 19: 30%
  bucket 14: 100%
  Sorting block of length 2473027 for bucket 14
  (Using difference cover)
  bucket 13: 100%
  Sorting block of length 3414762 for bucket 13
  (Using difference cover)
  bucket 12: 100%
  Sorting block of length 4218793 for bucket 12
  (Using difference cover)
  bucket 16: 60%
  bucket 17: 60%
  bucket 16: 90%
  bucket 20: 10%
  bucket 17: 100%
  Sorting block of length 2773534 for bucket 17
  (Using difference cover)
  bucket 19: 40%
  bucket 11: 80%
  bucket 10: 100%
  Sorting block of length 3218524 for bucket 10
  (Using difference cover)
  bucket 16: 100%
  Sorting block of length 2471493 for bucket 16
  (Using difference cover)
  bucket 20: 20%
  bucket 19: 50%
  Sorting block time: 00:00:01
Returning block of 4078879 for bucket 18
  Sorting block time: 00:00:01
Returning block of 4159953 for bucket 10
  Sorting block time: 00:00:00
Returning block of 2867045 for bucket 14
  bucket 15: 60%
  bucket 18: 60%
  Sorting block time: 00:00:01
Returning block of 3565611 for bucket 12
Getting block 21 of 76
  Reserving size (4232702) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
Getting block 22 of 76
  Reserving size (4232702) for bucket 22
  Calculating Z arrays for bucket 22
  Sorting block time: 00:00:00
Returning block of 2473028 for bucket 14
  Entering block accumulator loop for bucket 22:
  bucket 17: 70%
Getting block 23 of 76
  Reserving size (4232702) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
Getting block 19 of 75
  Reserving size (4232702) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
Getting block 20 of 75
  Reserving size (4232702) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  bucket 11: 90%
  bucket 20: 30%
  bucket 16: 70%
  bucket 19: 60%
  Sorting block time: 00:00:00
Returning block of 3414763 for bucket 13
  Sorting block time: 00:00:00
Returning block of 2773535 for bucket 17
  Sorting block time: 00:00:00
Returning block of 3746111 for bucket 13
Getting block 21 of 75
  Reserving size (4232702) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 17: 80%
Getting block 24 of 76
  Reserving size (4232702) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  Sorting block time: 00:00:01
Returning block of 2471494 for bucket 16
  bucket 15: 70%
  bucket 18: 70%
  bucket 11: 100%
  Sorting block of length 3058205 for bucket 11
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4218794 for bucket 12
Getting block 25 of 76
  Reserving size (4232702) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  bucket 20: 10%
Getting block 26 of 76
  Reserving size (4232702) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  bucket 19: 10%
  bucket 16: 80%
  Sorting block time: 00:00:01
Returning block of 3218525 for bucket 10
Getting block 27 of 76
  Reserving size (4232702) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 22: 10%
Getting block 22 of 75
  Reserving size (4232702) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
  bucket 21: 10%
  bucket 17: 90%
  bucket 21: 10%
  bucket 20: 40%
  bucket 19: 70%
  bucket 20: 20%
  bucket 19: 20%
  bucket 15: 80%
  bucket 16: 90%
  bucket 18: 80%
  bucket 23: 10%
  Sorting block time: 00:00:00
Returning block of 3058206 for bucket 11
  bucket 22: 20%
  bucket 24: 10%
Getting block 23 of 75
  Reserving size (4232702) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 20: 50%
  bucket 22: 10%
  bucket 21: 20%
  bucket 19: 80%
  bucket 25: 10%
  bucket 27: 10%
  bucket 26: 10%
  bucket 20: 30%
  bucket 19: 30%
  bucket 17: 100%
  Sorting block of length 1849746 for bucket 17
  (Using difference cover)
  bucket 21: 20%
  bucket 16: 100%
  Sorting block of length 3572288 for bucket 16
  (Using difference cover)
  bucket 22: 30%
  bucket 15: 90%
  bucket 19: 90%
  bucket 20: 60%
  bucket 21: 30%
  bucket 18: 90%
  Sorting block time: 00:00:00
Returning block of 1849747 for bucket 17
  bucket 23: 10%
  bucket 20: 40%
  bucket 24: 20%
Getting block 24 of 75
  Reserving size (4232702) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  bucket 19: 40%
  bucket 22: 20%
  bucket 23: 20%
  bucket 25: 20%
  bucket 27: 20%
  bucket 22: 40%
  bucket 19: 100%
  Sorting block of length 1580557 for bucket 19
  (Using difference cover)
  bucket 20: 70%
  bucket 21: 40%
  bucket 26: 20%
  Sorting block time: 00:00:00
Returning block of 3572289 for bucket 16
  bucket 20: 50%
  bucket 15: 100%
  Sorting block of length 4048564 for bucket 15
  (Using difference cover)
  bucket 19: 50%
Getting block 25 of 75
  Reserving size (4232702) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  bucket 18: 100%
  Sorting block of length 4186598 for bucket 18
  (Using difference cover)
  bucket 21: 30%
  Sorting block time: 00:00:01
Returning block of 1580558 for bucket 19
Getting block 28 of 76
  Reserving size (4232702) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 24: 10%
  bucket 23: 20%
  bucket 22: 50%
  bucket 20: 80%
  bucket 21: 50%
  bucket 24: 30%
  bucket 22: 30%
  bucket 20: 60%
  bucket 19: 60%
  bucket 27: 30%
  bucket 25: 30%
  bucket 28: 10%
  bucket 25: 10%
  bucket 21: 60%
  bucket 26: 30%
  bucket 23: 30%
  bucket 20: 90%
  bucket 22: 60%
  Sorting block time: 00:00:01
Returning block of 4048565 for bucket 15
  bucket 21: 40%
Getting block 26 of 75
  Reserving size (4232702) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  bucket 19: 70%
  Sorting block time: 00:00:00
Returning block of 4186599 for bucket 18
  bucket 20: 70%
Getting block 27 of 75
  Reserving size (4232702) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 24: 40%
  bucket 24: 20%
  bucket 22: 40%
  bucket 23: 30%
  bucket 28: 20%
  bucket 21: 70%
  bucket 20: 100%
  Sorting block of length 2750938 for bucket 20
  (Using difference cover)
  bucket 27: 40%
  bucket 25: 40%
  bucket 22: 70%
  bucket 19: 80%
  bucket 20: 80%
  bucket 25: 20%
  bucket 26: 40%
  bucket 28: 30%
  bucket 26: 10%
  bucket 21: 80%
  bucket 21: 50%
  bucket 23: 40%
  Sorting block time: 00:00:00
Returning block of 2750939 for bucket 20
  bucket 22: 80%
  bucket 24: 30%
  bucket 24: 50%
  bucket 22: 50%
  bucket 27: 10%
Getting block 29 of 76
  Reserving size (4232702) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  bucket 23: 40%
  bucket 19: 90%
  bucket 27: 50%
  bucket 20: 90%
  bucket 28: 40%
  bucket 25: 50%
  bucket 25: 30%
  bucket 21: 90%
  bucket 22: 90%
  bucket 26: 50%
  bucket 29: 10%
  bucket 19: 100%
  Sorting block of length 3940447 for bucket 19
  (Using difference cover)
  bucket 20: 100%
  Sorting block of length 4202463 for bucket 20
  (Using difference cover)
  bucket 26: 20%
  bucket 28: 50%
  bucket 24: 60%
  bucket 21: 60%
  bucket 22: 60%
  bucket 24: 40%
  bucket 27: 20%
  bucket 21: 100%
  Sorting block of length 2209662 for bucket 21
  (Using difference cover)
  bucket 27: 60%
  bucket 23: 50%
  bucket 23: 50%
  bucket 22: 100%
  Sorting block of length 3897240 for bucket 22
  (Using difference cover)
  bucket 29: 20%
  bucket 25: 60%
  bucket 25: 40%
  bucket 28: 60%
  bucket 22: 70%
  bucket 24: 50%
  bucket 26: 60%
  bucket 26: 30%
  Sorting block time: 00:00:01
Returning block of 2209663 for bucket 21
  bucket 23: 60%
  Sorting block time: 00:00:01
Returning block of 3940448 for bucket 19
  bucket 24: 70%
Getting block 28 of 75
  Reserving size (4232702) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 29: 30%
Getting block 29 of 75
  Reserving size (4232702) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  Sorting block time: 00:00:01
Returning block of 4202464 for bucket 20
  bucket 27: 30%
  bucket 28: 70%
  bucket 21: 70%
  bucket 27: 70%
Getting block 30 of 75
  Reserving size (4232702) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  Sorting block time: 00:00:01
Returning block of 3897241 for bucket 22
  bucket 25: 50%
  bucket 25: 70%
  bucket 22: 80%
  bucket 24: 60%
Getting block 30 of 76
  Reserving size (4232702) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  bucket 28: 10%
  bucket 23: 60%
  bucket 29: 40%
  bucket 29: 10%
  bucket 28: 80%
  bucket 30: 10%
  bucket 26: 70%
  bucket 26: 40%
  bucket 24: 80%
  bucket 23: 70%
  bucket 27: 80%
  bucket 30: 10%
  bucket 27: 40%
  bucket 29: 50%
  bucket 28: 20%
  bucket 21: 80%
  bucket 28: 90%
  bucket 29: 20%
  bucket 25: 60%
  bucket 25: 80%
  bucket 30: 20%
  bucket 22: 90%
  bucket 23: 70%
  bucket 24: 70%
  bucket 24: 90%
  bucket 26: 80%
  bucket 30: 20%
  bucket 27: 90%
  bucket 21: 90%
  bucket 29: 60%
  bucket 28: 100%
  Sorting block of length 4178564 for bucket 28
  (Using difference cover)
  bucket 25: 90%
  bucket 26: 50%
  bucket 24: 100%
  Sorting block of length 2490607 for bucket 24
  (Using difference cover)
  bucket 26: 90%
  bucket 23: 80%
  bucket 28: 30%
  bucket 30: 30%
  bucket 21: 100%
  Sorting block of length 3247411 for bucket 21
  (Using difference cover)
  bucket 27: 100%
  Sorting block of length 4044884 for bucket 27
  (Using difference cover)
  bucket 29: 70%
  bucket 25: 100%
  Sorting block of length 2854177 for bucket 25
  (Using difference cover)
  bucket 23: 80%
  bucket 29: 30%
  bucket 30: 30%
  bucket 26: 100%
  Sorting block of length 1708764 for bucket 26
  (Using difference cover)
  bucket 30: 40%
  bucket 23: 90%
  bucket 27: 50%
  bucket 29: 80%
  bucket 25: 70%
  Sorting block time: 00:00:01
Returning block of 2490608 for bucket 24
  bucket 22: 100%
  Sorting block of length 2267475 for bucket 22
  (Using difference cover)
  bucket 30: 50%
  bucket 28: 40%
Getting block 31 of 76
  Reserving size (4232702) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  Sorting block time: 00:00:01
Returning block of 1708765 for bucket 26
  bucket 23: 100%
  Sorting block of length 3504490 for bucket 23
  (Using difference cover)
  bucket 29: 90%
  Sorting block time: 00:00:01
Returning block of 4178565 for bucket 28
  bucket 24: 80%
Getting block 32 of 76
  Reserving size (4232702) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  bucket 29: 40%
  Sorting block time: 00:00:01
Returning block of 2854178 for bucket 25
Getting block 33 of 76
  Reserving size (4232702) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
  bucket 30: 40%
  Sorting block time: 00:00:01
Returning block of 3247412 for bucket 21
Getting block 34 of 76
  Reserving size (4232702) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  bucket 26: 60%
  bucket 30: 60%
Getting block 35 of 76
  Reserving size (4232702) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 31: 10%
  Sorting block time: 00:00:01
Returning block of 4044885 for bucket 27
  bucket 29: 100%
  Sorting block of length 3051764 for bucket 29
  (Using difference cover)
  bucket 23: 90%
  bucket 25: 80%
  bucket 27: 60%
Getting block 36 of 76
  Reserving size (4232702) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  bucket 28: 50%
  bucket 32: 10%
  Sorting block time: 00:00:00
Returning block of 2267476 for bucket 22
  bucket 30: 50%
  bucket 29: 50%
  bucket 24: 90%
  bucket 33: 10%
Getting block 31 of 75
  Reserving size (4232702) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  bucket 26: 70%
  bucket 30: 70%
  Sorting block time: 00:00:00
Returning block of 3504491 for bucket 23
  bucket 23: 100%
  Sorting block of length 3439094 for bucket 23
  (Using difference cover)
  bucket 28: 60%
Getting block 37 of 76
  Reserving size (4232702) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  Sorting block time: 00:00:01
Returning block of 3051765 for bucket 29
  bucket 25: 90%
  bucket 30: 60%
  bucket 34: 10%
  bucket 33: 20%
  bucket 29: 60%
  bucket 27: 70%
Getting block 38 of 76
  Reserving size (4232702) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  bucket 31: 20%
  bucket 24: 100%
  Sorting block of length 2626305 for bucket 24
  (Using difference cover)
  bucket 31: 10%
  bucket 26: 80%
  bucket 35: 10%
  bucket 30: 80%
  bucket 28: 70%
  bucket 25: 100%
  Sorting block of length 4214558 for bucket 25
  (Using difference cover)
  bucket 36: 10%
  bucket 30: 70%
  bucket 29: 70%
  bucket 27: 80%
  bucket 31: 20%
  bucket 26: 90%
  bucket 28: 80%
  bucket 30: 80%
  bucket 33: 30%
  bucket 32: 20%
  bucket 29: 80%
  Sorting block time: 00:00:00
Returning block of 3439095 for bucket 23
  bucket 27: 90%
  bucket 38: 10%
  Sorting block time: 00:00:00
Returning block of 2626306 for bucket 24
Getting block 32 of 75
  Reserving size (4232702) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  bucket 26: 100%
  Sorting block of length 1517911 for bucket 26
  (Using difference cover)
Getting block 33 of 75
  Reserving size (4232702) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
  bucket 31: 30%
  bucket 30: 90%
  bucket 34: 20%
  bucket 30: 90%
  bucket 28: 90%
  bucket 29: 90%
  bucket 33: 40%
  bucket 31: 30%
  Sorting block time: 00:00:01
Returning block of 1517912 for bucket 26
  bucket 37: 10%
  Sorting block time: 00:00:01
Returning block of 4214559 for bucket 25
  bucket 36: 20%
  bucket 38: 20%
Getting block 34 of 75
  Reserving size (4232702) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  bucket 35: 20%
  bucket 30: 100%
  Sorting block of length 1414568 for bucket 30
  (Using difference cover)
Getting block 35 of 75
  Reserving size (4232702) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 27: 100%
  Sorting block of length 3781902 for bucket 27
  (Using difference cover)
  bucket 30: 100%
  Sorting block of length 3147188 for bucket 30
  (Using difference cover)
  bucket 32: 30%
  bucket 28: 100%
  Sorting block of length 4080412 for bucket 28
  (Using difference cover)
  bucket 32: 10%
  bucket 31: 40%
  bucket 29: 100%
  Sorting block of length 3600222 for bucket 29
  (Using difference cover)
  bucket 33: 50%
  bucket 33: 10%
  Sorting block time: 00:00:00
Returning block of 1414569 for bucket 30
Getting block 39 of 76
  Reserving size (4232702) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  bucket 38: 30%
  bucket 34: 30%
  bucket 31: 40%
  bucket 35: 10%
  bucket 36: 30%
  bucket 34: 10%
  bucket 33: 60%
  Sorting block time: 00:00:01
Returning block of 3147189 for bucket 30
  bucket 32: 20%
Getting block 36 of 75
  Reserving size (4232702) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  Sorting block time: 00:00:01
Returning block of 3781903 for bucket 27
  bucket 35: 30%
  bucket 31: 50%
  bucket 39: 10%
Getting block 37 of 75
  Reserving size (4232702) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  bucket 38: 40%
  Sorting block time: 00:00:01
Returning block of 3600223 for bucket 29
  Sorting block time: 00:00:01
Returning block of 4080413 for bucket 28
  bucket 37: 20%
  bucket 32: 40%
Getting block 38 of 75
  Reserving size (4232702) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
Getting block 39 of 75
  Reserving size (4232702) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  bucket 33: 20%
  bucket 33: 70%
  bucket 34: 40%
  bucket 31: 50%
  bucket 36: 40%
  bucket 39: 20%
  bucket 38: 50%
  bucket 35: 40%
  bucket 36: 10%
  bucket 35: 20%
  bucket 34: 20%
  bucket 32: 50%
  bucket 33: 80%
  bucket 38: 10%
  bucket 37: 30%
  bucket 34: 50%
  bucket 32: 30%
  bucket 36: 50%
  bucket 31: 60%
  bucket 31: 60%
  bucket 37: 10%
  bucket 36: 20%
  bucket 39: 30%
  bucket 39: 10%
  bucket 38: 60%
  bucket 38: 20%
  bucket 33: 30%
  bucket 35: 30%
  bucket 35: 50%
  bucket 33: 90%
  bucket 36: 60%
  bucket 36: 30%
  bucket 34: 30%
  bucket 32: 60%
  bucket 32: 40%
  bucket 38: 30%
  bucket 34: 60%
  bucket 31: 70%
  bucket 36: 70%
  bucket 39: 40%
  bucket 31: 70%
  bucket 37: 20%
  bucket 38: 70%
  bucket 37: 40%
  bucket 36: 40%
  bucket 33: 100%
  Sorting block of length 2211594 for bucket 33
  (Using difference cover)
  bucket 35: 40%
  bucket 39: 20%
  bucket 38: 40%
  bucket 36: 80%
  bucket 33: 40%
  bucket 34: 40%
  bucket 35: 60%
  bucket 36: 50%
  Sorting block time: 00:00:00
Returning block of 2211595 for bucket 33
Getting block 40 of 76
  Reserving size (4232702) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 32: 70%
  bucket 34: 70%
  bucket 39: 50%
  bucket 38: 50%
  bucket 32: 50%
  bucket 38: 80%
  bucket 36: 90%
  bucket 31: 80%
  bucket 37: 30%
  bucket 35: 50%
  bucket 31: 80%
  bucket 39: 30%
  bucket 36: 60%
  bucket 38: 60%
  bucket 36: 100%
  Sorting block of length 3572016 for bucket 36
  (Using difference cover)
  bucket 40: 10%
  bucket 39: 60%
  bucket 34: 50%
  bucket 37: 50%
  bucket 38: 90%
  bucket 35: 70%
  bucket 34: 80%
  bucket 36: 70%
  bucket 33: 50%
  bucket 32: 60%
  bucket 35: 60%
  bucket 37: 40%
  bucket 32: 80%
  bucket 38: 70%
  bucket 31: 90%
  bucket 39: 40%
  bucket 34: 60%
  bucket 36: 80%
  bucket 31: 90%
  bucket 32: 70%
  bucket 40: 20%
  bucket 33: 60%
  bucket 35: 70%
  bucket 39: 50%
  bucket 39: 70%
  bucket 31: 100%
  Sorting block of length 1971884 for bucket 31
  (Using difference cover)
  bucket 38: 80%
  bucket 38: 100%
  Sorting block of length 3152137 for bucket 38
  (Using difference cover)
  bucket 37: 50%
  Sorting block time: 00:00:00
Returning block of 3572017 for bucket 36
  bucket 34: 90%
  bucket 35: 80%
  bucket 32: 90%
  bucket 37: 60%
Getting block 41 of 76
  Reserving size (4232702) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  bucket 36: 90%
  bucket 34: 70%
  bucket 31: 100%
  Sorting block of length 4101274 for bucket 31
  (Using difference cover)
  bucket 32: 80%
  bucket 39: 60%
  bucket 40: 30%
  bucket 35: 80%
  bucket 33: 70%
  bucket 39: 80%
  bucket 38: 90%
  bucket 35: 90%
  bucket 37: 60%
  bucket 34: 100%
  Sorting block of length 2038358 for bucket 34
  (Using difference cover)
  bucket 32: 100%
  Sorting block of length 2316397 for bucket 32
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 1971885 for bucket 31
  bucket 41: 10%
  bucket 32: 90%
Getting block 40 of 75
  Reserving size (4232702) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 36: 100%
  Sorting block of length 2973990 for bucket 36
  (Using difference cover)
  bucket 37: 70%
  bucket 39: 70%
  bucket 34: 80%
  bucket 40: 40%
  bucket 39: 90%
  bucket 35: 90%
  bucket 35: 100%
  Sorting block of length 2844431 for bucket 35
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3152138 for bucket 38
  bucket 38: 100%
  Sorting block of length 4172144 for bucket 38
  (Using difference cover)
  bucket 41: 20%
Getting block 42 of 76
  Reserving size (4232702) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  bucket 33: 80%
  bucket 37: 80%
  bucket 39: 100%
  Sorting block of length 2535047 for bucket 39
  (Using difference cover)
  bucket 40: 50%
  Sorting block time: 00:00:00
Returning block of 2038359 for bucket 34
Getting block 43 of 76
  Reserving size (4232702) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  Sorting block time: 00:00:00
Returning block of 2316398 for bucket 32
  bucket 37: 70%
Getting block 44 of 76
  Reserving size (4232702) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 32: 100%
  Sorting block of length 3572132 for bucket 32
  (Using difference cover)
  bucket 40: 10%
  bucket 39: 80%
  Sorting block time: 00:00:00
Returning block of 4101275 for bucket 31
  bucket 41: 30%
  bucket 42: 10%
  bucket 34: 90%
  bucket 35: 100%
  Sorting block of length 1767854 for bucket 35
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 2973991 for bucket 36
Getting block 45 of 76
  Reserving size (4232702) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  bucket 37: 90%
  bucket 33: 90%
  bucket 40: 60%
Getting block 41 of 75
  Reserving size (4232702) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  bucket 43: 10%
  Sorting block time: 00:00:01
Returning block of 2844432 for bucket 35
  bucket 37: 80%
  bucket 40: 20%
  bucket 39: 90%
Getting block 46 of 76
  Reserving size (4232702) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  Sorting block time: 00:00:01
Returning block of 2535048 for bucket 39
  bucket 34: 100%
  Sorting block of length 2914933 for bucket 34
  (Using difference cover)
Getting block 47 of 76
  Reserving size (4232702) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 41: 10%
  bucket 41: 40%
  bucket 33: 100%
  Sorting block of length 4021958 for bucket 33
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 1767855 for bucket 35
  Sorting block time: 00:00:01
Returning block of 4172145 for bucket 38
Getting block 42 of 75
  Reserving size (4232702) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  bucket 39: 100%
  Sorting block of length 821529 for bucket 39
  (Using difference cover)
  bucket 40: 30%
  bucket 44: 10%
  bucket 37: 90%
Getting block 43 of 75
  Reserving size (4232702) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  Sorting block time: 00:00:01
Returning block of 3572133 for bucket 32
  Sorting block time: 00:00:00
Returning block of 821530 for bucket 39
  bucket 41: 20%
Getting block 44 of 75
  Reserving size (4232702) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 42: 20%
  bucket 42: 10%
  bucket 40: 40%
Getting block 45 of 75
  Reserving size (4232702) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  bucket 37: 100%
  Sorting block of length 3184871 for bucket 37
  (Using difference cover)
  bucket 41: 50%
  bucket 43: 10%
  Sorting block time: 00:00:00
Returning block of 2914934 for bucket 34
  bucket 45: 10%
  bucket 40: 70%
Getting block 46 of 75
  Reserving size (4232702) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  bucket 41: 30%
  bucket 43: 20%
  bucket 42: 20%
  bucket 44: 10%
  bucket 45: 10%
  Sorting block time: 00:00:01
Returning block of 4021959 for bucket 33
  bucket 40: 50%
  bucket 37: 100%
  Sorting block of length 4176409 for bucket 37
  (Using difference cover)
  bucket 47: 10%
  bucket 46: 10%
Getting block 47 of 75
  Reserving size (4232702) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 43: 20%
  bucket 41: 60%
  bucket 44: 20%
  Sorting block time: 00:00:01
Returning block of 3184872 for bucket 37
Getting block 48 of 75
  Reserving size (4232702) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  bucket 44: 20%
  bucket 45: 20%
  bucket 45: 20%
  bucket 41: 40%
  bucket 42: 30%
  bucket 46: 10%
  bucket 43: 30%
  bucket 42: 30%
  bucket 43: 30%
  bucket 40: 80%
  bucket 41: 70%
  Sorting block time: 00:00:00
Returning block of 4176410 for bucket 37
  bucket 46: 20%
  bucket 44: 30%
  bucket 47: 10%
  bucket 47: 20%
  bucket 45: 30%
Getting block 48 of 76
  Reserving size (4232702) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  bucket 44: 30%
  bucket 48: 10%
  bucket 45: 30%
  bucket 43: 40%
  bucket 43: 40%
  bucket 40: 60%
  bucket 40: 90%
  bucket 41: 50%
  bucket 41: 80%
  bucket 42: 40%
  bucket 44: 40%
  bucket 45: 40%
  bucket 47: 20%
  bucket 42: 40%
  bucket 46: 20%
  bucket 43: 50%
  bucket 41: 90%
  bucket 48: 20%
  bucket 47: 30%
  bucket 46: 30%
  bucket 45: 50%
  bucket 44: 50%
  bucket 44: 40%
  bucket 40: 100%
  Sorting block of length 3687645 for bucket 40
  (Using difference cover)
  bucket 43: 50%
  bucket 45: 40%
  bucket 47: 30%
  bucket 40: 70%
  bucket 41: 60%
  bucket 48: 10%
  bucket 43: 60%
  bucket 42: 50%
  bucket 41: 100%
  Sorting block of length 3911815 for bucket 41
  (Using difference cover)
  bucket 42: 50%
  bucket 45: 60%
  bucket 47: 40%
  bucket 48: 30%
  bucket 44: 60%
  bucket 46: 30%
  bucket 47: 40%
  bucket 43: 70%
  Sorting block time: 00:00:01
Returning block of 3687646 for bucket 40
  bucket 42: 60%
  bucket 41: 70%
  bucket 43: 60%
  bucket 46: 40%
  bucket 45: 50%
Getting block 49 of 76
  Reserving size (4232702) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  bucket 44: 50%
  bucket 40: 80%
  bucket 47: 50%
  bucket 45: 70%
  Sorting block time: 00:00:00
Returning block of 3911816 for bucket 41
  bucket 44: 70%
Getting block 50 of 76
  Reserving size (4232702) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 48: 20%
  bucket 48: 40%
  bucket 42: 60%
  bucket 47: 50%
  bucket 43: 80%
  bucket 46: 40%
  bucket 42: 70%
  bucket 45: 80%
  bucket 41: 80%
  bucket 44: 80%
  bucket 50: 10%
  bucket 49: 10%
  bucket 43: 70%
  bucket 47: 60%
  bucket 48: 50%
  bucket 47: 60%
  bucket 45: 60%
  bucket 40: 90%
  bucket 43: 90%
  bucket 46: 50%
  bucket 45: 90%
  bucket 42: 70%
  bucket 50: 20%
  bucket 44: 60%
  bucket 44: 90%
  bucket 41: 90%
  bucket 46: 50%
  bucket 43: 100%
  Sorting block of length 2022155 for bucket 43
  (Using difference cover)
  bucket 42: 80%
  bucket 47: 70%
  bucket 48: 60%
  bucket 45: 100%
  Sorting block of length 2027203 for bucket 45
  (Using difference cover)
  bucket 40: 100%
  Sorting block of length 3788850 for bucket 40
  (Using difference cover)
  bucket 42: 80%
  bucket 44: 100%
  Sorting block of length 3956048 for bucket 44
  (Using difference cover)
  bucket 49: 20%
  bucket 48: 30%
  bucket 50: 30%
  bucket 41: 100%
  Sorting block of length 3565845 for bucket 41
  (Using difference cover)
  bucket 46: 60%
  bucket 43: 80%
  bucket 47: 80%
  bucket 48: 70%
  bucket 47: 70%
  bucket 42: 90%
  Sorting block time: 00:00:00
Returning block of 2022156 for bucket 43
Getting block 49 of 75
  Reserving size (4232702) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  Sorting block time: 00:00:00
Returning block of 2027204 for bucket 45
Getting block 50 of 75
  Reserving size (4232702) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 46: 70%
  bucket 47: 90%
  bucket 45: 70%
  bucket 48: 80%
  bucket 42: 100%
  Sorting block of length 4114748 for bucket 42
  (Using difference cover)
  bucket 50: 40%
  bucket 49: 10%
  bucket 46: 60%
  bucket 50: 10%
  bucket 42: 90%
  bucket 44: 70%
  bucket 46: 80%
  Sorting block time: 00:00:01
Returning block of 3788851 for bucket 40
  bucket 47: 100%
  Sorting block of length 2205897 for bucket 47
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3565846 for bucket 41
  Sorting block time: 00:00:01
Returning block of 3956049 for bucket 44
  bucket 49: 30%
  bucket 48: 90%
Getting block 51 of 75
  Reserving size (4232702) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
Getting block 52 of 75
  Reserving size (4232702) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
Getting block 53 of 75
  Reserving size (4232702) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  bucket 49: 20%
  bucket 50: 20%
  bucket 50: 50%
  bucket 47: 80%
  bucket 43: 90%
  Sorting block time: 00:00:00
Returning block of 2205898 for bucket 47
Getting block 54 of 75
  Reserving size (4232702) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 46: 90%
  Sorting block time: 00:00:01
Returning block of 4114749 for bucket 42
  bucket 53: 10%
  bucket 48: 100%
  Sorting block of length 3373342 for bucket 48
  (Using difference cover)
Getting block 55 of 75
  Reserving size (4232702) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  bucket 48: 40%
  bucket 45: 80%
  bucket 50: 60%
  bucket 42: 100%
  Sorting block of length 3690872 for bucket 42
  (Using difference cover)
  bucket 50: 30%
  bucket 49: 30%
  bucket 51: 10%
  bucket 52: 10%
  bucket 49: 40%
  bucket 54: 10%
  bucket 46: 70%
  bucket 53: 20%
  bucket 44: 80%
  bucket 47: 90%
  bucket 50: 70%
  bucket 43: 100%
  Sorting block of length 2635912 for bucket 43
  (Using difference cover)
  bucket 50: 40%
  bucket 49: 40%
  Sorting block time: 00:00:01
Returning block of 3373343 for bucket 48
Getting block 56 of 75
  Reserving size (4232702) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 46: 100%
  Sorting block of length 2506783 for bucket 46
  (Using difference cover)
  bucket 55: 10%
  bucket 54: 20%
  Sorting block time: 00:00:01
Returning block of 3690873 for bucket 42
  bucket 53: 30%
  bucket 52: 20%
Getting block 51 of 76
  Reserving size (4232702) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 45: 90%
  bucket 50: 80%
  bucket 49: 50%
  bucket 50: 50%
  bucket 51: 20%
  bucket 49: 50%
  Sorting block time: 00:00:00
Returning block of 2635913 for bucket 43
  bucket 48: 50%
Getting block 52 of 76
  Reserving size (4232702) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  Sorting block time: 00:00:01
Returning block of 2506784 for bucket 46
  bucket 47: 100%
  Sorting block of length 1586373 for bucket 47
  (Using difference cover)
Getting block 57 of 75
  Reserving size (4232702) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 56: 10%
  bucket 53: 40%
  bucket 54: 30%
  bucket 50: 90%
  bucket 46: 80%
  bucket 44: 90%
  bucket 55: 20%
  bucket 50: 60%
  bucket 49: 60%
  Sorting block time: 00:00:00
Returning block of 1586374 for bucket 47
  bucket 52: 30%
  bucket 51: 10%
Getting block 53 of 76
  Reserving size (4232702) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  bucket 49: 60%
  bucket 50: 100%
  Sorting block of length 3893430 for bucket 50
  (Using difference cover)
  bucket 45: 100%
  Sorting block of length 1545576 for bucket 45
  (Using difference cover)
  bucket 53: 50%
  bucket 51: 30%
  bucket 54: 40%
  bucket 56: 20%
  bucket 52: 10%
  bucket 50: 70%
  bucket 57: 10%
  bucket 49: 70%
  Sorting block time: 00:00:01
Returning block of 1545577 for bucket 45
Getting block 54 of 76
  Reserving size (4232702) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 51: 20%
  bucket 55: 30%
  bucket 53: 10%
  bucket 48: 60%
  bucket 49: 70%
  bucket 46: 90%
  bucket 52: 40%
  bucket 44: 100%
  Sorting block of length 3259383 for bucket 44
  (Using difference cover)
  bucket 53: 60%
  bucket 54: 50%
  bucket 52: 20%
  bucket 51: 30%
  Sorting block time: 00:00:01
Returning block of 3893431 for bucket 50
  bucket 53: 20%
  bucket 54: 10%
  bucket 46: 100%
  Sorting block of length 2741207 for bucket 46
  (Using difference cover)
  bucket 56: 30%
  bucket 49: 80%
  bucket 50: 80%
Getting block 55 of 76
  Reserving size (4232702) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  bucket 48: 70%
  bucket 49: 80%
  bucket 52: 30%
  bucket 51: 40%
  bucket 54: 20%
  bucket 53: 30%
  bucket 49: 90%
  bucket 55: 10%
  bucket 52: 50%
  bucket 48: 80%
  bucket 51: 40%
  Sorting block time: 00:00:00
Returning block of 3259384 for bucket 44
  bucket 53: 70%
Getting block 56 of 76
  Reserving size (4232702) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 55: 40%
  bucket 57: 20%
  bucket 51: 50%
  bucket 52: 40%
  Sorting block time: 00:00:00
Returning block of 2741208 for bucket 46
Getting block 57 of 76
  Reserving size (4232702) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 53: 40%
  bucket 54: 30%
  bucket 49: 100%
  Sorting block of length 2764909 for bucket 49
  (Using difference cover)
  bucket 56: 40%
  bucket 54: 60%
  bucket 52: 60%
  bucket 50: 90%
  bucket 49: 90%
  bucket 55: 20%
  bucket 51: 60%
  bucket 53: 80%
  bucket 53: 50%
  bucket 48: 90%
  Sorting block time: 00:00:00
Returning block of 2764910 for bucket 49
  bucket 52: 70%
Getting block 58 of 76
  Reserving size (4232702) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
  bucket 51: 50%
  bucket 55: 50%
  bucket 56: 10%
  bucket 56: 50%
  bucket 52: 50%
  bucket 57: 30%
  bucket 54: 40%
  bucket 57: 10%
  bucket 50: 100%
  Sorting block of length 3853485 for bucket 50
  (Using difference cover)
  bucket 51: 70%
  bucket 54: 70%
  bucket 53: 60%
  bucket 49: 100%
  Sorting block of length 3474818 for bucket 49
  (Using difference cover)
  bucket 55: 30%
  bucket 52: 80%
  bucket 58: 10%
  bucket 53: 90%
  bucket 56: 60%
  bucket 55: 60%
  bucket 51: 80%
  bucket 51: 60%
  bucket 52: 90%
  bucket 57: 40%
  bucket 54: 80%
  bucket 53: 100%
  Sorting block of length 1788679 for bucket 53
  (Using difference cover)
  bucket 48: 100%
  Sorting block of length 3614008 for bucket 48
  (Using difference cover)
  bucket 56: 20%
  bucket 52: 60%
  bucket 53: 70%
  bucket 54: 50%
  Sorting block time: 00:00:01
Returning block of 3853486 for bucket 50
  bucket 57: 20%
  bucket 58: 20%
  bucket 55: 40%
  bucket 55: 70%
  bucket 56: 70%
Getting block 58 of 75
  Reserving size (4232702) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
  Sorting block time: 00:00:00
Returning block of 3474819 for bucket 49
  bucket 52: 100%
  Sorting block of length 2662579 for bucket 52
  (Using difference cover)
  bucket 51: 90%
  bucket 51: 70%
  bucket 57: 50%
  bucket 54: 90%
Getting block 59 of 75
  Reserving size (4232702) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 56: 30%
  bucket 52: 70%
  bucket 53: 80%
  bucket 57: 30%
  bucket 58: 30%
  bucket 54: 60%
  Sorting block time: 00:00:00
Returning block of 1788680 for bucket 53
  bucket 55: 50%
Getting block 60 of 75
  Reserving size (4232702) for bucket 60
  Calculating Z arrays for bucket 60
  Entering block accumulator loop for bucket 60:
  bucket 51: 100%
  Sorting block of length 565065 for bucket 51
  (Using difference cover)
  bucket 56: 80%
  bucket 55: 80%
  bucket 56: 40%
  bucket 52: 80%
  bucket 57: 40%
  Sorting block time: 00:00:00
Returning block of 565066 for bucket 51
  bucket 58: 40%
  bucket 53: 90%
Getting block 59 of 76
  Reserving size (4232702) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 54: 70%
  bucket 58: 10%
  bucket 55: 60%
  Sorting block time: 00:00:01
Returning block of 2662580 for bucket 52
  Sorting block time: 00:00:01
Returning block of 3614009 for bucket 48
Getting block 61 of 75
  Reserving size (4232702) for bucket 61
  Calculating Z arrays for bucket 61
  Entering block accumulator loop for bucket 61:
Getting block 60 of 76
  Reserving size (4232702) for bucket 60
  Calculating Z arrays for bucket 60
  Entering block accumulator loop for bucket 60:
  bucket 57: 50%
  bucket 56: 50%
  bucket 52: 90%
  bucket 58: 50%
  bucket 53: 100%
  Sorting block of length 2034138 for bucket 53
  (Using difference cover)
  bucket 59: 10%
  bucket 51: 80%
  bucket 54: 80%
  bucket 57: 60%
  bucket 59: 10%
  bucket 54: 100%
  Sorting block of length 3056156 for bucket 54
  (Using difference cover)
  bucket 60: 10%
  bucket 56: 90%
  bucket 61: 10%
  bucket 55: 70%
  Sorting block time: 00:00:00
Returning block of 2034139 for bucket 53
Getting block 61 of 76
  Reserving size (4232702) for bucket 61
  Calculating Z arrays for bucket 61
  Entering block accumulator loop for bucket 61:
  bucket 58: 60%
  bucket 59: 20%
  bucket 55: 90%
  bucket 58: 20%
  Sorting block time: 00:00:01
Returning block of 3056157 for bucket 54
Getting block 62 of 75
  Reserving size (4232702) for bucket 62
  Calculating Z arrays for bucket 62
  Entering block accumulator loop for bucket 62:
  bucket 61: 20%
  bucket 59: 20%
  bucket 60: 20%
  bucket 51: 90%
  bucket 57: 70%
  bucket 56: 100%
  Sorting block of length 3164705 for bucket 56
  (Using difference cover)
  bucket 58: 30%
  bucket 55: 100%
  Sorting block of length 1776233 for bucket 55
  (Using difference cover)
  bucket 52: 100%
  Sorting block of length 3944115 for bucket 52
  (Using difference cover)
  bucket 57: 60%
  bucket 60: 10%
  bucket 62: 10%
  bucket 61: 30%
  bucket 54: 90%
  bucket 59: 30%
  bucket 56: 60%
  bucket 61: 10%
  bucket 58: 70%
  bucket 60: 30%
  bucket 59: 30%
  bucket 55: 80%
  bucket 57: 80%
  bucket 51: 100%
  Sorting block of length 1593532 for bucket 51
  (Using difference cover)
  bucket 58: 40%
  bucket 62: 20%
  bucket 61: 40%
  bucket 60: 40%
  bucket 59: 40%
  Sorting block time: 00:00:00
Returning block of 1776234 for bucket 55
Getting block 63 of 75
  Reserving size (4232702) for bucket 63
  Calculating Z arrays for bucket 63
  Entering block accumulator loop for bucket 63:
  bucket 57: 90%
  bucket 58: 50%
  Sorting block time: 00:00:01
Returning block of 3164706 for bucket 56
  Sorting block time: 00:00:01
Returning block of 1593533 for bucket 51
  bucket 61: 50%
  bucket 62: 30%
  bucket 54: 100%
  Sorting block of length 2236004 for bucket 54
  (Using difference cover)
  bucket 60: 50%
Getting block 64 of 75
  Reserving size (4232702) for bucket 64
  Calculating Z arrays for bucket 64
  Entering block accumulator loop for bucket 64:
Getting block 65 of 75
  Reserving size (4232702) for bucket 65
  Calculating Z arrays for bucket 65
  Entering block accumulator loop for bucket 65:
  bucket 59: 50%
  bucket 63: 10%
  Sorting block time: 00:00:01
Returning block of 3944116 for bucket 52
  bucket 58: 60%
  bucket 58: 80%
  bucket 57: 100%
  Sorting block of length 3509929 for bucket 57
  (Using difference cover)
  bucket 57: 70%
  bucket 61: 20%
Getting block 62 of 76
  Reserving size (4232702) for bucket 62
  Calculating Z arrays for bucket 62
  Entering block accumulator loop for bucket 62:
  bucket 60: 20%
  bucket 56: 70%
  bucket 61: 60%
  bucket 59: 40%
  bucket 55: 90%
  bucket 60: 60%
  bucket 62: 40%
  bucket 64: 10%
  bucket 65: 10%
  bucket 59: 60%
  bucket 63: 20%
  bucket 58: 70%
  bucket 61: 70%
  bucket 58: 90%
  Sorting block time: 00:00:00
Returning block of 2236005 for bucket 54
  bucket 60: 70%
  bucket 59: 50%
Getting block 63 of 76
  Reserving size (4232702) for bucket 63
  Calculating Z arrays for bucket 63
  Entering block accumulator loop for bucket 63:
  bucket 61: 30%
  bucket 62: 50%
  Sorting block time: 00:00:01
Returning block of 3509930 for bucket 57
  bucket 64: 20%
Getting block 66 of 75
  Reserving size (4232702) for bucket 66
  Calculating Z arrays for bucket 66
  Entering block accumulator loop for bucket 66:
  bucket 59: 70%
  bucket 62: 10%
  bucket 57: 80%
  bucket 61: 80%
  bucket 65: 20%
  bucket 58: 100%
  Sorting block of length 3237025 for bucket 58
  (Using difference cover)
  bucket 55: 100%
  Sorting block of length 3599740 for bucket 55
  (Using difference cover)
  bucket 56: 80%
  bucket 58: 80%
  bucket 63: 30%
  bucket 60: 30%
  bucket 59: 60%
  bucket 63: 10%
  bucket 60: 80%
  bucket 61: 90%
  bucket 61: 40%
  bucket 59: 80%
  bucket 64: 30%
  Sorting block time: 00:00:00
Returning block of 3237026 for bucket 58
  bucket 62: 60%
  bucket 62: 20%
  bucket 59: 70%
  Sorting block time: 00:00:00
Returning block of 3599741 for bucket 55
Getting block 64 of 76
  Reserving size (4232702) for bucket 64
  Calculating Z arrays for bucket 64
  Entering block accumulator loop for bucket 64:
  bucket 57: 90%
  bucket 63: 20%
  bucket 56: 90%
Getting block 65 of 76
  Reserving size (4232702) for bucket 65
  Calculating Z arrays for bucket 65
  Entering block accumulator loop for bucket 65:
  bucket 60: 40%
  bucket 61: 100%
  Sorting block of length 3846355 for bucket 61
  (Using difference cover)
  bucket 65: 30%
  bucket 58: 90%
  bucket 66: 10%
  bucket 63: 40%
  bucket 60: 90%
  bucket 59: 80%
  bucket 64: 10%
  bucket 64: 40%
  bucket 61: 50%
  bucket 63: 30%
  bucket 59: 90%
  bucket 62: 30%
  bucket 57: 100%
  Sorting block of length 2334982 for bucket 57
  (Using difference cover)
  bucket 56: 100%
  Sorting block of length 3370522 for bucket 56
  (Using difference cover)
  bucket 65: 10%
  bucket 60: 50%
  Sorting block time: 00:00:00
Returning block of 3846356 for bucket 61
  bucket 64: 20%
  bucket 62: 70%
  bucket 59: 90%
  bucket 63: 40%
Getting block 67 of 75
  Reserving size (4232702) for bucket 67
  Calculating Z arrays for bucket 67
  Entering block accumulator loop for bucket 67:
  bucket 61: 60%
  bucket 62: 40%
  bucket 58: 100%
  Sorting block of length 2271980 for bucket 58
  (Using difference cover)
  bucket 65: 40%
  bucket 64: 50%
  bucket 60: 100%
  Sorting block of length 3565574 for bucket 60
  (Using difference cover)
  bucket 65: 20%
  bucket 63: 50%
  bucket 66: 20%
  bucket 60: 60%
  bucket 64: 30%
  bucket 59: 100%
  Sorting block of length 3820694 for bucket 59
  (Using difference cover)
  bucket 63: 50%
  Sorting block time: 00:00:01
Returning block of 2334983 for bucket 57
  bucket 61: 70%
Getting block 66 of 76
  Reserving size (4232702) for bucket 66
  Calculating Z arrays for bucket 66
  Entering block accumulator loop for bucket 66:
  bucket 62: 50%
  bucket 59: 100%
  Sorting block of length 2435015 for bucket 59
  (Using difference cover)
  bucket 67: 10%
  bucket 65: 30%
  Sorting block time: 00:00:01
Returning block of 3370523 for bucket 56
  bucket 60: 70%
  bucket 64: 40%
Getting block 67 of 76
  Reserving size (4232702) for bucket 67
  Calculating Z arrays for bucket 67
  Entering block accumulator loop for bucket 67:
  bucket 63: 60%
  Sorting block time: 00:00:00
Returning block of 2271981 for bucket 58
  bucket 61: 80%
Getting block 68 of 75
  Reserving size (4232702) for bucket 68
  Calculating Z arrays for bucket 68
  Entering block accumulator loop for bucket 68:
  bucket 62: 80%
  bucket 62: 60%
  bucket 66: 10%
  Sorting block time: 00:00:00
Returning block of 3565575 for bucket 60
  bucket 67: 20%
  bucket 64: 60%
  Sorting block time: 00:00:00
Returning block of 2435016 for bucket 59
Getting block 69 of 75
  Reserving size (4232702) for bucket 69
  Calculating Z arrays for bucket 69
  Entering block accumulator loop for bucket 69:
Getting block 70 of 75
  Reserving size (4232702) for bucket 70
  Calculating Z arrays for bucket 70
  Entering block accumulator loop for bucket 70:
  Sorting block time: 00:00:00
Returning block of 3820695 for bucket 59
  bucket 64: 50%
  bucket 65: 40%
Getting block 68 of 76
  Reserving size (4232702) for bucket 68
  Calculating Z arrays for bucket 68
  Entering block accumulator loop for bucket 68:
  bucket 65: 50%
  bucket 63: 60%
  bucket 63: 70%
  bucket 67: 30%
  bucket 66: 30%
  bucket 68: 10%
  bucket 60: 80%
  bucket 67: 10%
  bucket 64: 60%
  bucket 61: 90%
  bucket 68: 10%
  bucket 62: 70%
  bucket 62: 90%
  bucket 70: 10%
  bucket 64: 70%
  bucket 69: 10%
  bucket 63: 80%
  bucket 66: 20%
  bucket 67: 40%
  bucket 65: 50%
  bucket 65: 60%
  bucket 64: 70%
  bucket 63: 70%
  bucket 68: 20%
  bucket 68: 20%
  bucket 67: 50%
  bucket 63: 90%
  bucket 70: 20%
  bucket 67: 20%
  bucket 60: 90%
  bucket 69: 20%
  bucket 66: 40%
  bucket 64: 80%
  bucket 62: 100%
  Sorting block of length 1481396 for bucket 62
  (Using difference cover)
  bucket 65: 60%
  bucket 62: 80%
  bucket 61: 100%
  Sorting block of length 2648314 for bucket 61
  (Using difference cover)
  bucket 67: 60%
  bucket 70: 30%
  Sorting block time: 00:00:00
Returning block of 1481397 for bucket 62
Getting block 71 of 75
  Reserving size (4232702) for bucket 71
  Calculating Z arrays for bucket 71
  Entering block accumulator loop for bucket 71:
  bucket 64: 80%
  bucket 66: 30%
  bucket 68: 30%
  bucket 65: 70%
  bucket 63: 80%
  bucket 65: 70%
  Sorting block time: 00:00:00
Returning block of 2648315 for bucket 61
Getting block 69 of 76
  Reserving size (4232702) for bucket 69
  Calculating Z arrays for bucket 69
  Entering block accumulator loop for bucket 69:
  bucket 67: 70%
  bucket 68: 30%
  bucket 69: 30%
  bucket 63: 100%
  Sorting block of length 3314727 for bucket 63
  (Using difference cover)
  bucket 70: 40%
  bucket 62: 90%
  bucket 67: 30%
  bucket 60: 100%
  Sorting block of length 3188738 for bucket 60
  (Using difference cover)
  bucket 64: 90%
  bucket 64: 90%
  bucket 66: 40%
  bucket 66: 50%
  bucket 65: 80%
  bucket 69: 10%
  bucket 71: 10%
  bucket 68: 40%
  bucket 68: 40%
  bucket 67: 80%
  bucket 65: 80%
  bucket 63: 90%
  bucket 69: 40%
  bucket 70: 50%
  bucket 62: 100%
  Sorting block of length 1987882 for bucket 62
  (Using difference cover)
  bucket 67: 40%
  bucket 64: 100%
  Sorting block of length 4154278 for bucket 64
  (Using difference cover)
  bucket 64: 100%
  Sorting block of length 1819834 for bucket 64
  (Using difference cover)
  bucket 66: 50%
  bucket 66: 60%
  bucket 69: 20%
  bucket 68: 50%
  bucket 65: 90%
  bucket 67: 90%
  bucket 71: 20%
  bucket 68: 50%
  bucket 70: 60%
  bucket 65: 90%
  bucket 69: 50%
  bucket 63: 100%
  Sorting block of length 4152315 for bucket 63
  (Using difference cover)
  bucket 67: 50%
  Sorting block time: 00:00:00
Returning block of 3314728 for bucket 63
  bucket 66: 60%
Getting block 70 of 76
  Reserving size (4232702) for bucket 70
  Calculating Z arrays for bucket 70
  Entering block accumulator loop for bucket 70:
  Sorting block time: 00:00:00
Returning block of 3188739 for bucket 60
  bucket 68: 60%
  bucket 67: 100%
  Sorting block of length 3300547 for bucket 67
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 1987883 for bucket 62
  bucket 66: 70%
  bucket 69: 30%
  bucket 71: 30%
  bucket 65: 100%
  Sorting block of length 3093252 for bucket 65
  (Using difference cover)
Getting block 71 of 76
  Reserving size (4232702) for bucket 71
  Calculating Z arrays for bucket 71
  Entering block accumulator loop for bucket 71:
Getting block 72 of 76
  Reserving size (4232702) for bucket 72
  Calculating Z arrays for bucket 72
  Entering block accumulator loop for bucket 72:
  bucket 68: 60%
  bucket 70: 70%
  Sorting block time: 00:00:00
Returning block of 1819835 for bucket 64
  bucket 69: 60%
  bucket 65: 100%
  Sorting block of length 2621383 for bucket 65
  (Using difference cover)
Getting block 73 of 76
  Reserving size (4232702) for bucket 73
  Calculating Z arrays for bucket 73
  Entering block accumulator loop for bucket 73:
  bucket 67: 60%
  bucket 68: 70%
  bucket 71: 40%
  bucket 66: 80%
  bucket 70: 80%
  bucket 69: 70%
  bucket 70: 10%
  Sorting block time: 00:00:01
Returning block of 4154279 for bucket 64
  bucket 68: 80%
Getting block 72 of 75
  Reserving size (4232702) for bucket 72
  Calculating Z arrays for bucket 72
  Entering block accumulator loop for bucket 72:
  bucket 71: 50%
  bucket 70: 90%
  bucket 68: 70%
  bucket 69: 80%
  bucket 66: 90%
  bucket 66: 70%
  Sorting block time: 00:00:01
Returning block of 2621384 for bucket 65
  Sorting block time: 00:00:01
Returning block of 4152316 for bucket 63
  bucket 73: 10%
  Sorting block time: 00:00:01
Returning block of 3300548 for bucket 67
Getting block 73 of 75
  Reserving size (4232702) for bucket 73
  Calculating Z arrays for bucket 73
  Entering block accumulator loop for bucket 73:
  Sorting block time: 00:00:01
Returning block of 3093253 for bucket 65
  bucket 69: 40%
  bucket 68: 90%
Getting block 74 of 75
  Reserving size (4232702) for bucket 74
  Calculating Z arrays for bucket 74
  Entering block accumulator loop for bucket 74:
Getting block 75 of 75
  Reserving size (4232702) for bucket 75
  Calculating Z arrays for bucket 75
  Entering block accumulator loop for bucket 75:
Getting block 74 of 76
  Reserving size (4232702) for bucket 74
  Calculating Z arrays for bucket 74
  Entering block accumulator loop for bucket 74:
  bucket 72: 10%
  bucket 71: 60%
  bucket 71: 10%
  bucket 70: 100%
  Sorting block of length 1654597 for bucket 70
  (Using difference cover)
  bucket 69: 90%
  bucket 72: 10%
  bucket 70: 20%
  bucket 75: 10%
  bucket 66: 100%
  Sorting block of length 3280313 for bucket 66
  (Using difference cover)
  bucket 67: 70%
  bucket 68: 80%
  bucket 74: 10%
  bucket 73: 20%
  bucket 73: 10%
  bucket 68: 100%
  Sorting block of length 4016636 for bucket 68
  (Using difference cover)
  bucket 66: 80%
  bucket 69: 50%
  bucket 74: 10%
  Sorting block time: 00:00:01
Returning block of 1654598 for bucket 70
  bucket 71: 20%
  bucket 70: 30%
  bucket 72: 20%
  bucket 74: 20%
  bucket 72: 20%
  bucket 69: 100%
  Sorting block of length 3158980 for bucket 69
  (Using difference cover)
  bucket 75: 20%
  bucket 71: 70%
  Sorting block time: 00:00:01
Returning block of 3280314 for bucket 66
  bucket 74: 20%
  bucket 68: 90%
  bucket 67: 80%
  bucket 73: 30%
  bucket 69: 60%
  bucket 74: 30%
  bucket 66: 90%
  bucket 73: 20%
  Sorting block time: 00:00:01
Returning block of 4016637 for bucket 68
  bucket 74: 30%
  bucket 75: 30%
  bucket 72: 30%
  Sorting block time: 00:00:01
Returning block of 3158981 for bucket 69
  bucket 70: 40%
  bucket 69: 70%
  bucket 71: 30%
  bucket 74: 40%
  bucket 71: 80%
  bucket 74: 40%
  bucket 75: 40%
  bucket 73: 40%
  bucket 68: 100%
  Sorting block of length 3196204 for bucket 68
  (Using difference cover)
  bucket 72: 30%
  bucket 74: 50%
  bucket 73: 30%
  bucket 69: 80%
  bucket 72: 40%
  bucket 67: 90%
  bucket 74: 50%
  bucket 71: 90%
  bucket 66: 100%
  Sorting block of length 4030898 for bucket 66
  (Using difference cover)
  bucket 75: 50%
  bucket 74: 60%
  bucket 70: 50%
  bucket 71: 40%
  Sorting block time: 00:00:01
Returning block of 3196205 for bucket 68
  bucket 69: 90%
Getting block 75 of 76
  Reserving size (4232702) for bucket 75
  Calculating Z arrays for bucket 75
  Entering block accumulator loop for bucket 75:
  bucket 73: 40%
  bucket 72: 50%
  bucket 74: 60%
  bucket 74: 70%
  bucket 75: 60%
  bucket 73: 50%
  bucket 71: 100%
  Sorting block of length 2893452 for bucket 71
  (Using difference cover)
  bucket 72: 40%
  bucket 69: 100%
  Sorting block of length 3728790 for bucket 69
  (Using difference cover)
  bucket 67: 100%
  Sorting block of length 3580261 for bucket 67
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4030899 for bucket 66
  bucket 74: 70%
  bucket 74: 80%
  bucket 70: 60%
Getting block 76 of 76
  Reserving size (4232702) for bucket 76
  Calculating Z arrays for bucket 76
  Entering block accumulator loop for bucket 76:
  bucket 71: 50%
  bucket 75: 10%
  bucket 75: 70%
  bucket 72: 60%
  bucket 73: 60%
  bucket 73: 50%
  bucket 74: 80%
  bucket 74: 90%
  Sorting block time: 00:00:01
Returning block of 2893453 for bucket 71
  bucket 72: 50%
  bucket 75: 80%
  bucket 76: 10%
  Sorting block time: 00:00:01
Returning block of 3580262 for bucket 67
  Sorting block time: 00:00:01
Returning block of 3728791 for bucket 69
  bucket 74: 100%
  Sorting block of length 3583612 for bucket 74
  (Using difference cover)
  bucket 74: 90%
  bucket 72: 70%
  bucket 70: 70%
  bucket 73: 60%
  bucket 71: 60%
  bucket 75: 20%
  bucket 75: 90%
  bucket 73: 70%
  bucket 74: 100%
  Sorting block of length 795800 for bucket 74
  (Using difference cover)
  bucket 76: 20%
  bucket 72: 80%
  bucket 72: 60%
  bucket 75: 100%
  Sorting block of length 1336326 for bucket 75
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 795801 for bucket 74
  bucket 73: 70%
  Sorting block time: 00:00:01
Returning block of 3583613 for bucket 74
  bucket 70: 80%
  Sorting block time: 00:00:00
Returning block of 1336327 for bucket 75
  bucket 75: 30%
  bucket 71: 70%
  bucket 73: 80%
  bucket 76: 30%
  bucket 72: 90%
  bucket 73: 80%
  bucket 72: 70%
  bucket 70: 90%
  bucket 76: 40%
  bucket 72: 100%
  Sorting block of length 3978944 for bucket 72
  (Using difference cover)
  bucket 75: 40%
  bucket 73: 90%
  bucket 71: 80%
  bucket 73: 90%
  bucket 76: 50%
  bucket 72: 80%
  bucket 70: 100%
  Sorting block of length 2116162 for bucket 70
  (Using difference cover)
  bucket 73: 100%
  Sorting block of length 1264278 for bucket 73
  (Using difference cover)
  bucket 75: 50%
  bucket 73: 100%
  Sorting block of length 3753314 for bucket 73
  (Using difference cover)
  bucket 71: 90%
  Sorting block time: 00:00:01
Returning block of 3978945 for bucket 72
  Sorting block time: 00:00:00
Returning block of 1264279 for bucket 73
  bucket 76: 60%
  Sorting block time: 00:00:00
Returning block of 2116163 for bucket 70
  bucket 72: 90%
  bucket 75: 60%
  bucket 76: 70%
  bucket 71: 100%
  Sorting block of length 2685916 for bucket 71
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3753315 for bucket 73
  bucket 75: 70%
  bucket 76: 80%
  bucket 72: 100%
  Sorting block of length 2160274 for bucket 72
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 2685917 for bucket 71
  bucket 76: 90%
  bucket 75: 80%
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 112886029
fchr[G]: 155561511
fchr[T]: 155561511
fchr[$]: 225744106
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 80219494 bytes to primary EBWT file: BS_GA.1.bt2.tmp
Wrote 56436032 bytes to secondary EBWT file: BS_GA.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 225744106
    bwtLen: 225744107
    sz: 56436027
    bwtSz: 56436027
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14109007
    offsSz: 56436028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1175751
    numLines: 1175751
    ebwtTotLen: 75248064
    ebwtTotSz: 75248064
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:06
Reading reference sizes
  Sorting block time: 00:00:01
Returning block of 2160275 for bucket 72
  bucket 76: 100%
  Sorting block of length 1827346 for bucket 76
  (Using difference cover)
  bucket 75: 90%
  Sorting block time: 00:00:00
Returning block of 1827347 for bucket 76
  bucket 75: 100%
  Sorting block of length 3988831 for bucket 75
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3988832 for bucket 75
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 70184129
fchr[G]: 70184129
fchr[T]: 112886029
fchr[$]: 225744106
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 80219494 bytes to primary EBWT file: BS_CT.1.bt2.tmp
Wrote 56436032 bytes to secondary EBWT file: BS_CT.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 225744106
    bwtLen: 225744107
    sz: 56436027
    bwtSz: 56436027
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14109007
    offsSz: 56436028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1175751
    numLines: 1175751
    ebwtTotLen: 75248064
    ebwtTotSz: 75248064
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:01:08
Reading reference sizes
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 5643602
Using parameters --bmax 4232702 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 4232702 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  Time reading reference sizes: 00:00:01
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Time to join reference sequences: 00:00:01
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 5643602
Using parameters --bmax 4232702 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 4232702 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
  V-Sorting samples time: 00:00:01
  Allocating rank array
  Ranking v-sort output
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 108 sample suffixes
Generating random suffixes
QSorting 108 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 108 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
  Ranking v-sort output time: 00:00:01
  Invoking Larsson-Sadakane on ranks
Splitting and merging
  Splitting and merging time: 00:00:00
Split 11, merged 49; iterating...
  Invoking Larsson-Sadakane on ranks time: 00:00:02
  Sanity-checking and returning
Building samples
Reserving space for 108 sample suffixes
Generating random suffixes
QSorting 108 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 108 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 6, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 14, merged 52; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 6, merged 3; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 8, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 4; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 4, merged 4; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
Avg bucket size: 3.17949e+06 (target: 4232701)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 71
  Reserving size (4232702) for bucket 1
Getting block 2 of 71
Getting block 3 of 71
Getting block 4 of 71
Getting block 5 of 71
Getting block 6 of 71
Getting block 7 of 71
Getting block 8 of 71
Getting block 9 of 71
  Calculating Z arrays for bucket 1
  Reserving size (4232702) for bucket 2
  Reserving size (4232702) for bucket 3
  Reserving size (4232702) for bucket 4
  Reserving size (4232702) for bucket 5
  Reserving size (4232702) for bucket 6
  Reserving size (4232702) for bucket 7
  Reserving size (4232702) for bucket 8
  Reserving size (4232702) for bucket 9
  Entering block accumulator loop for bucket 1:
  Calculating Z arrays for bucket 5
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 7
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 5:
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 8:
  Entering block accumulator loop for bucket 9:
  bucket 1: 10%
  bucket 2: 10%
  bucket 3: 10%
  bucket 4: 10%
  bucket 5: 10%
  bucket 9: 10%
  bucket 8: 10%
  bucket 7: 10%
  bucket 6: 10%
  bucket 1: 20%
  bucket 2: 20%
  bucket 3: 20%
  bucket 4: 20%
  bucket 5: 20%
  bucket 9: 20%
  bucket 8: 20%
  bucket 7: 20%
  bucket 6: 20%
  bucket 1: 30%
  bucket 2: 30%
  bucket 3: 30%
  bucket 4: 30%
  bucket 5: 30%
  bucket 9: 30%
  bucket 8: 30%
  bucket 7: 30%
  bucket 6: 30%
  bucket 1: 40%
  bucket 2: 40%
  bucket 3: 40%
  bucket 5: 40%
  bucket 4: 40%
  bucket 9: 40%
  bucket 8: 40%
  bucket 7: 40%
  bucket 1: 50%
  bucket 6: 40%
Splitting and merging
  Splitting and merging time: 00:00:00
Split 3, merged 3; iterating...
  bucket 2: 50%
  bucket 3: 50%
  bucket 4: 50%
  bucket 5: 50%
  bucket 1: 60%
  bucket 9: 50%
  bucket 8: 50%
  bucket 2: 60%
  bucket 7: 50%
  bucket 6: 50%
  bucket 3: 60%
  bucket 5: 60%
  bucket 4: 60%
  bucket 1: 70%
  bucket 2: 70%
  bucket 9: 60%
  bucket 3: 70%
  bucket 8: 60%
  bucket 7: 60%
  bucket 6: 60%
  bucket 5: 70%
  bucket 4: 70%
  bucket 1: 80%
  bucket 2: 80%
  bucket 3: 80%
  bucket 9: 70%
  bucket 8: 70%
  bucket 7: 70%
  bucket 6: 70%
  bucket 1: 90%
  bucket 5: 80%
  bucket 4: 80%
  bucket 2: 90%
  bucket 3: 90%
  bucket 9: 80%
  bucket 8: 80%
  bucket 7: 80%
  bucket 6: 80%
  bucket 1: 100%
  Sorting block of length 3650788 for bucket 1
  (Using difference cover)
  bucket 2: 100%
  Sorting block of length 1881472 for bucket 2
  (Using difference cover)
  bucket 5: 90%
  bucket 4: 90%
  bucket 3: 100%
  Sorting block of length 3249775 for bucket 3
  (Using difference cover)
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
Avg bucket size: 3.13533e+06 (target: 4232701)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 72
  Reserving size (4232702) for bucket 1
Getting block 2 of 72
Getting block 3 of 72
Getting block 4 of 72
Getting block 5 of 72
Getting block 6 of 72
Getting block 7 of 72
Getting block 8 of 72
Getting block 9 of 72
  Reserving size (4232702) for bucket 2
  Calculating Z arrays for bucket 1
  Reserving size (4232702) for bucket 3
  Reserving size (4232702) for bucket 4
  Reserving size (4232702) for bucket 5
  Reserving size (4232702) for bucket 6
  Reserving size (4232702) for bucket 7
  Reserving size (4232702) for bucket 8
  Reserving size (4232702) for bucket 9
  Entering block accumulator loop for bucket 1:
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 2
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 5
  Calculating Z arrays for bucket 8
  Calculating Z arrays for bucket 7
  Calculating Z arrays for bucket 9
  Entering block accumulator loop for bucket 4:
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 2:
  Entering block accumulator loop for bucket 3:
  Entering block accumulator loop for bucket 5:
  Entering block accumulator loop for bucket 8:
  Entering block accumulator loop for bucket 7:
  Entering block accumulator loop for bucket 9:
  Entering block accumulator loop for bucket 6:
  bucket 9: 90%
  bucket 8: 90%
  bucket 7: 90%
  bucket 6: 90%
  bucket 5: 100%
  Sorting block of length 2138451 for bucket 5
  (Using difference cover)
  bucket 4: 100%
  Sorting block of length 2917085 for bucket 4
  (Using difference cover)
  bucket 1: 10%
  bucket 2: 10%
  bucket 3: 10%
  bucket 4: 10%
  bucket 5: 10%
  bucket 7: 10%
  bucket 6: 10%
  bucket 8: 10%
  bucket 9: 10%
  bucket 9: 100%
  Sorting block of length 2611530 for bucket 9
  (Using difference cover)
  bucket 8: 100%
  Sorting block of length 2492029 for bucket 8
  (Using difference cover)
  bucket 7: 100%
  Sorting block of length 3297259 for bucket 7
  (Using difference cover)
  bucket 6: 100%
  Sorting block of length 3907506 for bucket 6
  (Using difference cover)
  bucket 1: 20%
  Sorting block time: 00:00:01
Returning block of 1881473 for bucket 2
  bucket 2: 20%
  bucket 3: 20%
  bucket 4: 20%
  bucket 5: 20%
Getting block 10 of 71
  Reserving size (4232702) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  bucket 7: 20%
  bucket 6: 20%
  bucket 8: 20%
  bucket 9: 20%
  bucket 1: 30%
  bucket 2: 30%
  bucket 3: 30%
  bucket 4: 30%
  bucket 5: 30%
  bucket 10: 10%
  bucket 7: 30%
  bucket 6: 30%
  Sorting block time: 00:00:01
Returning block of 3249776 for bucket 3
  bucket 8: 30%
  Sorting block time: 00:00:00
Returning block of 2138452 for bucket 5
  bucket 1: 40%
  Sorting block time: 00:00:01
Returning block of 3650789 for bucket 1
  bucket 2: 40%
Getting block 11 of 71
  Reserving size (4232702) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  bucket 9: 30%
Getting block 12 of 71
  Reserving size (4232702) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  bucket 3: 40%
  bucket 4: 40%
Getting block 13 of 71
  Reserving size (4232702) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  bucket 5: 40%
  Sorting block time: 00:00:00
Returning block of 2917086 for bucket 4
  bucket 1: 50%
  bucket 7: 40%
  Sorting block time: 00:00:00
Returning block of 2492030 for bucket 8
  bucket 6: 40%
  bucket 8: 40%
  Sorting block time: 00:00:00
Returning block of 2611531 for bucket 9
  bucket 2: 50%
Getting block 14 of 71
  Reserving size (4232702) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
Getting block 15 of 71
  Reserving size (4232702) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 3: 50%
  bucket 9: 40%
  bucket 4: 50%
  bucket 5: 50%
Getting block 16 of 71
  Reserving size (4232702) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  bucket 1: 60%
  bucket 10: 20%
  bucket 7: 50%
  bucket 2: 60%
  bucket 6: 50%
  bucket 8: 50%
  Sorting block time: 00:00:00
Returning block of 3297260 for bucket 7
  bucket 3: 60%
  bucket 4: 60%
  bucket 5: 60%
  bucket 11: 10%
  bucket 12: 10%
  Sorting block time: 00:00:01
Returning block of 3907507 for bucket 6
  bucket 1: 70%
  bucket 13: 10%
  bucket 9: 50%
Getting block 17 of 71
  Reserving size (4232702) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 2: 70%
  bucket 7: 60%
Getting block 18 of 71
  Reserving size (4232702) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 6: 60%
  bucket 3: 70%
  bucket 8: 60%
  bucket 4: 70%
  bucket 5: 70%
  bucket 1: 80%
  bucket 2: 80%
  bucket 9: 60%
  bucket 7: 70%
  bucket 3: 80%
  bucket 1: 90%
  bucket 6: 70%
  bucket 4: 80%
  bucket 8: 70%
  bucket 5: 80%
  bucket 2: 90%
  bucket 12: 20%
  bucket 13: 20%
  bucket 9: 70%
  bucket 1: 100%
  Sorting block of length 2356152 for bucket 1
  (Using difference cover)
  bucket 3: 90%
  bucket 7: 80%
  bucket 4: 90%
  bucket 5: 90%
  bucket 6: 80%
  bucket 8: 80%
  bucket 2: 100%
  Sorting block of length 2642089 for bucket 2
  (Using difference cover)
  bucket 15: 10%
  bucket 16: 10%
  bucket 14: 10%
  bucket 3: 100%
  Sorting block of length 3292891 for bucket 3
  (Using difference cover)
  bucket 11: 20%
  bucket 17: 10%
  bucket 10: 30%
  bucket 7: 90%
  bucket 4: 100%
  Sorting block of length 3476522 for bucket 4
  (Using difference cover)
  bucket 9: 80%
  bucket 5: 100%
  Sorting block of length 2682442 for bucket 5
  (Using difference cover)
  bucket 6: 90%
  bucket 8: 90%
  bucket 13: 30%
  bucket 12: 30%
  bucket 18: 10%
  bucket 7: 100%
  Sorting block of length 3071000 for bucket 7
  (Using difference cover)
  bucket 9: 90%
  bucket 6: 100%
  Sorting block of length 4194205 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 2356153 for bucket 1
  bucket 8: 100%
  Sorting block of length 2190195 for bucket 8
  (Using difference cover)
Getting block 10 of 72
  Reserving size (4232702) for bucket 10
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 10:
  Sorting block time: 00:00:01
Returning block of 2642090 for bucket 2
Getting block 11 of 72
  Reserving size (4232702) for bucket 11
  Calculating Z arrays for bucket 11
  Entering block accumulator loop for bucket 11:
  bucket 9: 100%
  Sorting block of length 4973869 for bucket 9
  (Using difference cover)
  bucket 13: 40%
  Sorting block time: 00:00:01
Returning block of 2682443 for bucket 5
  bucket 12: 40%
  bucket 17: 20%
  bucket 16: 20%
  bucket 11: 30%
  bucket 14: 20%
Getting block 12 of 72
  Reserving size (4232702) for bucket 12
  Calculating Z arrays for bucket 12
  Entering block accumulator loop for bucket 12:
  bucket 15: 20%
  Sorting block time: 00:00:01
Returning block of 3292892 for bucket 3
  bucket 10: 40%
Getting block 13 of 72
  Reserving size (4232702) for bucket 13
  Calculating Z arrays for bucket 13
  Entering block accumulator loop for bucket 13:
  Sorting block time: 00:00:01
Returning block of 2190196 for bucket 8
  Sorting block time: 00:00:01
Returning block of 3476523 for bucket 4
Getting block 14 of 72
  Reserving size (4232702) for bucket 14
  Calculating Z arrays for bucket 14
  Entering block accumulator loop for bucket 14:
Getting block 15 of 72
  Reserving size (4232702) for bucket 15
  Calculating Z arrays for bucket 15
  Entering block accumulator loop for bucket 15:
  bucket 11: 10%
  bucket 10: 10%
  bucket 13: 50%
  Sorting block time: 00:00:01
Returning block of 3071001 for bucket 7
  bucket 18: 20%
  bucket 12: 50%
  Sorting block time: 00:00:01
Returning block of 4194206 for bucket 6
Getting block 16 of 72
  Reserving size (4232702) for bucket 16
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 16:
  bucket 12: 10%
  bucket 14: 10%
Getting block 17 of 72
  Reserving size (4232702) for bucket 17
  Calculating Z arrays for bucket 17
  Entering block accumulator loop for bucket 17:
  bucket 17: 30%
  bucket 10: 20%
  bucket 11: 40%
  bucket 16: 30%
  bucket 13: 60%
  bucket 13: 10%
  bucket 15: 30%
  bucket 12: 60%
  bucket 14: 30%
  bucket 10: 50%
  bucket 15: 10%
  Sorting block time: 00:00:01
Returning block of 4973870 for bucket 9
  bucket 11: 20%
  bucket 16: 10%
  bucket 10: 30%
  bucket 14: 20%
Getting block 18 of 72
  Reserving size (4232702) for bucket 18
  Calculating Z arrays for bucket 18
  Entering block accumulator loop for bucket 18:
  bucket 18: 30%
  bucket 13: 70%
  bucket 17: 40%
  bucket 12: 70%
  bucket 12: 20%
  bucket 17: 10%
  bucket 11: 50%
  bucket 10: 40%
  bucket 16: 20%
  bucket 16: 40%
  bucket 15: 40%
  bucket 14: 40%
  bucket 14: 30%
  bucket 13: 80%
  bucket 10: 60%
  bucket 12: 80%
  bucket 15: 20%
  bucket 13: 20%
  bucket 11: 30%
  bucket 10: 50%
  bucket 18: 10%
  bucket 18: 40%
  bucket 17: 50%
  bucket 16: 30%
  bucket 13: 90%
  bucket 14: 40%
  bucket 11: 60%
  bucket 10: 60%
  bucket 12: 90%
  bucket 16: 50%
  bucket 12: 30%
  bucket 17: 20%
  bucket 15: 50%
  bucket 13: 100%
  Sorting block of length 4029836 for bucket 13
  (Using difference cover)
  bucket 15: 30%
  bucket 10: 70%
  bucket 10: 70%
  bucket 14: 50%
  bucket 11: 40%
  bucket 16: 40%
  bucket 17: 60%
  bucket 12: 100%
  Sorting block of length 3537705 for bucket 12
  (Using difference cover)
  bucket 14: 50%
  bucket 18: 50%
  bucket 18: 20%
  bucket 13: 30%
  bucket 11: 70%
  bucket 16: 60%
  bucket 10: 80%
  bucket 15: 60%
  bucket 10: 80%
  bucket 14: 60%
  bucket 16: 50%
  bucket 17: 70%
  bucket 17: 30%
  bucket 12: 40%
  bucket 14: 60%
  bucket 18: 60%
  bucket 15: 40%
  bucket 11: 80%
  bucket 11: 50%
  bucket 16: 70%
  bucket 10: 90%
  bucket 15: 70%
  bucket 10: 90%
  Sorting block time: 00:00:01
Returning block of 4029837 for bucket 13
  bucket 14: 70%
  Sorting block time: 00:00:01
Returning block of 3537706 for bucket 12
  bucket 17: 80%
Getting block 19 of 71
  Reserving size (4232702) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
Getting block 20 of 71
  Reserving size (4232702) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  bucket 18: 70%
  bucket 18: 30%
  bucket 11: 90%
  bucket 16: 80%
  bucket 15: 80%
  bucket 10: 100%
  Sorting block of length 4041513 for bucket 10
  (Using difference cover)
  bucket 14: 80%
  bucket 16: 60%
  bucket 17: 90%
  bucket 19: 10%
  bucket 20: 10%
  bucket 18: 80%
  bucket 10: 100%
  Sorting block of length 996003 for bucket 10
  (Using difference cover)
  bucket 14: 70%
  bucket 11: 100%
  Sorting block of length 2953410 for bucket 11
  (Using difference cover)
  bucket 16: 90%
  bucket 15: 90%
  bucket 13: 40%
  bucket 14: 90%
  bucket 17: 100%
  Sorting block of length 1061559 for bucket 17
  (Using difference cover)
  bucket 19: 20%
  Sorting block time: 00:00:01
Returning block of 996004 for bucket 10
  bucket 20: 20%
  bucket 18: 90%
Getting block 19 of 72
  Reserving size (4232702) for bucket 19
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 19:
  bucket 16: 100%
  Sorting block of length 3353292 for bucket 16
  (Using difference cover)
  bucket 15: 100%
  Sorting block of length 3931973 for bucket 15
  (Using difference cover)
  bucket 17: 40%
  bucket 12: 50%
  bucket 16: 70%
  bucket 14: 100%
  Sorting block of length 2620675 for bucket 14
  (Using difference cover)
  bucket 19: 30%
  Sorting block time: 00:00:00
Returning block of 1061560 for bucket 17
Getting block 21 of 71
  Reserving size (4232702) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 20: 30%
  bucket 18: 100%
  Sorting block of length 3329086 for bucket 18
  (Using difference cover)
  bucket 14: 80%
  bucket 11: 60%
  bucket 15: 50%
  bucket 18: 40%
  bucket 19: 10%
  Sorting block time: 00:00:01
Returning block of 2953411 for bucket 11
  bucket 19: 40%
  Sorting block time: 00:00:01
Returning block of 4041514 for bucket 10
  bucket 20: 40%
  bucket 21: 10%
Getting block 22 of 71
  Reserving size (4232702) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
Getting block 23 of 71
  Reserving size (4232702) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 16: 80%
  Sorting block time: 00:00:00
Returning block of 2620676 for bucket 14
  bucket 19: 50%
Getting block 24 of 71
  Reserving size (4232702) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
  Sorting block time: 00:00:00
Returning block of 3353293 for bucket 16
  bucket 14: 90%
  bucket 20: 50%
Getting block 25 of 71
  Reserving size (4232702) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  bucket 19: 20%
  Sorting block time: 00:00:01
Returning block of 3329087 for bucket 18
  Sorting block time: 00:00:01
Returning block of 3931974 for bucket 15
  bucket 17: 50%
  bucket 13: 50%
  bucket 12: 60%
Getting block 26 of 71
  Reserving size (4232702) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
Getting block 27 of 71
  Reserving size (4232702) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 21: 20%
  bucket 22: 10%
  bucket 11: 70%
  bucket 15: 60%
  bucket 16: 90%
  bucket 18: 50%
  bucket 19: 60%
  bucket 23: 10%
  bucket 19: 30%
  bucket 14: 100%
  Sorting block of length 4151805 for bucket 14
  (Using difference cover)
  bucket 20: 60%
  bucket 17: 60%
  bucket 12: 70%
  bucket 16: 100%
  Sorting block of length 2988194 for bucket 16
  (Using difference cover)
  bucket 13: 60%
  bucket 11: 80%
  bucket 19: 40%
  bucket 19: 70%
  bucket 25: 10%
  bucket 15: 70%
  bucket 24: 10%
  bucket 18: 60%
  bucket 20: 70%
  bucket 21: 30%
  bucket 22: 20%
  bucket 26: 10%
  bucket 27: 10%
  bucket 23: 20%
  bucket 19: 50%
  bucket 19: 80%
  Sorting block time: 00:00:01
Returning block of 4151806 for bucket 14
  Sorting block time: 00:00:01
Returning block of 2988195 for bucket 16
Getting block 20 of 72
  Reserving size (4232702) for bucket 20
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 20:
  bucket 20: 80%
Getting block 21 of 72
  Reserving size (4232702) for bucket 21
  Calculating Z arrays for bucket 21
  Entering block accumulator loop for bucket 21:
  bucket 19: 60%
  bucket 25: 20%
  bucket 21: 40%
  bucket 24: 20%
  bucket 22: 30%
  bucket 19: 90%
  bucket 17: 70%
  bucket 26: 20%
  bucket 20: 90%
  bucket 12: 80%
  bucket 11: 90%
  bucket 18: 70%
  bucket 23: 30%
  bucket 27: 20%
  bucket 20: 10%
  bucket 15: 80%
  bucket 21: 10%
  bucket 19: 70%
  bucket 13: 70%
  bucket 19: 100%
  Sorting block of length 3165297 for bucket 19
  (Using difference cover)
  bucket 20: 100%
  Sorting block of length 1642014 for bucket 20
  (Using difference cover)
  bucket 11: 100%
  Sorting block of length 2615097 for bucket 11
  (Using difference cover)
  bucket 17: 80%
  bucket 12: 90%
  bucket 18: 80%
  bucket 15: 90%
  bucket 19: 80%
  bucket 20: 20%
  bucket 21: 20%
  bucket 13: 80%
  bucket 21: 50%
  bucket 25: 30%
  bucket 22: 40%
  bucket 24: 30%
  bucket 12: 100%
  Sorting block of length 3404012 for bucket 12
  (Using difference cover)
  bucket 17: 90%
  bucket 15: 100%
  Sorting block of length 1946256 for bucket 15
  (Using difference cover)
  bucket 23: 40%
  bucket 19: 90%
  bucket 13: 90%
  bucket 18: 90%
  bucket 26: 30%
  bucket 20: 30%
  bucket 21: 30%
  bucket 27: 30%
  Sorting block time: 00:00:00
Returning block of 1642015 for bucket 20
Getting block 28 of 71
  Reserving size (4232702) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 17: 100%
  Sorting block of length 2020365 for bucket 17
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 2615098 for bucket 11
  bucket 13: 100%
  Sorting block of length 2458177 for bucket 13
  (Using difference cover)
  bucket 19: 100%
  Sorting block of length 3643327 for bucket 19
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 3165298 for bucket 19
  bucket 18: 100%
  Sorting block of length 4100564 for bucket 18
  (Using difference cover)
Getting block 22 of 72
  Reserving size (4232702) for bucket 22
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 22:
  bucket 20: 40%
  bucket 21: 40%
Getting block 29 of 71
  Reserving size (4232702) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  Sorting block time: 00:00:00
Returning block of 1946257 for bucket 15
  bucket 24: 40%
Getting block 23 of 72
  Reserving size (4232702) for bucket 23
  Calculating Z arrays for bucket 23
  Entering block accumulator loop for bucket 23:
  bucket 25: 40%
  bucket 23: 50%
  bucket 21: 60%
  Sorting block time: 00:00:01
Returning block of 3404013 for bucket 12
  bucket 27: 40%
  Sorting block time: 00:00:01
Returning block of 2020366 for bucket 17
  bucket 20: 50%
  bucket 22: 50%
  bucket 21: 50%
Getting block 24 of 72
  Reserving size (4232702) for bucket 24
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 24:
Getting block 25 of 72
  Reserving size (4232702) for bucket 25
  Calculating Z arrays for bucket 25
  Entering block accumulator loop for bucket 25:
  Sorting block time: 00:00:01
Returning block of 2458178 for bucket 13
  bucket 29: 10%
  bucket 26: 40%
Getting block 26 of 72
  Reserving size (4232702) for bucket 26
  Calculating Z arrays for bucket 26
  Entering block accumulator loop for bucket 26:
  bucket 22: 10%
  Sorting block time: 00:00:01
Returning block of 3643328 for bucket 19
  bucket 20: 60%
  Sorting block time: 00:00:01
Returning block of 4100565 for bucket 18
Getting block 27 of 72
  Reserving size (4232702) for bucket 27
  Calculating Z arrays for bucket 27
  Entering block accumulator loop for bucket 27:
  bucket 28: 10%
Getting block 28 of 72
  Reserving size (4232702) for bucket 28
  Calculating Z arrays for bucket 28
  Entering block accumulator loop for bucket 28:
  bucket 24: 50%
  bucket 23: 60%
  bucket 25: 50%
  bucket 29: 20%
  bucket 23: 10%
  bucket 21: 60%
  bucket 21: 70%
  bucket 27: 50%
  bucket 20: 70%
  bucket 25: 10%
  bucket 27: 10%
  bucket 26: 50%
  bucket 22: 60%
  bucket 24: 10%
  bucket 26: 10%
  bucket 22: 20%
  bucket 29: 30%
  bucket 20: 80%
  bucket 27: 20%
  bucket 28: 10%
  bucket 24: 60%
  bucket 23: 70%
  bucket 21: 70%
  bucket 25: 60%
  bucket 28: 20%
  bucket 23: 20%
  bucket 25: 20%
  bucket 27: 60%
  bucket 21: 80%
  bucket 29: 40%
  bucket 26: 60%
  bucket 20: 90%
  bucket 27: 30%
  bucket 22: 70%
  bucket 22: 30%
  bucket 26: 20%
  bucket 24: 20%
  bucket 23: 80%
  bucket 24: 70%
  bucket 25: 70%
  bucket 29: 50%
  bucket 21: 80%
  bucket 28: 20%
  bucket 20: 100%
  Sorting block of length 3137586 for bucket 20
  (Using difference cover)
  bucket 27: 40%
  bucket 27: 70%
  bucket 25: 30%
  bucket 28: 30%
  bucket 26: 70%
  bucket 23: 30%
  bucket 21: 90%
  bucket 27: 50%
  bucket 29: 60%
  bucket 22: 80%
  bucket 21: 90%
  bucket 22: 40%
  bucket 28: 30%
  bucket 23: 90%
  Sorting block time: 00:00:00
Returning block of 3137587 for bucket 20
  bucket 24: 80%
  bucket 26: 30%
Getting block 29 of 72
  Reserving size (4232702) for bucket 29
  Calculating Z arrays for bucket 29
  Entering block accumulator loop for bucket 29:
  bucket 25: 80%
  bucket 24: 30%
  bucket 27: 80%
  bucket 27: 60%
  bucket 29: 70%
  bucket 26: 80%
  bucket 25: 40%
  bucket 21: 100%
  Sorting block of length 3357920 for bucket 21
  (Using difference cover)
  bucket 28: 40%
  bucket 22: 90%
  bucket 23: 100%
  Sorting block of length 1934154 for bucket 23
  (Using difference cover)
  bucket 24: 90%
  bucket 25: 90%
  bucket 23: 40%
  bucket 29: 10%
  bucket 27: 90%
  bucket 29: 80%
  bucket 26: 90%
  bucket 28: 50%
  bucket 22: 100%
  Sorting block of length 3150652 for bucket 22
  (Using difference cover)
  bucket 24: 100%
  Sorting block of length 884364 for bucket 24
  (Using difference cover)
  bucket 21: 100%
  Sorting block of length 2950936 for bucket 21
  (Using difference cover)
  bucket 27: 70%
  bucket 28: 40%
  bucket 25: 100%
  Sorting block of length 4557283 for bucket 25
  (Using difference cover)
  bucket 22: 50%
  bucket 29: 90%
  bucket 27: 100%
  Sorting block of length 3989037 for bucket 27
  (Using difference cover)
  bucket 26: 100%
  Sorting block of length 2323578 for bucket 26
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 1934155 for bucket 23
  bucket 26: 40%
Getting block 30 of 71
  Reserving size (4232702) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
  Sorting block time: 00:00:00
Returning block of 884365 for bucket 24
  bucket 28: 60%
  bucket 29: 20%
Getting block 31 of 71
  Reserving size (4232702) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  bucket 24: 40%
  bucket 25: 50%
  bucket 29: 100%
  Sorting block of length 1774286 for bucket 29
  (Using difference cover)
  bucket 27: 80%
  Sorting block time: 00:00:00
Returning block of 3357921 for bucket 21
  bucket 30: 10%
Getting block 32 of 71
  Reserving size (4232702) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  bucket 31: 10%
  bucket 28: 70%
  Sorting block time: 00:00:01
Returning block of 2950937 for bucket 21
  Sorting block time: 00:00:01
Returning block of 3150653 for bucket 22
  Sorting block time: 00:00:01
Returning block of 2323579 for bucket 26
  bucket 29: 30%
Getting block 30 of 72
  Reserving size (4232702) for bucket 30
  Calculating Z arrays for bucket 30
  Entering block accumulator loop for bucket 30:
Getting block 33 of 71
  Reserving size (4232702) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
Getting block 34 of 71
  Reserving size (4232702) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  Sorting block time: 00:00:01
Returning block of 1774287 for bucket 29
Getting block 35 of 71
  Reserving size (4232702) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  bucket 23: 50%
  bucket 27: 90%
  bucket 28: 50%
  Sorting block time: 00:00:01
Returning block of 3989038 for bucket 27
  bucket 22: 60%
  Sorting block time: 00:00:01
Returning block of 4557284 for bucket 25
Getting block 36 of 71
  Reserving size (4232702) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
  bucket 30: 20%
  bucket 29: 40%
Getting block 37 of 71
  Reserving size (4232702) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  bucket 25: 60%
  bucket 31: 20%
  bucket 32: 10%
  bucket 26: 50%
  bucket 27: 100%
  Sorting block of length 3631632 for bucket 27
  (Using difference cover)
  bucket 35: 10%
  bucket 24: 50%
  bucket 30: 10%
  bucket 28: 80%
  bucket 33: 10%
  bucket 29: 50%
  bucket 28: 60%
  bucket 23: 60%
  bucket 34: 10%
  bucket 22: 70%
  bucket 30: 30%
  bucket 36: 10%
  bucket 37: 10%
  bucket 35: 20%
  bucket 25: 70%
  bucket 31: 30%
  Sorting block time: 00:00:01
Returning block of 3631633 for bucket 27
  bucket 29: 60%
Getting block 31 of 72
  Reserving size (4232702) for bucket 31
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 31:
  bucket 32: 20%
  bucket 30: 20%
  bucket 26: 60%
  bucket 24: 60%
  bucket 28: 70%
  bucket 33: 20%
  bucket 35: 30%
  bucket 28: 90%
  bucket 29: 70%
  bucket 30: 40%
  bucket 31: 10%
  bucket 34: 20%
  bucket 23: 70%
  bucket 36: 20%
  bucket 37: 20%
  bucket 31: 40%
  bucket 25: 80%
  bucket 22: 80%
  bucket 30: 30%
  bucket 29: 80%
  bucket 26: 70%
  bucket 28: 80%
  bucket 31: 20%
  bucket 35: 40%
  bucket 24: 70%
  bucket 32: 30%
  bucket 23: 80%
  bucket 25: 90%
  bucket 22: 90%
  bucket 30: 40%
  bucket 26: 80%
  bucket 29: 90%
  bucket 31: 30%
  bucket 28: 90%
  bucket 24: 80%
  bucket 23: 90%
  bucket 25: 100%
  Sorting block of length 1636920 for bucket 25
  (Using difference cover)
  bucket 33: 30%
  bucket 22: 100%
  Sorting block of length 2967406 for bucket 22
  (Using difference cover)
  bucket 30: 50%
  bucket 26: 90%
  bucket 30: 50%
  bucket 29: 100%
  Sorting block of length 3848732 for bucket 29
  (Using difference cover)
  bucket 36: 30%
  bucket 31: 40%
  bucket 28: 100%
  Sorting block of length 3814904 for bucket 28
  (Using difference cover)
  bucket 35: 50%
  bucket 24: 90%
  bucket 23: 100%
  Sorting block of length 3314398 for bucket 23
  (Using difference cover)
  bucket 31: 50%
  bucket 37: 30%
  bucket 28: 100%
  Sorting block of length 3623856 for bucket 28
  (Using difference cover)
  bucket 26: 100%
  Sorting block of length 3306801 for bucket 26
  (Using difference cover)
  bucket 30: 60%
  Sorting block time: 00:00:00
Returning block of 1636921 for bucket 25
  bucket 34: 30%
  bucket 31: 50%
Getting block 32 of 72
  Reserving size (4232702) for bucket 32
  Calculating Z arrays for bucket 32
  Entering block accumulator loop for bucket 32:
  bucket 24: 100%
  Sorting block of length 4170604 for bucket 24
  (Using difference cover)
  bucket 32: 40%
  bucket 30: 70%
  bucket 31: 60%
  bucket 35: 60%
  Sorting block time: 00:00:01
Returning block of 2967407 for bucket 22
  bucket 32: 10%
Getting block 33 of 72
  Reserving size (4232702) for bucket 33
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 33:
  bucket 30: 60%
  bucket 33: 40%
  Sorting block time: 00:00:01
Returning block of 3848733 for bucket 29
Getting block 34 of 72
  Reserving size (4232702) for bucket 34
  Calculating Z arrays for bucket 34
  Entering block accumulator loop for bucket 34:
  Sorting block time: 00:00:01
Returning block of 3314399 for bucket 23
  Sorting block time: 00:00:01
Returning block of 3814905 for bucket 28
  bucket 36: 40%
  Sorting block time: 00:00:01
Returning block of 3306802 for bucket 26
  bucket 31: 70%
Getting block 35 of 72
  Reserving size (4232702) for bucket 35
  Calculating Z arrays for bucket 35
  Entering block accumulator loop for bucket 35:
  Sorting block time: 00:00:01
Returning block of 3623857 for bucket 28
Getting block 36 of 72
  Reserving size (4232702) for bucket 36
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 36:
Getting block 37 of 72
  Reserving size (4232702) for bucket 37
  Calculating Z arrays for bucket 37
  Entering block accumulator loop for bucket 37:
  bucket 30: 80%
Getting block 38 of 71
  Reserving size (4232702) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  bucket 31: 60%
  bucket 37: 40%
  bucket 35: 70%
  bucket 34: 40%
  bucket 32: 50%
  Sorting block time: 00:00:01
Returning block of 4170605 for bucket 24
  bucket 32: 20%
  bucket 33: 10%
  bucket 34: 10%
Getting block 38 of 72
  Reserving size (4232702) for bucket 38
  Calculating Z arrays for bucket 38
  Entering block accumulator loop for bucket 38:
  bucket 31: 80%
  bucket 30: 70%
  bucket 33: 50%
  bucket 35: 80%
  bucket 30: 90%
  bucket 36: 50%
  bucket 34: 20%
  bucket 31: 90%
  bucket 35: 10%
  bucket 31: 70%
  bucket 37: 50%
  bucket 37: 10%
  bucket 36: 10%
  bucket 32: 30%
  bucket 34: 50%
  bucket 32: 60%
  bucket 33: 20%
  bucket 38: 10%
  bucket 35: 90%
  bucket 30: 80%
  bucket 33: 60%
  bucket 34: 30%
  bucket 31: 100%
  Sorting block of length 3718144 for bucket 31
  (Using difference cover)
  bucket 38: 10%
  bucket 36: 60%
  bucket 31: 80%
  bucket 37: 60%
  bucket 32: 70%
  bucket 35: 100%
  Sorting block of length 2062347 for bucket 35
  (Using difference cover)
  bucket 34: 60%
  bucket 30: 100%
  Sorting block of length 2775647 for bucket 30
  (Using difference cover)
  bucket 38: 20%
  bucket 30: 90%
  bucket 33: 70%
  bucket 36: 70%
  bucket 31: 90%
  bucket 37: 70%
  bucket 32: 80%
  bucket 34: 40%
  bucket 34: 70%
  bucket 30: 100%
  Sorting block of length 3969981 for bucket 30
  (Using difference cover)
  bucket 38: 30%
  bucket 33: 80%
  bucket 35: 20%
  Sorting block time: 00:00:01
Returning block of 2062348 for bucket 35
  bucket 36: 80%
  bucket 31: 100%
  Sorting block of length 2795837 for bucket 31
  (Using difference cover)
Getting block 39 of 71
  Reserving size (4232702) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  bucket 37: 80%
  Sorting block time: 00:00:01
Returning block of 3718145 for bucket 31
  bucket 32: 90%
  bucket 34: 80%
  bucket 37: 20%
  Sorting block time: 00:00:00
Returning block of 2775648 for bucket 30
  bucket 32: 40%
  bucket 33: 30%
Getting block 39 of 72
  Reserving size (4232702) for bucket 39
  Calculating Z arrays for bucket 39
  Entering block accumulator loop for bucket 39:
  bucket 38: 40%
  bucket 36: 20%
Getting block 40 of 72
  Reserving size (4232702) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 33: 90%
  bucket 34: 50%
  bucket 39: 10%
  bucket 36: 90%
  bucket 38: 20%
  bucket 37: 90%
  bucket 32: 100%
  Sorting block of length 3934356 for bucket 32
  (Using difference cover)
  bucket 34: 90%
  bucket 38: 50%
  bucket 33: 100%
  Sorting block of length 2744376 for bucket 33
  (Using difference cover)
  bucket 39: 20%
  bucket 36: 100%
  Sorting block of length 2861773 for bucket 36
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 2795838 for bucket 31
  bucket 37: 100%
  Sorting block of length 3781571 for bucket 37
  (Using difference cover)
Getting block 40 of 71
  Reserving size (4232702) for bucket 40
  Calculating Z arrays for bucket 40
  Entering block accumulator loop for bucket 40:
  bucket 34: 100%
  Sorting block of length 3715777 for bucket 34
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3969982 for bucket 30
  bucket 40: 10%
  bucket 38: 60%
  bucket 39: 10%
Getting block 41 of 71
  Reserving size (4232702) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  bucket 39: 30%
  bucket 40: 10%
  bucket 34: 60%
  bucket 35: 30%
  bucket 32: 50%
  bucket 33: 40%
  bucket 37: 30%
  Sorting block time: 00:00:01
Returning block of 2744377 for bucket 33
Getting block 42 of 71
  Reserving size (4232702) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  Sorting block time: 00:00:00
Returning block of 2861774 for bucket 36
  bucket 41: 10%
  Sorting block time: 00:00:01
Returning block of 3934357 for bucket 32
  bucket 38: 30%
Getting block 43 of 71
  Reserving size (4232702) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
Getting block 44 of 71
  Reserving size (4232702) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 40: 20%
  bucket 39: 20%
  bucket 38: 70%
  Sorting block time: 00:00:00
Returning block of 3781572 for bucket 37
  bucket 40: 20%
  bucket 36: 30%
  Sorting block time: 00:00:00
Returning block of 3715778 for bucket 34
Getting block 45 of 71
  Reserving size (4232702) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  bucket 39: 40%
Getting block 46 of 71
  Reserving size (4232702) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  bucket 34: 70%
  bucket 41: 20%
  bucket 43: 10%
  bucket 38: 40%
  bucket 40: 30%
  bucket 40: 30%
  bucket 33: 50%
  bucket 39: 30%
  bucket 35: 40%
  bucket 32: 60%
  bucket 44: 10%
  bucket 41: 30%
  bucket 34: 80%
  bucket 42: 10%
  bucket 43: 20%
  bucket 37: 40%
  bucket 38: 50%
  bucket 45: 10%
  bucket 40: 40%
  bucket 38: 80%
  bucket 40: 40%
  bucket 46: 10%
  bucket 39: 50%
  bucket 39: 40%
  bucket 36: 40%
  bucket 41: 40%
  bucket 43: 30%
  bucket 34: 90%
  bucket 38: 60%
  bucket 40: 50%
  bucket 33: 60%
  bucket 44: 20%
  bucket 40: 50%
  bucket 32: 70%
  bucket 35: 50%
  bucket 41: 50%
  bucket 39: 50%
  bucket 45: 20%
  bucket 43: 40%
  bucket 42: 20%
  bucket 37: 50%
  bucket 38: 70%
  bucket 46: 20%
  bucket 39: 60%
  bucket 34: 100%
  Sorting block of length 4180583 for bucket 34
  (Using difference cover)
  bucket 38: 90%
  bucket 40: 60%
  bucket 40: 60%
  bucket 41: 60%
  bucket 43: 50%
  bucket 44: 30%
  bucket 39: 60%
  bucket 33: 70%
  bucket 38: 80%
  bucket 36: 50%
  bucket 40: 70%
  bucket 40: 70%
  bucket 45: 30%
  bucket 32: 80%
  bucket 41: 70%
  bucket 46: 30%
  bucket 42: 30%
  bucket 39: 70%
  bucket 43: 60%
  Sorting block time: 00:00:01
Returning block of 4180584 for bucket 34
  bucket 35: 60%
  bucket 38: 100%
  Sorting block of length 3850645 for bucket 38
  (Using difference cover)
Getting block 41 of 72
  Reserving size (4232702) for bucket 41
  Calculating Z arrays for bucket 41
  Entering block accumulator loop for bucket 41:
  bucket 38: 90%
  bucket 39: 70%
  bucket 40: 80%
  bucket 44: 40%
  bucket 37: 60%
  bucket 40: 80%
  bucket 41: 80%
  bucket 33: 80%
  bucket 43: 70%
  bucket 45: 40%
  bucket 46: 40%
  bucket 38: 100%
  Sorting block of length 3543082 for bucket 38
  (Using difference cover)
  bucket 41: 10%
  bucket 39: 80%
  bucket 40: 90%
  bucket 40: 90%
  bucket 44: 50%
  bucket 32: 90%
  Sorting block time: 00:00:01
Returning block of 3850646 for bucket 38
  bucket 36: 60%
  bucket 41: 90%
  bucket 39: 80%
Getting block 47 of 71
  Reserving size (4232702) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 42: 40%
  bucket 43: 80%
  bucket 35: 70%
  bucket 46: 50%
  bucket 41: 20%
  bucket 37: 70%
  bucket 40: 100%
  Sorting block of length 3684978 for bucket 40
  (Using difference cover)
  bucket 40: 100%
  Sorting block of length 3909098 for bucket 40
  (Using difference cover)
  bucket 45: 50%
  Sorting block time: 00:00:00
Returning block of 3543083 for bucket 38
  bucket 39: 90%
  bucket 41: 100%
  Sorting block of length 3581465 for bucket 41
  (Using difference cover)
  bucket 33: 90%
Getting block 42 of 72
  Reserving size (4232702) for bucket 42
  Calculating Z arrays for bucket 42
  Entering block accumulator loop for bucket 42:
  bucket 32: 100%
  Sorting block of length 3891174 for bucket 32
  (Using difference cover)
  bucket 36: 70%
  bucket 43: 90%
  bucket 35: 80%
  bucket 41: 30%
  bucket 39: 100%
  Sorting block of length 1376306 for bucket 39
  (Using difference cover)
  bucket 44: 60%
  bucket 33: 100%
  Sorting block of length 776173 for bucket 33
  (Using difference cover)
  bucket 37: 80%
  bucket 42: 10%
  bucket 36: 80%
  Sorting block time: 00:00:00
Returning block of 776174 for bucket 33
  bucket 39: 90%
Getting block 43 of 72
  Reserving size (4232702) for bucket 43
  Calculating Z arrays for bucket 43
  Entering block accumulator loop for bucket 43:
  bucket 41: 40%
  bucket 35: 90%
  bucket 47: 10%
  Sorting block time: 00:00:00
Returning block of 1376307 for bucket 39
  bucket 37: 90%
Getting block 44 of 72
  Reserving size (4232702) for bucket 44
  Calculating Z arrays for bucket 44
  Entering block accumulator loop for bucket 44:
  bucket 42: 50%
  bucket 42: 20%
  bucket 43: 100%
  Sorting block of length 3681056 for bucket 43
  (Using difference cover)
  bucket 36: 90%
  bucket 45: 60%
  bucket 43: 10%
  bucket 46: 60%
  Sorting block time: 00:00:01
Returning block of 3684979 for bucket 40
  Sorting block time: 00:00:01
Returning block of 3581466 for bucket 41
  Sorting block time: 00:00:01
Returning block of 3909099 for bucket 40
  bucket 41: 50%
  bucket 35: 100%
  Sorting block of length 3146049 for bucket 35
  (Using difference cover)
Getting block 48 of 71
  Reserving size (4232702) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
Getting block 49 of 71
  Reserving size (4232702) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
Getting block 45 of 72
  Reserving size (4232702) for bucket 45
  Calculating Z arrays for bucket 45
  Entering block accumulator loop for bucket 45:
  bucket 44: 10%
  Sorting block time: 00:00:01
Returning block of 3891175 for bucket 32
  bucket 37: 100%
  Sorting block of length 4110560 for bucket 37
  (Using difference cover)
  bucket 42: 30%
  bucket 44: 70%
  bucket 36: 100%
  Sorting block of length 3695516 for bucket 36
  (Using difference cover)
  bucket 43: 20%
Getting block 46 of 72
  Reserving size (4232702) for bucket 46
  Calculating Z arrays for bucket 46
  Entering block accumulator loop for bucket 46:
  bucket 41: 60%
  bucket 45: 10%
  bucket 39: 100%
  Sorting block of length 2301317 for bucket 39
  (Using difference cover)
  bucket 44: 20%
  bucket 49: 10%
  bucket 48: 10%
  bucket 42: 40%
  bucket 47: 20%
  Sorting block time: 00:00:01
Returning block of 3681057 for bucket 43
Getting block 50 of 71
  Reserving size (4232702) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  Sorting block time: 00:00:01
Returning block of 3146050 for bucket 35
  bucket 42: 60%
Getting block 47 of 72
  Reserving size (4232702) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 45: 70%
  bucket 46: 70%
  bucket 41: 70%
  Sorting block time: 00:00:01
Returning block of 3695517 for bucket 36
  bucket 44: 80%
  Sorting block time: 00:00:01
Returning block of 4110561 for bucket 37
Getting block 48 of 72
  Reserving size (4232702) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  bucket 45: 20%
  Sorting block time: 00:00:00
Returning block of 2301318 for bucket 39
  bucket 43: 30%
  bucket 49: 20%
Getting block 49 of 72
  Reserving size (4232702) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
Getting block 51 of 71
  Reserving size (4232702) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 48: 20%
  bucket 42: 50%
  bucket 46: 10%
  bucket 44: 30%
  bucket 50: 10%
  bucket 47: 30%
  bucket 41: 80%
  bucket 45: 30%
  bucket 45: 80%
  bucket 49: 30%
  bucket 48: 30%
  bucket 42: 60%
  bucket 42: 70%
  bucket 46: 80%
  bucket 50: 20%
  bucket 44: 40%
  bucket 44: 90%
  bucket 47: 10%
  bucket 43: 40%
  bucket 49: 10%
  bucket 49: 40%
  bucket 45: 40%
  bucket 51: 10%
  bucket 48: 40%
  bucket 41: 90%
  bucket 42: 70%
  bucket 45: 90%
  bucket 47: 40%
  bucket 46: 20%
  bucket 48: 10%
  bucket 50: 30%
  bucket 44: 50%
  bucket 49: 50%
  bucket 42: 80%
  bucket 46: 90%
  bucket 48: 50%
  bucket 45: 50%
  bucket 44: 100%
  Sorting block of length 2615539 for bucket 44
  (Using difference cover)
  bucket 42: 80%
  bucket 41: 100%
  Sorting block of length 726099 for bucket 41
  (Using difference cover)
  bucket 50: 40%
  Sorting block time: 00:00:00
Returning block of 726100 for bucket 41
Getting block 50 of 72
  Reserving size (4232702) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 51: 20%
  bucket 49: 60%
  bucket 49: 20%
  bucket 43: 50%
  bucket 48: 60%
  bucket 45: 100%
  Sorting block of length 3369104 for bucket 45
  (Using difference cover)
  bucket 44: 60%
  bucket 47: 50%
  bucket 45: 60%
  Sorting block time: 00:00:00
Returning block of 2615540 for bucket 44
  bucket 47: 20%
  bucket 42: 90%
  bucket 46: 30%
Getting block 52 of 71
  Reserving size (4232702) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  bucket 46: 100%
  Sorting block of length 4006844 for bucket 46
  (Using difference cover)
  bucket 48: 20%
  bucket 50: 50%
  bucket 49: 70%
  bucket 42: 90%
  bucket 48: 70%
  bucket 50: 10%
  bucket 45: 70%
  bucket 44: 70%
  Sorting block time: 00:00:01
Returning block of 3369105 for bucket 45
  bucket 51: 30%
  bucket 42: 100%
  Sorting block of length 3922802 for bucket 42
  (Using difference cover)
Getting block 53 of 71
  Reserving size (4232702) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  bucket 49: 80%
  bucket 50: 60%
  bucket 47: 60%
  bucket 48: 80%
  bucket 49: 30%
  bucket 52: 10%
  bucket 43: 60%
  bucket 42: 100%
  Sorting block of length 3636339 for bucket 42
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4006845 for bucket 46
  bucket 51: 40%
  bucket 45: 80%
  bucket 50: 20%
  bucket 53: 10%
  bucket 49: 90%
Getting block 54 of 71
  Reserving size (4232702) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 50: 70%
  bucket 44: 80%
  bucket 48: 90%
  bucket 47: 70%
  bucket 52: 20%
  bucket 47: 30%
  bucket 46: 40%
  bucket 51: 50%
  bucket 53: 20%
  bucket 49: 100%
  Sorting block of length 3903395 for bucket 49
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 3922803 for bucket 42
  bucket 54: 10%
  bucket 47: 80%
  bucket 52: 30%
  bucket 48: 100%
  Sorting block of length 3834073 for bucket 48
  (Using difference cover)
  bucket 50: 80%
Getting block 51 of 72
  Reserving size (4232702) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 51: 60%
  bucket 45: 90%
  bucket 53: 30%
  bucket 54: 20%
  Sorting block time: 00:00:01
Returning block of 3636340 for bucket 42
  bucket 48: 30%
  bucket 47: 90%
  bucket 52: 40%
  bucket 50: 90%
Getting block 55 of 71
  Reserving size (4232702) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  bucket 50: 30%
  bucket 51: 70%
  bucket 44: 90%
  bucket 49: 40%
  bucket 43: 70%
  bucket 51: 10%
  bucket 53: 40%
  bucket 45: 100%
  Sorting block of length 2890354 for bucket 45
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3903396 for bucket 49
  Sorting block time: 00:00:01
Returning block of 3834074 for bucket 48
Getting block 56 of 71
  Reserving size (4232702) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 54: 30%
  bucket 50: 100%
  Sorting block of length 3435711 for bucket 50
  (Using difference cover)
Getting block 57 of 71
  Reserving size (4232702) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 47: 100%
  Sorting block of length 3081751 for bucket 47
  (Using difference cover)
  bucket 52: 50%
  bucket 50: 40%
  bucket 44: 100%
  Sorting block of length 2563707 for bucket 44
  (Using difference cover)
  bucket 46: 50%
  bucket 47: 40%
  bucket 51: 20%
  bucket 55: 10%
  Sorting block time: 00:00:01
Returning block of 2890355 for bucket 45
  bucket 51: 80%
  bucket 56: 10%
Getting block 52 of 72
  Reserving size (4232702) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  bucket 57: 10%
  bucket 54: 40%
  bucket 49: 50%
  bucket 53: 50%
  bucket 43: 80%
  bucket 52: 60%
  bucket 48: 40%
  Sorting block time: 00:00:01
Returning block of 3081752 for bucket 47
  Sorting block time: 00:00:01
Returning block of 2563708 for bucket 44
  Sorting block time: 00:00:01
Returning block of 3435712 for bucket 50
  bucket 50: 50%
Getting block 53 of 72
  Reserving size (4232702) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
Getting block 58 of 71
  Reserving size (4232702) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
Getting block 59 of 71
  Reserving size (4232702) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 51: 30%
  bucket 56: 20%
  bucket 52: 10%
  bucket 57: 20%
  bucket 59: 10%
  bucket 46: 60%
  bucket 55: 20%
  bucket 51: 90%
  bucket 50: 60%
  bucket 54: 50%
  bucket 53: 10%
  bucket 56: 30%
  bucket 47: 50%
  bucket 49: 60%
  bucket 52: 70%
  bucket 53: 60%
  bucket 51: 40%
  bucket 57: 30%
  bucket 43: 90%
  bucket 52: 20%
  bucket 58: 10%
  bucket 59: 20%
  bucket 56: 40%
  bucket 48: 50%
  bucket 57: 40%
  bucket 50: 70%
  bucket 55: 30%
  bucket 59: 30%
  bucket 53: 20%
  bucket 51: 50%
  bucket 52: 30%
  bucket 51: 100%
  Sorting block of length 1263943 for bucket 51
  (Using difference cover)
  bucket 54: 60%
  bucket 46: 70%
  bucket 52: 80%
  bucket 49: 70%
  bucket 53: 70%
  bucket 43: 100%
  Sorting block of length 3321229 for bucket 43
  (Using difference cover)
  bucket 56: 50%
  Sorting block time: 00:00:01
Returning block of 1263944 for bucket 51
  bucket 58: 20%
Getting block 60 of 71
  Reserving size (4232702) for bucket 60
  Calculating Z arrays for bucket 60
  Entering block accumulator loop for bucket 60:
  bucket 57: 50%
  bucket 59: 40%
  bucket 47: 60%
  bucket 51: 60%
  bucket 50: 80%
  bucket 52: 40%
  bucket 53: 30%
  bucket 55: 40%
  bucket 56: 60%
  bucket 59: 50%
  bucket 57: 60%
  Sorting block time: 00:00:00
Returning block of 3321230 for bucket 43
  bucket 48: 60%
  bucket 54: 70%
Getting block 54 of 72
  Reserving size (4232702) for bucket 54
  Calculating Z arrays for bucket 54
  Entering block accumulator loop for bucket 54:
  bucket 53: 80%
  bucket 51: 70%
  bucket 52: 90%
  bucket 49: 80%
  bucket 52: 50%
  bucket 50: 90%
  bucket 46: 80%
  bucket 53: 40%
  bucket 58: 30%
  bucket 56: 70%
  bucket 60: 10%
  bucket 59: 60%
  bucket 57: 70%
  bucket 47: 70%
  bucket 51: 80%
  bucket 55: 50%
  bucket 52: 60%
  bucket 56: 80%
  bucket 50: 100%
  Sorting block of length 3725960 for bucket 50
  (Using difference cover)
  bucket 59: 70%
  bucket 53: 50%
  bucket 54: 80%
  bucket 52: 100%
  Sorting block of length 3498833 for bucket 52
  (Using difference cover)
  bucket 48: 70%
  bucket 53: 90%
  bucket 57: 80%
  bucket 49: 90%
  bucket 54: 10%
  bucket 58: 40%
  bucket 60: 20%
  bucket 51: 90%
  bucket 56: 90%
  bucket 52: 70%
  bucket 59: 80%
  bucket 46: 90%
  bucket 57: 90%
  bucket 55: 60%
  Sorting block time: 00:00:01
Returning block of 3725961 for bucket 50
  bucket 53: 60%
Getting block 55 of 72
  Reserving size (4232702) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  Sorting block time: 00:00:01
Returning block of 3498834 for bucket 52
  bucket 54: 90%
Getting block 61 of 71
  Reserving size (4232702) for bucket 61
  Calculating Z arrays for bucket 61
  Entering block accumulator loop for bucket 61:
  bucket 56: 100%
  Sorting block of length 4072221 for bucket 56
  (Using difference cover)
  bucket 51: 100%
  Sorting block of length 3753875 for bucket 51
  (Using difference cover)
  bucket 59: 90%
  bucket 53: 100%
  Sorting block of length 3614995 for bucket 53
  (Using difference cover)
  bucket 52: 80%
  bucket 47: 80%
  bucket 58: 50%
  bucket 57: 100%
  Sorting block of length 3039627 for bucket 57
  (Using difference cover)
  bucket 60: 30%
  bucket 49: 100%
  Sorting block of length 2397363 for bucket 49
  (Using difference cover)
  bucket 59: 100%
  Sorting block of length 3566736 for bucket 59
  (Using difference cover)
  bucket 53: 70%
  bucket 48: 80%
  bucket 54: 20%
  bucket 55: 10%
  bucket 55: 70%
  bucket 46: 100%
  Sorting block of length 3942231 for bucket 46
  (Using difference cover)
  bucket 52: 90%
  bucket 61: 10%
  bucket 54: 100%
  Sorting block of length 2065742 for bucket 54
  (Using difference cover)
  bucket 47: 90%
  Sorting block time: 00:00:01
Returning block of 3753876 for bucket 51
  bucket 58: 60%
  bucket 48: 90%
  bucket 53: 80%
  bucket 55: 20%
Getting block 56 of 72
  Reserving size (4232702) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  Sorting block time: 00:00:01
Returning block of 3614996 for bucket 53
  bucket 54: 30%
  Sorting block time: 00:00:01
Returning block of 3039628 for bucket 57
  Sorting block time: 00:00:01
Returning block of 4072222 for bucket 56
  bucket 52: 100%
  Sorting block of length 2804435 for bucket 52
  (Using difference cover)
Getting block 62 of 71
  Reserving size (4232702) for bucket 62
  Calculating Z arrays for bucket 62
  Entering block accumulator loop for bucket 62:
Getting block 63 of 71
  Reserving size (4232702) for bucket 63
  Calculating Z arrays for bucket 63
  Entering block accumulator loop for bucket 63:
  Sorting block time: 00:00:01
Returning block of 2397364 for bucket 49
Getting block 64 of 71
  Reserving size (4232702) for bucket 64
  Calculating Z arrays for bucket 64
  Entering block accumulator loop for bucket 64:
Getting block 57 of 72
  Reserving size (4232702) for bucket 57
  Calculating Z arrays for bucket 57
  Entering block accumulator loop for bucket 57:
  bucket 60: 40%
  bucket 47: 100%
  Sorting block of length 4064311 for bucket 47
  (Using difference cover)
  bucket 48: 100%
  Sorting block of length 2905377 for bucket 48
  (Using difference cover)
  bucket 55: 30%
  bucket 53: 90%
  Sorting block time: 00:00:00
Returning block of 2065743 for bucket 54
  bucket 56: 10%
  bucket 54: 40%
Getting block 65 of 71
  Reserving size (4232702) for bucket 65
  Calculating Z arrays for bucket 65
  Entering block accumulator loop for bucket 65:
  Sorting block time: 00:00:00
Returning block of 3566737 for bucket 59
Getting block 66 of 71
  Reserving size (4232702) for bucket 66
  Calculating Z arrays for bucket 66
  Entering block accumulator loop for bucket 66:
  bucket 57: 10%
  bucket 55: 40%
  bucket 53: 100%
  Sorting block of length 2167052 for bucket 53
  (Using difference cover)
  bucket 56: 20%
  Sorting block time: 00:00:00
Returning block of 3942232 for bucket 46
  bucket 61: 20%
  bucket 63: 10%
  bucket 55: 80%
  bucket 64: 10%
  bucket 54: 50%
  bucket 58: 70%
  Sorting block time: 00:00:00
Returning block of 2804436 for bucket 52
Getting block 58 of 72
  Reserving size (4232702) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
Getting block 59 of 72
  Reserving size (4232702) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 57: 20%
  Sorting block time: 00:00:01
Returning block of 2905378 for bucket 48
  bucket 66: 10%
Getting block 60 of 72
  Reserving size (4232702) for bucket 60
  Calculating Z arrays for bucket 60
  Entering block accumulator loop for bucket 60:
  bucket 55: 50%
  Sorting block time: 00:00:01
Returning block of 2167053 for bucket 53
  bucket 56: 30%
  bucket 63: 20%
Getting block 61 of 72
  Reserving size (4232702) for bucket 61
  Calculating Z arrays for bucket 61
  Entering block accumulator loop for bucket 61:
  Sorting block time: 00:00:01
Returning block of 4064312 for bucket 47
  bucket 62: 10%
  bucket 65: 10%
  bucket 64: 20%
  bucket 60: 50%
Getting block 62 of 72
  Reserving size (4232702) for bucket 62
  Calculating Z arrays for bucket 62
  Entering block accumulator loop for bucket 62:
  bucket 59: 10%
  bucket 66: 20%
  bucket 61: 30%
  bucket 63: 30%
  bucket 58: 80%
  bucket 54: 60%
  bucket 55: 60%
  bucket 56: 40%
  bucket 64: 30%
  bucket 55: 90%
  bucket 58: 10%
  bucket 61: 10%
  bucket 66: 30%
  bucket 59: 20%
  bucket 65: 20%
  bucket 62: 20%
  bucket 63: 40%
  bucket 60: 60%
  bucket 57: 30%
  bucket 64: 40%
  bucket 61: 40%
  bucket 60: 10%
  bucket 56: 50%
  bucket 66: 40%
  bucket 55: 70%
  bucket 61: 20%
  bucket 58: 90%
  bucket 62: 10%
  bucket 63: 50%
  bucket 59: 30%
  bucket 55: 100%
  Sorting block of length 3911651 for bucket 55
  (Using difference cover)
  bucket 64: 50%
  bucket 66: 50%
  bucket 54: 70%
  bucket 58: 20%
  bucket 65: 30%
  bucket 56: 60%
  bucket 55: 80%
  bucket 60: 70%
  bucket 62: 30%
  bucket 61: 50%
  bucket 63: 60%
  bucket 59: 40%
  bucket 66: 60%
  bucket 61: 30%
  bucket 64: 60%
  Sorting block time: 00:00:01
Returning block of 3911652 for bucket 55
  bucket 58: 100%
  Sorting block of length 3825482 for bucket 58
  (Using difference cover)
  bucket 56: 70%
  bucket 57: 40%
Getting block 67 of 71
  Reserving size (4232702) for bucket 67
  Calculating Z arrays for bucket 67
  Entering block accumulator loop for bucket 67:
  bucket 60: 20%
  bucket 63: 70%
  bucket 65: 40%
  bucket 55: 90%
  bucket 66: 70%
  bucket 62: 20%
  bucket 59: 50%
  bucket 64: 70%
  bucket 61: 60%
  bucket 61: 40%
  bucket 54: 80%
  bucket 60: 80%
  bucket 58: 30%
  bucket 62: 40%
  bucket 56: 80%
  bucket 63: 80%
  Sorting block time: 00:00:01
Returning block of 3825483 for bucket 58
  bucket 65: 50%
  bucket 66: 80%
  bucket 59: 60%
Getting block 68 of 71
  Reserving size (4232702) for bucket 68
  Calculating Z arrays for bucket 68
  Entering block accumulator loop for bucket 68:
  bucket 55: 100%
  Sorting block of length 2707354 for bucket 55
  (Using difference cover)
  bucket 64: 80%
  bucket 67: 10%
  bucket 61: 70%
  bucket 61: 50%
  bucket 56: 90%
  bucket 57: 50%
  bucket 63: 90%
  bucket 66: 90%
  Sorting block time: 00:00:00
Returning block of 2707355 for bucket 55
  bucket 60: 30%
  bucket 59: 70%
  bucket 64: 90%
Getting block 63 of 72
  Reserving size (4232702) for bucket 63
  Calculating Z arrays for bucket 63
  Entering block accumulator loop for bucket 63:
  bucket 60: 90%
  bucket 62: 50%
  bucket 65: 60%
  bucket 62: 30%
  bucket 58: 40%
  bucket 54: 90%
  bucket 68: 10%
  bucket 56: 100%
  Sorting block of length 4110378 for bucket 56
  (Using difference cover)
  bucket 61: 60%
  bucket 66: 100%
  Sorting block of length 2144157 for bucket 66
  (Using difference cover)
  bucket 63: 100%
  Sorting block of length 3410372 for bucket 63
  (Using difference cover)
  bucket 61: 80%
  bucket 67: 20%
  bucket 64: 100%
  Sorting block of length 4116095 for bucket 64
  (Using difference cover)
  bucket 59: 80%
  bucket 63: 10%
  Sorting block time: 00:00:00
Returning block of 2144158 for bucket 66
  bucket 65: 70%
Getting block 69 of 71
  Reserving size (4232702) for bucket 69
  Calculating Z arrays for bucket 69
  Entering block accumulator loop for bucket 69:
  bucket 60: 100%
  Sorting block of length 4014407 for bucket 60
  (Using difference cover)
  bucket 68: 20%
  Sorting block time: 00:00:00
Returning block of 3410373 for bucket 63
  bucket 62: 60%
Getting block 70 of 71
  Reserving size (4232702) for bucket 70
  Calculating Z arrays for bucket 70
  Entering block accumulator loop for bucket 70:
  Sorting block time: 00:00:00
Returning block of 4110379 for bucket 56
  bucket 61: 70%
  bucket 61: 90%
  bucket 57: 60%
  bucket 59: 90%
Getting block 64 of 72
  Reserving size (4232702) for bucket 64
  Calculating Z arrays for bucket 64
  Entering block accumulator loop for bucket 64:
  bucket 60: 40%
  bucket 58: 50%
  bucket 62: 40%
  bucket 67: 30%
  bucket 69: 10%
  bucket 54: 100%
  Sorting block of length 3841993 for bucket 54
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4116096 for bucket 64
  bucket 63: 20%
Getting block 71 of 71
  Reserving size (4232702) for bucket 71
  Calculating Z arrays for bucket 71
  Entering block accumulator loop for bucket 71:
  bucket 70: 10%
  bucket 65: 80%
  bucket 59: 100%
  Sorting block of length 3877300 for bucket 59
  (Using difference cover)
  bucket 69: 20%
  bucket 64: 10%
  bucket 61: 80%
  Sorting block time: 00:00:01
Returning block of 4014408 for bucket 60
  bucket 71: 10%
  bucket 68: 30%
  bucket 62: 70%
  bucket 61: 100%
  Sorting block of length 4116636 for bucket 61
  (Using difference cover)
  bucket 70: 20%
  bucket 63: 30%
  bucket 71: 20%
  bucket 67: 40%
  Sorting block time: 00:00:00
Returning block of 3841994 for bucket 54
  bucket 57: 70%
Getting block 65 of 72
  Reserving size (4232702) for bucket 65
  Calculating Z arrays for bucket 65
  Entering block accumulator loop for bucket 65:
  bucket 69: 30%
  bucket 58: 60%
  bucket 64: 20%
  bucket 71: 30%
  bucket 61: 90%
  bucket 70: 30%
  bucket 60: 50%
  bucket 62: 50%
  bucket 65: 90%
  Sorting block time: 00:00:01
Returning block of 3877301 for bucket 59
Getting block 66 of 72
  Reserving size (4232702) for bucket 66
  Calculating Z arrays for bucket 66
  Entering block accumulator loop for bucket 66:
  bucket 63: 40%
  bucket 69: 40%
  bucket 68: 40%
  bucket 71: 40%
  Sorting block time: 00:00:01
Returning block of 4116637 for bucket 61
  bucket 62: 80%
  bucket 64: 30%
  bucket 67: 50%
  bucket 70: 40%
  bucket 71: 50%
  bucket 61: 100%
  Sorting block of length 1671309 for bucket 61
  (Using difference cover)
  bucket 69: 50%
  bucket 65: 10%
  bucket 66: 10%
  bucket 65: 100%
  Sorting block of length 3146110 for bucket 65
  (Using difference cover)
  bucket 63: 50%
  bucket 71: 60%
  bucket 58: 70%
  bucket 57: 80%
  bucket 70: 50%
  Sorting block time: 00:00:01
Returning block of 1671310 for bucket 61
Getting block 67 of 72
  Reserving size (4232702) for bucket 67
  Calculating Z arrays for bucket 67
  Entering block accumulator loop for bucket 67:
  bucket 68: 50%
  bucket 64: 40%
  bucket 60: 60%
  bucket 62: 60%
  bucket 69: 60%
  bucket 62: 90%
  bucket 71: 70%
  bucket 67: 60%
  bucket 70: 60%
  bucket 66: 20%
  bucket 63: 60%
  bucket 71: 80%
  bucket 69: 70%
  Sorting block time: 00:00:00
Returning block of 3146111 for bucket 65
  bucket 64: 50%
  bucket 67: 10%
  bucket 68: 60%
  bucket 65: 20%
  bucket 71: 90%
  bucket 58: 80%
  bucket 70: 70%
  bucket 69: 80%
  bucket 66: 30%
  bucket 62: 100%
  Sorting block of length 3261008 for bucket 62
  (Using difference cover)
  bucket 57: 90%
  bucket 67: 70%
  bucket 63: 70%
  bucket 71: 100%
  Sorting block of length 4037196 for bucket 71
  (Using difference cover)
  bucket 64: 60%
  bucket 70: 80%
  bucket 62: 70%
  bucket 67: 20%
  bucket 60: 70%
  bucket 68: 70%
  bucket 69: 90%
  bucket 66: 40%
  bucket 67: 80%
  Sorting block time: 00:00:00
Returning block of 3261009 for bucket 62
  bucket 65: 30%
  bucket 64: 70%
  bucket 63: 80%
  bucket 70: 90%
  bucket 58: 90%
  bucket 67: 30%
  bucket 57: 100%
  Sorting block of length 2764438 for bucket 57
  (Using difference cover)
  bucket 69: 100%
  Sorting block of length 2800223 for bucket 69
  (Using difference cover)
  bucket 66: 50%
  bucket 62: 80%
  bucket 60: 80%
  Sorting block time: 00:00:01
Returning block of 4037197 for bucket 71
  bucket 65: 40%
  bucket 63: 90%
  bucket 64: 80%
  bucket 58: 100%
  Sorting block of length 1553729 for bucket 58
  (Using difference cover)
  bucket 67: 40%
  bucket 68: 80%
  bucket 66: 60%
  bucket 60: 90%
  bucket 67: 90%
  bucket 70: 100%
  Sorting block of length 2735065 for bucket 70
  (Using difference cover)
  bucket 62: 90%
  bucket 63: 100%
  Sorting block of length 3884617 for bucket 63
  (Using difference cover)
  bucket 65: 50%
  bucket 64: 90%
  bucket 67: 50%
  Sorting block time: 00:00:00
Returning block of 2764439 for bucket 57
  Sorting block time: 00:00:00
Returning block of 1553730 for bucket 58
Getting block 68 of 72
  Reserving size (4232702) for bucket 68
  Calculating Z arrays for bucket 68
  Entering block accumulator loop for bucket 68:
  Sorting block time: 00:00:00
Returning block of 2800224 for bucket 69
Getting block 69 of 72
  Reserving size (4232702) for bucket 69
  Calculating Z arrays for bucket 69
  Entering block accumulator loop for bucket 69:
  bucket 66: 70%
  bucket 60: 100%
  Sorting block of length 3741719 for bucket 60
  (Using difference cover)
  bucket 62: 100%
  Sorting block of length 3789291 for bucket 62
  (Using difference cover)
  bucket 68: 90%
  bucket 67: 100%
  Sorting block of length 3430403 for bucket 67
  (Using difference cover)
  bucket 64: 100%
  Sorting block of length 3036162 for bucket 64
  (Using difference cover)
  bucket 65: 60%
  Sorting block time: 00:00:00
Returning block of 2735066 for bucket 70
  bucket 67: 60%
  bucket 66: 80%
  bucket 68: 100%
  Sorting block of length 3417514 for bucket 68
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 3884618 for bucket 63
Getting block 70 of 72
  Reserving size (4232702) for bucket 70
  Calculating Z arrays for bucket 70
  Entering block accumulator loop for bucket 70:
  Sorting block time: 00:00:01
Returning block of 3741720 for bucket 60
  bucket 68: 10%
Getting block 71 of 72
  Reserving size (4232702) for bucket 71
  Calculating Z arrays for bucket 71
  Entering block accumulator loop for bucket 71:
  Sorting block time: 00:00:01
Returning block of 3789292 for bucket 62
  Sorting block time: 00:00:01
Returning block of 3036163 for bucket 64
Getting block 72 of 72
  Reserving size (4232702) for bucket 72
  Calculating Z arrays for bucket 72
  Entering block accumulator loop for bucket 72:
  Sorting block time: 00:00:01
Returning block of 3430404 for bucket 67
  bucket 69: 10%
  bucket 67: 70%
  bucket 66: 90%
  bucket 65: 70%
  bucket 70: 10%
  Sorting block time: 00:00:00
Returning block of 3417515 for bucket 68
  bucket 67: 80%
  bucket 66: 100%
  Sorting block of length 4076538 for bucket 66
  (Using difference cover)
  bucket 72: 10%
  bucket 70: 20%
  bucket 68: 20%
  bucket 71: 10%
  bucket 69: 20%
  bucket 67: 90%
  bucket 65: 80%
  bucket 70: 30%
  Sorting block time: 00:00:01
Returning block of 4076539 for bucket 66
  bucket 72: 20%
  bucket 67: 100%
  Sorting block of length 3414814 for bucket 67
  (Using difference cover)
  bucket 70: 40%
  bucket 68: 30%
  bucket 69: 30%
  bucket 71: 20%
  Sorting block time: 00:00:00
Returning block of 3414815 for bucket 67
  bucket 70: 50%
  bucket 65: 90%
  bucket 72: 30%
  bucket 68: 40%
  bucket 70: 60%
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 112886029
fchr[G]: 155561511
fchr[T]: 155561511
fchr[$]: 225744106
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 80219494 bytes to primary EBWT file: BS_GA.rev.1.bt2.tmp
Wrote 56436032 bytes to secondary EBWT file: BS_GA.rev.2.bt2.tmp
  bucket 72: 40%
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 225744106
    bwtLen: 225744107
    sz: 56436027
    bwtSz: 56436027
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14109007
    offsSz: 56436028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1175751
    numLines: 1175751
    ebwtTotLen: 75248064
    ebwtTotSz: 75248064
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:05
  bucket 69: 40%
  bucket 70: 70%
  bucket 71: 30%
  bucket 65: 100%
  Sorting block of length 2990176 for bucket 65
  (Using difference cover)
  bucket 69: 50%
  bucket 68: 50%
  bucket 72: 50%
  bucket 70: 80%
  Sorting block time: 00:00:01
Returning block of 2990177 for bucket 65
  bucket 69: 60%
  bucket 70: 90%
  bucket 71: 40%
  bucket 72: 60%
  bucket 69: 70%
  bucket 68: 60%
  bucket 70: 100%
  Sorting block of length 3665338 for bucket 70
  (Using difference cover)
  bucket 69: 80%
  bucket 72: 70%
  bucket 71: 50%
  Sorting block time: 00:00:00
Returning block of 3665339 for bucket 70
  bucket 68: 70%
  bucket 69: 90%
  bucket 72: 80%
  bucket 71: 60%
  bucket 69: 100%
  Sorting block of length 3551669 for bucket 69
  (Using difference cover)
  bucket 72: 90%
  bucket 68: 80%
  bucket 71: 70%
  bucket 72: 100%
  Sorting block of length 1846065 for bucket 72
  (Using difference cover)
  bucket 68: 90%
  Sorting block time: 00:00:01
Returning block of 3551670 for bucket 69
  bucket 71: 80%
  Sorting block time: 00:00:01
Returning block of 1846066 for bucket 72
  bucket 68: 100%
  Sorting block of length 4067515 for bucket 68
  (Using difference cover)
  bucket 71: 90%
  bucket 71: 100%
  Sorting block of length 2863419 for bucket 71
  (Using difference cover)
  Sorting block time: 00:00:01
Returning block of 4067516 for bucket 68
  Sorting block time: 00:00:00
Returning block of 2863420 for bucket 71
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 70184129
fchr[G]: 70184129
fchr[T]: 112886029
fchr[$]: 225744106
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 80219494 bytes to primary EBWT file: BS_CT.rev.1.bt2.tmp
Wrote 56436032 bytes to secondary EBWT file: BS_CT.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 225744106
    bwtLen: 225744107
    sz: 56436027
    bwtSz: 56436027
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 14109007
    offsSz: 56436028
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 1175751
    numLines: 1175751
    ebwtTotLen: 75248064
    ebwtTotSz: 75248064
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:01:10
